[
{
  "model": "articles.article",
  "pk": 1,
  "fields": {
    "registration_time": "2022-07-12T13:08:03Z",
    "slug": "nativnyj-marketingovyj-instrument-app-store-i-google-play-ili-kak-rasskazat-ob-apdejte-pryamo-na-stranice-prilozheniya",
    "is_active": true,
    "title": "Нативный маркетинговый инструмент App Store и Google Play или Как рассказать об апдейте прямо на странице приложения",
    "body": "Лайв-опсами можно назвать любые апдейты и ивенты в приложении. Раньше в App Store и Google Play не было нативных маркетинговых инструментов для их продвижения, затем появились лайв-опс карточки. Они могут в сторе познакомить пользователя с игровыми ивентами, и ему даже апдейт качать не придется.   Звучит просто, но, как всегда, есть море подводных камней и не самый очевидный процесс создания этих карточек. В статье разберемся, какие материалы нужно подготовить отделу маркетинга, и что сделать в проекте, чтобы успешно пройти проверку сторов.  Лайв-опс карточки — удовольствие не для всех разработчиков. Чтобы получить к ним доступ, нужно не только поддерживать постоянный контакт с биздевами App Store и Google Play, но и быть для них интересными. Таким образом площадки ограничивают поток заявок.  Понятных гайдов по созданию карточек в App Store и Google Play до сих пор не много. В свое время мы многое изучали методом тыка или общением с саппортом магазинов. Обычно по официальным гайдлайнам все становится понятно, но на деле и простые поля вызывают сложности — ревьюеры могут задавать дополнительные вопросы и отклонять заявки по разным причинам.  Например, мы получали реджекты из-за неподходящих текстов или недостаточно подробного описания ивента. Приходилось расписывать по пунктам, сколько пушек добавили, какие скины/аватары/игровые режимы будут доступны и так далее. Текстовые поля мелкие (от 30 до 120 символов), поэтому уместить в них и описание и ключи для индексации не так просто.   Пришлось некоторое время разбираться и привыкать, зато теперь процесс понятен. Дальше расскажу шаги отдельно по каждому стору: какие параметры необходимо заполнять, и что за что отвечает.  Что нужно для создания лайв-опс карточки Стоит заранее подготовить:  1. Сам ивент. Он должен быть целиком продуман со стороны продукта и находиться на стадии активного вливания в следующий апдейт. Им может стать, например, временное хэллоуинское событие с уникальным режимом.  2. Маркетинговые материалы:  Графические баннеры разных разрешений и соотношений (об этом ниже).  Тексты: названия, заголовки, описание контента на разных языках с ключами для индексации.  Прямая ссылка на событие (в случае App Store).  Видео (при необходимости и наличии ресурсов).  3. Возможность публиковать лайв-опс карточки. Для этого нужно иметь контакты с менеджерами сторов и представлять для них интерес — тогда в кабинете разработчика появится нужная опция.  Все пункты выполнены? Переходим к созданию карточки.  Создание карточки в Google Play На Android эта фича называется Google Play LiveOps. Чтобы создать лайв-опс карточку, нужно в личном кабинете разработчика по очереди заполнить все поля.   1. Название события. Неиндексирующееся на предмет ключевых слов поле, которое не увидит пользователь. В 80 символов можно уместить все, что захочется, хоть «Best Event Ever» — почему нет?  2. Тип события. Первое по-настоящему важное поле. Гайдлайн Google Play насчитывает 5 вариантов ивентов на выбор разработчика:  Специальное предложение — скидки и бесплатные товары. Например, акция, приуроченная к Хэллоуину или Китайскому Новому году.  Главное условие для выбора этого типа: вы должны предоставить скидку и эксклюзивный бесплатный контент. Специальные предложения, как правило, либо ограничены по времени (до 28 дней), либо бессрочны, если нацелены на определенные типы пользователей. Акции могут распространяться на цифровые и физические товары/услуги или выгодные предложения в виде эксклюзивного бесплатного контента.  Событие — внутриигровые ивенты с ограничением по времени. Например, командные соревнования, турниры, PvP и подобные штуки.  Выбирайте этот тип, если в рамках вашего события не будет бесплатного эксклюзивного контента или скидок.  Крупное обновление — когда вы подготовили очень много контента. В случае Pixel Gun 3D это, например, новые игровые режимы, оружие, скины или карты со сторилайном. В общем, не из разряда bug fixes, а что-то свежее и интересное для пользователя.  Но есть ограничение: максимальное время показа карточек такого типа — неделя. Поэтому если между релизами проходит много времени (обычно около месяца), а продвигаться в сторе хочется дольше, то ловите небольшой лайфхак.  Google позволяет скопировать содержимое уже отработавшей карточки в новую. Можно повторно запустить точно такое же событие еще на неделю, а потом еще и еще. Только сами не запутайтесь.  Кроссовер — игровые коллаборации и ивенты, проводимые совместно с другими компаниями. Здесь и добавить нечего.  Обновление предварительной регистрации — особый тип события, который актуален для проектов в стадии предварительной регистрации. Как правило, они доступны ограниченному кругу пользователей (например, с определенным девайсом/версией ОС и т.д.). Проекты уже как бы есть в сторе, но не все могут скачать альфа или бета-версию.  Грубо говоря, здесь можно оповестить своих пользователей о новом контенте, который доступен только им.  3. Страны/регионы. Здесь выбираются рынки, где нужно продвигать событие. Можно взять абсолютно любое количество стран из 176 штук (хоть одну, хоть все) в зависимости от маркетинговых целей.  4. Дата и время начала/окончания. Тут все понятно. Просто обозначьте продолжительность ивента.   5. Предварительный просмотр события. Если нужно подогреть интерес юзеров, то здесь настраивается дата и время появления в разделе «Скоро!» (только на Android-девайсе, в вебе его нет). В таком случае карточка перенаправит пользователя либо на загрузку приложения, либо откроет установленное.  6. Приоритет. Обычный, высокий, очень высокий. Приоритет влияет только на последовательность отображения ваших событий между собой, а не с событиями других разработчиков.  Если приоритет обычный или высокий, то заявку можно подать хоть за день до старта ивента. Но лучше не тянуть и приготовиться хотя бы за три дня.   Если приоритет очень высокий, то:  Его можно запустить только раз в квартал. Поэтому подходите к планированию ивентов и их приоритетов внимательно;  Такое событие нужно сохранить в черновиках минимум за 30 дней до старта ивента. На практике это требование работает не всегда. Но если опаздываете, то будьте готовы, что в последний вагон запрыгнуть уже не выйдет. Или выйдет. 50/50.  7. Слоган и описание. Слоган — обязательное поле, где за 80 символов нужно максимально точно описать суть события. Если в ивенте есть скидка, то указывайте ее прямо там (пожалуй, это одно из немногих полей для продвижения в Google Play, где еще разрешено так делать).   Описание отображается в сторе вместе со слоганом, поэтому поля должны содержать разный текст. Распишите подробнее и подумайте, чем привлечь юзеров (на это есть 500 символов). Используйте ключевые слова — есть вполне реальный шанс по ним проиндексироваться. Главное — не переборщить.   8. Основное изображение и квадратное изображение. Эти картинки станут обложкой ивента, который будет показываться пользователю на странице приложения в сторе. Они должны отражать суть события.  Здесь можно использовать как одинаковую, так и разную графику. Тут уже отталкивайтесь от загрузки вашего арт-отдела.  Технические требования такие:   основное изображение: 16:9, 1920×1080;  квадратное изображение: 1:1, 1080×1080.    9. Видео. Пункт необязательный и, честно говоря, крайне трудозатратный. Хоть и «настоятельно рекомендуется» самой площадкой (продвигать того, кто постарался больше остальных, куда приятнее). По классике в Google Play видео размещается ссылкой с YouTube.  Пункты с 7 по 9 можно локализовать на любое количество языков. Никаких ограничений, здесь вопрос лишь в приоритетах по рынкам и бюджетах. Все локализации добавляются в рамках одной заявки:   10. Сохранение проекта. Когда заполнили все пункты, событие нужно сохранить как проект (то есть в черновик, с которым можно работать позже) или же сразу отправить на проверку.  Важно: после отправки события на проверку, в нем ничего нельзя изменить. Платформа предупредит об этом, чтобы вы могли дополнительно все перепроверить.  Создание карточки в App Store В App Store карточки событий появились еще раньше, чем в Google Play. Называются они App Store In-App Events, логика очень похожа. Пройдемся также по пунктам, а потом посмотрим на различия.  Раздел «Информация о событии»  1. Название. Не более 30 символов, индексируется на предмет ключевых слов. Много ключевиков в такое короткое поле не зашьешь, да и один, если честно, не всегда выходит. К тому же Apple довольно придирчивы к самому тексту. Рискованно писать что-то расплывчатое — попросят объяснить, что вы имели в виду. Хотя всегда можно пояснить название в подробном описании и расписать, что конкретно входит в ивент.  2. Краткое описание. Содержит 50 символов и тоже индексируется на предмет ключевых слов. Располагается внизу баннера сразу под основным названием. Может содержать СТА (click to action) — что угодно, чтобы привлечь пользователей.  Краткое описание на баннере Краткое описание на баннере 3. Медиаматериалы карточки события. По размерам и разрешениям этот пункт почти не отличается от аналогичного в Google Play (16:9, 1920×1080), за исключением одного момента: нижняя часть карточки всегда блюрится самой Apple. Как мы в Pixel Gun 3D боремся с этим, я расскажу чуть ниже.  Также вместо статичного баннера в это поле можно добавить видео (тут уже требований побольше, они есть по ссылке в разделе ​​«Image and video specifications»).  4. Подробное описание. Максимум 120 символов, неиндексирующихся на предмет ключевых слов, где вы должны максимально подробно расписать информацию об ивенте.  5. Медиаматериалы страницы с информацией о событии. Здесь размещается вертикальное изображение (9:16, 1080×1920) или видео, используемое для представления встроенного события на странице с информацией о нем. Грубо говоря, при тапе на карточку 1920×1080 откроется именно эта карточка, которая содержит подробный текст внизу вертикального баннера.   Из нюансов — тот же самый блюр, что и в пункте 3.  6. Значок. Пункт-аналог «типу события» в Google Play. Содержит 7 вариантов:  Событие в прямом эфире — реал-тайм ивенты. Например, спортивные матчи, турниры, концерты. Обязательное требование: свежий, уникальный контент.  Премьера — нечто совершенно новое в вашем приложении.  Испытание — ивент, мотивирующий юзера успеть выполнить все цели. Например, спортивные челленджи или челленджи, где пользователь должен пройти конкретное количество уровней игры за фиксированное время.  Соревнование — событие, в котором пользователи сражаются между собой, видят результаты друг друга в турнирных таблицах, и стараются занять как можно более высокое место за уникальные награды.  Новый сезон — свежий контент, который развивает уже существующие механики или фичи.  Специальное событие — ограниченный по времени ивент, который нельзя отнести только к одному типу. Может содержать в себе сразу несколько фич, новый контент, коллаборацию и другие.  Большое обновление — когда вы приготовили очень много контента (режимы, уровни), который нельзя назвать мелкими улучшениями.  Раздел «Доступность по странам и регионам» 1. Доступность. Выбираются страны, на которых нужно продвигаться. По умолчанию выделены все 175 штук, но можно отредактировать.  2. Дата и время начала/окончания. Продолжительность ивента.  3. Дата и время начала публикации. То же, что и предварительная публикация события в Google Play — можно проставить, с какого дня и месяца событие отобразится на странице приложения.  Раздел «Дополнительная информация» 1. Оригинальное название. Не показывается пользователям, а служит лишь собственным ориентиром в отчетах. Содержит до 64 символов.  2. Прямая ссылка на событие. Одно из основных отличий карточек In-App Events от карточек Google Play LiveOps. Сюда (как правило, с помощью продукта) добавляется универсальная ссылка или специальный URL-адрес, направляющий пользователей прямо к контенту ивента в приложении.   3. Цель события. Apple предлагает четыре цели продвижения карточек:  Подходит всем пользователям — карточка будет отображаться всем пользователям iOS 15 и новее.  Привлечь новых пользователей — людей, которые никогда не загружали ваше приложение.  Держать активных пользователей в курсе — юзеров, которые загрузили приложение и недавно его открывали.  Вернуть недействительных пользователей — тех, которые установили приложение, но давно его не открывали.  Статистика по пользователям от App Store выдается крайне урезанная (начиная с iOS 14.5 и появления IDFA). Мы обычно выбираем первый тип, чтобы не резать собственную аудиторию и получить результат поинтереснее.  4. Приоритет события. Он влияет на отображение ваших карточек между собой. Приоритет либо нормальный, либо высокий.  5. Для доступа к событию требуется внутриигровая покупка. Здесь только два варианта: требуется или нет.   6. Основной язык. Как правило, это английский. Его можно поменять в настройках на основной странице приложения, если целитесь на другую геолокацию.  Как и в Google Play, по желанию можно локализовать материалы и тексты на любое количество языков в рамках одной заявки.  Особенности лайв-опс карточек по платформам Быстро пробежимся по важным отличиям и особенностям платформ.  1. Карточки событий в App Store видят только пользователи iOS 15 и новее. Учитывайте это на этапе аналитики и периодически проверяйте процент пользователей, использующих нужную версию ОС (например, через AppsFlyer).  2. В App Store могут одновременно одобрить до 10 ивентов, но опубликовать на странице разрешает только 5. В Google Play ограничивает лишь здравый смысл — не стоит перегружать страницу большим количеством событий. Юзеры могут просто растеряться от обилия контента.   4. Google сам регулирует некоторые типы событий по времени, максимальное время — до 28 дней. Apple разрешает ставить до 30 дней на любой тип ивента.  5. В App Store есть возможность предпросматривать карточки для каждой локализации. Можно сразу оценить, как будет выглядеть карточка, не обрезается ли криво графика, органично ли вписывается текст.   Думаю, все арт-отделы мира говорят дополнительное спасибо Apple. В Google такого нет, а ведь штука весьма удобная.   6. App Store блюрит нижнюю часть карточки, помещая поверх значок/название/краткое описание. Чтобы избежать лишнего головняка при согласования арта, мы придумали такую схему:  Для графики 1920×1080: рисуем основную часть композиции, 200 пикселей снизу блюрим полностью, а на следующие 100 пикселей делаем плавный переход к самому арту. По бокам оставляем по 90 пикселей с обеих сторон (иногда просто блюр), так как App Store при публикации эту часть обрезает.  Для графики 1080×1920: добавляем снизу 600 заблюренных пикселей, поверх которых будет размещен текст, а на следующие 100 пикселей делаем плавный переход. Основная часть композиции должна находиться выше.  7. Обязательным пунктом для отправки на проверку в Apple является прямая ссылка на событие. По сути нужно предоставить ревьюерам ссылку, которая будет вести юзеров именно в ту часть приложения, где проводится конкретная акция/событие/скидка.   Если пользователь уже активно пользуется приложением, то переход с карточки в сторе осуществится в зашитое в ссылке место. Если приложение установлено недавно, то карточка просто откроет приложение.  Напоследок Сложностей с заполнением формы не будет возникать — дело практики. Если все заполнено правильно, то шанс получить реджект минимален. Но и они иногда случаются.  Однажды мы получили отказ, когда ревьюер стора не разобрался, как работают диплинки. Он пробовал открыть ссылку не с мобильного девайса (с предустановленным приложением), а прямо на PC. Поэтому в тексте реджекта было указано, что ссылка ведет в браузер, а не в приложение.   Нам пришлось записывать прямо с девайса видео, где мы нажимали на ссылку, после чего запускалась игра и открывалось нужное место. Сопроводили все это вежливым текстовым пояснением о том, что чтобы диплинк сработал корректно, его нужно открывать с мобильного устройства. Ревьюера это полностью устроило, даже сказал спасибо за подробные пояснения. И такое бывает.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 4,
    "tag": [
      14,
      15,
      13
    ]
  }
},
{
  "model": "articles.article",
  "pk": 2,
  "fields": {
    "registration_time": "2022-07-12T13:19:57Z",
    "slug": "v-trafik-sajtov-opyat-vnedryayut-postoronnij-kontent-kak-zashititsya",
    "is_active": true,
    "title": "В трафик сайтов опять внедряют посторонний контент. Как защититься?",
    "body": "В последнее время участились случаи инъекций стороннего контента на страницы российских сайтов, не защищённых HTTPS. Этим занимаются некоторые операторы связи, то есть это законная практика.  Логично, что если вам противостоит легальная угроза, то от неё следует защищаться техническими средствами.  Как сообщается, фишинговые подмены в основном происходят с участием доменов *2ad.wtf и news.truth.delivery: «В параметры запроса фишингового скрипта прокидывается адрес подменённого скрипта и регион подключения абонента (в текущем случае СПб)», — пишет автор. Далее загружается уже настоящий скрипт запрашиваемого сайта, чтобы всё выглядело нормально. Вот как это делается:    По словам пользователя, его провайдер совершал инъекции крайне неприемлемой медийной рекламы с «мусорных» источников. Старая проблема  На самом деле это довольно старая проблема. Например, крупнейший в России телекоммуникационный провайдер начал встраивать рекламные баннеры на сайты без HTTPS ещё в 2020 году. Тогда представители компании пояснили, что это контекстная персонализированная реклама, которая показывается только по желанию пользователя.  Ранее ещё в 2016 году сообщалось, что из-за рекламной акции одного из мобильных операторов на мобильных сайтах СМИ появлялась реклама его фирменной услуги «Мини-кабинет». А в сентябре 2018 года другой мобильный оператор показывал абонентам рекламу своего сервиса при посещении сайта правительства.  Пользователи в комментариях к текущей записи 2022 года подтверждают наличие проблемы:  Сталкивался с этим в апреле. Переезжал, и интернет проведён не был, пришлось пользоваться телефоном в качестве модема. На проекте по работе [мобильный оператор] подменял скрипты Hubspot на такие же баннеры. [Домен] news.thruth.delivery там же фигурировал.  Такое практикуется и в сетях сотовой связи, и проводного интернета, подтверждают специалисты.  На Хабре публиковалось несколько расследований на эту тему:  Рекламные баннеры Ростелекома и как с ними бороться Вы не смотрите рекламу во время разработки? Непорядок DPI: Deep Packet INJECTION, или конспирологическая теория о заговоре между RTK и MRG  Решение проблемы — сертификат TLS  Эта история ещё раз показывает, почему все сайты без исключения должны перейти на HTTPS с шифрованием трафика. Только сертификат TLS гарантирует защиту этого канала. В него не проникнет ни провайдер, ни другие третьи лица. Инъекция стороннего контента невозможна.  Согласно отчёту исследовательской компании Frost & Sullivan, в 2018–2022 годы количество публичных сертификатов TLS выросло на 36,0%. В то же время число удостоверяющих центров (УЦ) сократилось.  Основанная в 1996 году GMO GlobalSign остаётся одним из старейших центров сертификации в мире. Компания со штаб-квартирой в Японии входит в число ведущих мировых УЦ, занимая долю 8,9% и 4-е место в 2021 году, сказано в отчёте. Как отмечается, основной рост бизнеса во время пандемии COVID-19 пришёлся на Облачный сервис цифровой подписи, который внедряет юридически законные цифровые подписи в документооборот предприятия. Здесь любой сотрудник может дистанционно подписывать любые документы.    То есть рынок сертификатов TLS вырос и количественно, и качественно — в разные стороны и сферы применения. Конечно, для защиты от вышеупомянутых инъекций «Ростелекома» достаточно стандартного сертификата Let's Encrypt, но вот более комплексные задачи требуют более цельных решений. Сегодня рынок включает в себя сертификаты для веб-приложений, защиты электронной почты, цифровых подписей, Интернета вещей (IoT) и прочих вариантов применения инфраструктуры открытых ключей (PKI).  Публичные УЦ несут огромные капитальные и операционные расходы на создание и поддержание инфраструктуры PKI. Более того, частые обновления стандартов сертификатов, навязываемые форумом CA/Browser Forum, требуют от постоянного обновления инфраструктуры, пишет Frost & Sullivan.  Последние истории в Рунете показывают, что сертификат нужен каждому сайту, даже если это самая простая страничка.  Только HTTPS может гарантировать, что никто не подменит ваш контент на пути от сервера к клиенту.",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 4,
    "tag": [
      16,
      18,
      17
    ]
  }
},
{
  "model": "articles.article",
  "pk": 3,
  "fields": {
    "registration_time": "2022-07-12T13:27:58Z",
    "slug": "headhunter-v-rossii-nachal-vosstanavlivatsya-spros-na-razrabotchikov-prilozhenij-dlya-ios-i-android",
    "is_active": true,
    "title": "HeadHunter: в России начал восстанавливаться спрос на разработчиков приложений для iOS и Android",
    "body": "HeadHunter подсчитал вакансии на позиции разработчиков мобильных приложений за месяц начиная с февраля. Их них следует, что в июне в России разместили 1,3 тыс. вакансий, связанных с разработкой для iOS, и 1,4 тыс. — для Android. Впервые с конца февраля число вакансий выросло в течение месяца, а не упало. Об этом пишет «Коммерсантъ».  Минимум объявлений об открытых позициях пришёлся на май (1024 — iOS-вакансий, 1164 — Android). Однако число вакансий не вернулось к февральскому уровню: тогда оно составляло 1,5-1,6 тыс.  Большинство вакансий мобильных разработчиков (77%) на HeadHunter разместили компании из IT-сектора. Компании из отдельных непрофильных отраслей заметно сократили наём таких специалистов с февраля по июнь: так произошло в b2b-услугах (с 183 до 125 вакансий), строительстве и недвижимости (с 69 до 11), медицине и фармацевтике (с 24 до шести).  При этом выросло количество вакансий мобильных разработчиков у компаний из сфер логистики, перевозок и внешнеэкономической деятельности (с 22 до 53), а также рекламного, дизайнерского и медиабизнеса (с 145 до 194). В HeadHunter также отметили снижение числа вакансий для junior-разработчиков (с 1887 до 1392) и рост для специалистов среднего уровня (c 1221 до 1378).  Сокращение числа вакансий для начинающих за год вне зависимости от профиля зафиксировали и в SuperJob: «IT-сфера имеет высокий порог вхождения, в приоритете — практический опыт». В компании уточнили, что в последнее время сократилось количество вакансий из-за рубежа и готовность программистов к релокации, однако не предоставили показателей, которые бы это подтверждали. В SuperJob также отметили снижение общего количества IT-вакансий по сравнению с 2021 годом на 21%.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 3,
    "tag": [
      20,
      21,
      19
    ]
  }
},
{
  "model": "articles.article",
  "pk": 4,
  "fields": {
    "registration_time": "2022-07-12T13:19:57Z",
    "slug": "chempionat-ili-viktorina-skolkovo-razygraet-25-mesyachnyh-oklada-java-razrabotchika",
    "is_active": true,
    "title": "Чемпионат или викторина? Сколково разыграет 2,5 месячных оклада Java-разработчика",
    "body": "Фонд «Сколково» и IT_One организуют чемпионат среди Java-специалистов на платформе All Cups. Участникам предлагают побороться за призовой фонд в 700 000 рублей, что в среднем по рынку соответствует 2,5-3 окладам разработчиков уровня middle и выше. Прием заявок для участия в онлайн-чемпионате открыт до 10 августа.  Понять дотягивает ли ваш уровень компетенций до борьбы с топовыми специалистами по Java вы сможете в рамках квалификационного раунда. За 5 дней участникам потребуется создать собственный сервис на заданном API. Тест квалификационных работ пройдет автоматически.  Победители, занявшие в финале чемпионата с 1 по 5 места, получат денежные призы от 80 до 250 тысяч рублей. Участники с наибольшим количеством баллов по итогам двух раундов и авторы лучших решений также получат возможность присоединиться к команде IT_One.  Павел Новиков, директор центра инноваций в финансовом секторе Фонда «Сколково» уверен, что чемпионаты – отличная возможность для компаний побороться за крутых специалистов: «Игроки рынка IT ведут активную борьбу за талантливых java-разработчиков. Хакатоны и соревнования — это один из самых востребованных и успешных инструментов для популяризации бренда компании, позволяет представить реальные рабочие задачи для потенциальных сотрудников и лучших привлечь в команду».  Вопрос: Какой должна быть ваша мотивация, чтобы вы приняли участие в подобном турнире?",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 3,
    "tag": [
      5
    ]
  }
},
{
  "model": "articles.article",
  "pk": 5,
  "fields": {
    "registration_time": "2022-07-12T13:19:57Z",
    "slug": "dizajner-predstavil-koncept-elektromobilya-teleskopa",
    "is_active": true,
    "title": "Дизайнер представил концепт электромобиля-телескопа",
    "body": "Дизайнер транспорта Хюнсик Мун (Hyunsik Moon) показал концепт электромобиля под названием Zodiac Stargazer. По замыслу автора, это умный телескоп на колесах для двух пассажиров, которые могут отправиться ночью за город и посмотреть на звезды.   В реальности такое устройство пока создать нельзя. Нет технологий для создания подобного телескопа со свободной точкой фокусировки. Также в проекте не учтена необходимость защиты линз от загрязнений. Непонятно, как именно выглядят места для размещения пассажиров и как управлять такой машиной.    Мун представил, что машина-телескоп, благодаря уникальной конструкции, может двигать кабину с помощью специального механизма и направлять её на небо, «выдвигая» объектив-«лобовое стекло» вверх, как настоящий телескоп. В этом случае водитель и пассажир лежат и смотрят на небо.    Технические детали Мун оставил без пояснений. У экспертов возникли вопросы по поводу реализации такого концепта. Им непонятно, как работает в этом случае механизм автоматической настройки резкости, как и куда именно выводится картинка с телескопа, почему на точность фокусировки не влияют находящиеся вблизи астрономической аппаратуры люди, дыхание и движения которых не позволит проводит точные астрономические наблюдения.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 1,
    "tag": [
      23
    ]
  }
},
{
  "model": "articles.article",
  "pk": 6,
  "fields": {
    "registration_time": "2022-07-12T13:19:57Z",
    "slug": "dostupnost-i-frontend-standarty-razrabotki-produktov-dlya-nezryachih-i-slabovidyashih-lyudej",
    "is_active": true,
    "title": "Доступность и frontend: стандарты разработки продуктов для незрячих и слабовидящих людей",
    "body": "Согласно данным Всемирной организации здравоохранения, серьезные проблемы со зрением испытывают около 300 миллионов человек на нашей планете. Из них более 40 миллионов являются полностью незрячими.  Это огромная цифра, для сравнения: население Испании составляет всего 60 миллионов человек. По сути, в мире существуют целые «страны», населенные людьми с ограничениями по зрению, которым точно так же хочется общаться, делиться информацией и получать знания из всемирной паутины, как и всем нам.  Проведите эксперимент: закройте глаза и попробуйте воспользоваться Интернетом – прочитать новости на сайте Яндекса, зайти в вашу любимую социальную сеть или записать голосовое сообщение в мессенджере другу. Скорее всего, у вас ничего не получится.  А ведь с подобными проблемами каждый день сталкиваются миллионы слепых людей по всему миру. Итак, как же сделать сайт или приложение более доступными для незрячих и слабовидящих?  Для начала узнаем у них самих, как такие люди взаимодействуют с компьютером и Интернетом.  Как увидеть Интернет. История Алисы.  «Я полностью потеряла зрение, когда мне было 12 лет. Было очень тяжело привыкать к новой жизни, приходилось заново учиться пользоваться компьютером и мобильным телефоном. К счастью, крупные компании, такие как IBM, Google, Сбер и Яндекс давно занимаются проблемами доступности и успешно их решают.  А многие слепые люди благодаря новейшим технологиям получили возможность работать в сети, в том числе программистами и копирайтерами. Сейчас даже появились специальные умные очки, которые сканируют окружающую среду, распознают визуальную информацию и элементы ландшафта и вслух описывают происходящее. Но пока такие технологии еще не доступны для большинства простых людей.  Многие удивляются, как же незрячий человек может прочитать новости в Интернете?  Все дело в том, что мы используем так называемые «скринридеры». Это специальные программы, которые считывают текст с экрана и воспроизводят его синтетическим голосом. Сначала было жутко неприятно слушать этот бездушный механический голос, но спустя годы он уже воспринимается как родной. Мы слушаем текст на очень высокой скорости (4.5х-5х), и это позволяет нам усваивать большие объемы информации.  Не все могут позволить себе приобрести тактильный дисплей, который воспроизводит символы с помощью шрифта Брайля. Но даже платное ПО для экранного доступа (например, JAWS) является вполне доступным для многих пользователей. В крайнем случае, всегда есть бесплатные аналоги с открытым кодом, такие как NVDA.  Почти все скринридеры работают в браузерах Internet Explorer и Firefox. Google Chrome слепые люди используют довольно редко. Он не позволяет читать текст в заполненных формах, и вообще с ним сложно работать. Такая же история с Opera и Яндекс-браузером, хотя сами поисковые системы очень удобные и позволяют легко ориентироваться и воспринимать контент, как и главный сайт Яндекса.  Я, как и многие мои слепые друзья, для общения используем социальные сети – Вконтакте и ее американский аналог, но предпочитаем мобильную версию. Помимо этого мы пользуемся теми же приложениями, что и люди с нормальным зрением: Яндекс Диском и Google Drive, например, для обмена файлами.  Работаем на самых обычных ноутбуках, на моем установлен Windows 10, кстати. С компьютерной мышкой я не работаю, всё делаю с клавиатуры, печатаю десятипальцевым методом. Голосовой ввод тоже часто использую, очень удобно».  Итак, получив представление об основных нюансах взаимодействия слабовидящих и незрячих людей с современными технологиями, мы теперь можем перейти к обсуждению конкретных способов адаптации веб-ресурсов, сайтов и приложений под нужды людей с ограничениями по зрению.  Как адаптировать сайт для дальтоников. Советы Светланы.  «Впервые я узнала, что я дальтоник, в первом классе, когда на уроке рисования учитель попросил раскрасить картинку с животными. Я раскрасила всё очень яркими красками и с гордостью ему показала. Именно тогда и выяснилось, что яркими эти краски казались только мне, и в этот день я впервые услышала от школьного врача слово «дальтонизм».  Но следует разделять полную цветовую слепоту и просто нарушение восприятия цвета. Большинство дальтоников способны различать цвета, но при этом имеют сложности с восприятием оттенков одного цвета.  Как адаптировать ваш сайт или приложение для таких людей, как мы? Это не сложно, достаточно следовать следующим рекомендациям.  Главное правило – следите за тем, чтобы все элементы на сайте были контрастными, потому что мы различаем цвета по яркости. Темный текст на светлом фоне сможет прочитать любой человек с дальтонизмом.  Чем меньше цветов и градиентного фона вы используете в дизайне, тем лучше. Предпочтительнее использовать синий и серый цвет, их воспринимают практически все дальтоники.  Не следует использовать оттенки одного и того же цвета рядом, их нам будет очень трудно различить.  Старайтесь передавать информацию для пользователя визуально, а не цветом. Вместо того, чтобы помечать поле с ошибкой красным цветом, всегда лучше сделать соответствующую иконку с текстом.  Если сомневаетесь, хорошо ли ваш сайт адаптирован для людей с ограничениями по цветовосприятию, проверьте ваш сайт через любое расширение для браузера, симулирующее дальтонизм. Например, можете воспользоваться расширением для Chrome Daltonize».  Как адаптировать сайт для слабовидящих. Советы Ивана.  «Однажды в результате болезни я полностью потерял зрение, но затем через несколько месяцев оно частично восстановилось. И хотя я на прогулках обхожусь без трости, мне довольно сложно воспринимать информацию, когда я пользуюсь многими веб-ресурсами в Интернете.  Тем, кто хочет адаптировать сайт для людей с частичной потерей зрения, я бы посоветовал сделать следующее:  Сделайте шрифт на сайте масштабируемым, чтобы его можно было увеличить по нажатию кнопки. Всегда используйте адаптивную верстку.  Сам контент лучше сделать максимально контрастным по отношению к фону. Этим вы очень сильно облегчите взаимодействие с вашим ресурсом людям с ослабленным зрением.  По возможности сопровождайте любой медиа-контент (фото, видео, некоторые элементы дизайна т.д.) текстовым описанием. Не все слабовидящие могут понять, что изображено на фотографии, а вот текст прочитать получится, в том числе и с помощью программ экранного доступа.  Не используйте капчу с фотографиями, мы не сможем ее прочитать. Как вариант, используйте аудио-капчу.  Если у вашего сайта есть иконка для перехода на версию для слабовидящих, сделайте ее максимально видимой, очень часто их почему-то делают маленькими, незаметными и бледными.  Проверьте, чтобы программы экранного доступа работали на вашем сайте. Скачайте пару самых популярных программ и протестируйте, всё ли считывается с экрана правильно».  Как адаптировать сайт для незрячих. Советы Альбины.  «Я полностью потеряла зрение в результате травмы, когда была ребенком. Меня всегда интересовала сфера IT из-за возможности работать удаленно с клиентами в других городах. Со временем я стала помогать разработчикам адаптировать сайты для незрячих и тестировать правильность их работы и отображения контента. Сейчас я с вами поделюсь основными моментами, как адаптировать сайт для слепых людей. Помните, что мы воспринимаем ваш веб-ресурс на слух, а не глазами.  Самое главное правило – структурируйте информацию на вашем сайте с помощью HTML-тегов.  Используйте заголовки и подзаголовки <h1>-<h6>, нумерованные и маркированные списки (<ol> и <ul>), теги семантической разметки <header>, <main>, <section>, <footer> и другие.  Тогда незрячий человек сможет с помощью быстрых клавиш найти нужные данные и будет свободно перемещаться по элементам страницы. Вообще, если сайт технически оптимизирован для поисковых систем, он уже достаточно хорошо адаптирован под потребности незрячих пользователей.  Также обязательно заполняйте атрибут «alt» у изображений внутри тегов <img>, иначе незрячий человек не сможет понять, что происходит на картинке. Но с другой стороны, если графический элемент выполняет чисто декоративные функции и не несет смысловой нагрузки, то оставьте данный атрибут пустым (alt=\"\"), чтобы не сбивать с толку слепого пользователя.  Добавьте возможность управлять функциональностью контента вашего сайта с помощью клавиатуры, ведь незрячие люди не пользуются мышкой.  Важно, чтобы на сайте корректно работал фокус, и незрячий человек мог, например, использовать клавишу «Tab», пробел и стрелки для перемещения от одного элемента страницы к другому, а детали интерфейса могли обрабатывать клик по нажатию клавиш «Enter» и «Esc».  Еще один важный момент: на некоторых сайтах плохо оформлен поиск. Часто бывает, что слепому человеку проблематично найти поисковую строку или невозможно установить в поле поиска курсор с помощью программы экранного доступа. Не используйте атрибут «title» для описания ссылок, так как скринридеры его не озвучивают.  Обязательно тестируйте ваш сайт на доступность, желательно используя разные скринридеры, потому что программы экранного доступа часто отличаются в работе сильнее, чем браузеры. Если есть возможность, попросите слепого человека за вознаграждение воспользоваться вашим сайтом и дать вам обратную связь.  Для более детальной информации по адаптации сайтов с конкретными примерами, воспользуйтесь документацией на сайте w3.org или русскоязычным аналогом ресурса Веблайнд».  Хотите знать больше?  В данной статье мы рассмотрели лишь основные правила для адаптации вашего веб-ресурса или приложения для людей с ограничениями по зрению.  Если же вы хотите более подробно ознакомиться с материалами, рекомендую воспользоваться следующими ресурсами:  1. Международный стандарт WCAG 2.0 для пользователей с различными ограничениями здоровья.  2. Российский национальный стандарт доступности веб-ресурсов для инвалидов по зрению ГОСТ Р 52872-2012.  И помните, что адаптируя ваш сайт для слабовидящих, незрячих и людей с дальтонизмом, вы облегчаете работу в Интернете сотням тысяч и делаете их жизнь лучше.",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 1,
    "tag": [
      25,
      24
    ]
  }
},
{
  "model": "articles.article",
  "pk": 7,
  "fields": {
    "registration_time": "2022-07-12T13:19:57Z",
    "slug": "kak-sdelat-udobnuyu-dizajn-sistemu-cveta-chast-1",
    "is_active": true,
    "title": "Как сделать удобную дизайн-систему. Цвета. Часть 1",
    "body": "Дизайн-система позволяет быстро взаимодействовать с компонентами, легко вносить изменения во все макеты и в целом прививает дизайнеру навык организации больших объемов информации.  Зачастую, дизайнер начинает делать дизайн-систему аккуратно, придавая ей должное внимание. Но в по мере увеличения экранов становится, как мне кажется, морально труднее вносить новые компоненты и корректировки. Но помните одну вещь - чем больше времени уделить дизайн-системе, тем больше времени она сэкономит в будущем.  Основное правило дизайн-систем: чем меньше компонентов — тем лучше и вам, разработчику и конечному юзеру. Это касается количества цветов, шрифтов, иконок и так далее. Дизайн будет выглядеть более консистентным и единым.  Цвета Цвета нужны не только для того, чтобы показать как выглядит ваш дизайн, но они также вызывают эмоции от использования продукта или сервиса, показывают персонализацию вашего бренда и буквально «разговаривают» с пользователем.  Определите цветовую палитру Определение цветовой палитры очень важный этап в построении дизайн-системы, но часто этот процесс вызывает трудности. Настроение, эмоции, запоминаемость — все это цвета.  Базовая цветовая палитра должна содержать в себе следующие оттенки: нейтральный (Neutral) , главный (Primary) , акцентный (Secondary) и «обратная связь» (Feedback).  Вам не нужно делать по 50 оттенков каждого цвета. Это даст только путаницу, но никак не пользу. Вместо этого постарайтесь сделать около 6-12 и используйте один цвет в одном и том же месте на всех макетах.  Например, обводка инпута в дефолтном состоянии на первом экране «Neutral / 300». Тогда на следующих экранах она должна быть точно такая же.  Нейтральный (Neutral) в основном применяется в дефолтных или выключенных состояниях элементов. Обычно, это оттенки серого или синего.  Палитра \"Neutral\" Палитра \"Neutral\" Базовый (Primary) используется для интерактивных элементов, где требуется максимальный фокус юзера. В основном используется для элементов активном состоянии. Вы можете иметь больше чем один базовый цвет, но лучше начинать с одного.  Палитра \"Primary\" Палитра \"Primary\" Акцентные (Secondary) используются для поддержки базового цвета. Могут использоваться для бейджей или лейблов.  Цвета обратной связи (Feedback) нужны для того, чтобы визуально сообщать пользователю о результатах его возможных действий. Ошибку или критическое действие (Error) показывают красным цветом. Например, удаление строки данных из таблицы. Предупреждение (Warning) — оранжевым. Успех (Success) — зелёным.  Палитра \"Error\" Палитра \"Error\" Палитра \"Warning\" Палитра \"Warning\" Палитра \"Success\" Палитра \"Success\" Определите цветовую палитру перед тем, как начнёте делать следующие экраны Большое количество дизайнеров попадают в неудобную ситуацию, в процессе создания UI без стилей цветов. Когда экранов становится больше — возникнет «пипеточная» ситуация. Придётся прыгать от одного макета к другому, чтобы взять такой же цвет.  Чтобы этого не возникло представим, что вы сделали первый экран, на котором есть модальное окно календаря (взял в пример его так как там обширное количество цветов).   Затем вы последовательно начинаете создавать стили для каждого цвета помня об иерархии о которой рассказывалось выше и применяете на следующих макетах.   Нейминг: \"Neutral / 300\".  С «Neutral» все понятно, но кто такой этот «300»? Эти цифры созданы исключительно для ориентации и коннекта с между дизайнером и  . Обычно названия начинаются со 100 и заканчиваются на 900. Шаг зависит от того, сколько у вас цветов. 100 — самый светлый оттенок цвета. 900 — самый тёмный. В шрифтах такая же ситуация, только 100 — самое тонкое начертание, а 900 — толстое.  Figma позволяет удобно разделять стили по папкам с помощью слэша «/». Пользуйтесь этим, чтобы создать правильную иерархию.   Контраст При выборе цветовой палитры нужно всегда держать в голове доступность для пользователей вашего интерфейса. Не каждый юзер имеет хорошее зрение или монитор 4К. Хороший UI должен быть хорошим для всех.  Одним из главных пунктов в доступности является контраст.  Хорошим способом проверять насколько ваш текст контрастен на том или ином фоне является сравнение с помощью рекомендаций Web Content Accessibility Guidelines (WCAG) 2.1.  В Figma Community вы можете найти большое количество плагинов для анализа контраста. Я предпочитаю плагин, который изображен ниже.   Как понять какой контраст мне подходит? Лучше всего когда ваш контраст соответствует уровню AA для большинства элементов в UI.   Итог Выбор цветов влияет на восприятие продукта, его доступность и запоминаемость.  Главное, уделить должное внимание этим вещам, так как если этого не сделать, вы обретете себе проблем в будущем, когда количество экранов будет тяжело сосчитать.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 1,
    "tag": [
      30,
      31,
      32
    ]
  }
},
{
  "model": "articles.article",
  "pk": 8,
  "fields": {
    "registration_time": "2022-07-12T13:19:57Z",
    "slug": "kem-rabotat-v-it-v-2022-frontend-razrabotchik",
    "is_active": true,
    "title": "Кем работать в ИТ в 2022: Frontend-разработчик",
    "body": "Рубрика «Кем работать в ИТ» — интервью с представителями  ИТ-профессий, в которых специалисты рассказывают о тонкостях своей работы: плюсах, минусах, подводных камнях и заработной плате. Мы надеемся, что джунам и стажерам эта рубрика поможет больше узнать о том, что их ожидает на карьерном пути, а профессионалам — посмотреть на свою специальность через чужой опыт и, может быть, открыть для себя что-то новое.  Сегодня о своем опыте работы нам расскажет Константин Фокин, старший фронтенд-разработчик Flowwow.  Константин окончил Таганрогский радиотехнический университет по специальности «Инженер-программист систем автоматизированного проектирования», но по профессии работать не стал. В начале карьеры занимался версткой страниц на сайтах и отвечал на телефонные звонки. А после неудачных попыток попасть в IT ушел работать в колл-центр, откуда все и началось.  «В моем профайле в SLACK уже три года как написано: чувак с фронта. Так меня однажды представил наш техдиректор» (с) Константин Ф.  По данным зарплатного калькулятора Хабр Карьеры, средний размер заработной платы фронтендера составляет чуть больше 150 тысяч рублей в месяц. Конечно, это среднее значение. Есть те, кто зарабатывает значительно меньше: 60-90 тысяч, а есть и те, кто получает 270 тысяч рублей.  О специальности Расскажите простыми словами, чем вы сейчас занимаетесь? Поддерживаю наш текущий фронтенд (клиентский сайт Flowwow) и параллельно участвую в разработке нового, который называется у нас неофронт.   На старом проекте занимаюсь немного рефакторингом, верстаю всё — от простых модалок и кнопочек до сложных виджетов и отдельных страниц. Если не очень сложный, то и бэкенд сам себе пишу для задач. Ну и JavaScript, много JavaScript.  Из последнего, что делал интересного и сложного:   полностью перепридумали и поменяли корзину на сайте,  сделали для мобильной версии сайта виджет с адресом и временем доставки: взяли макет — отдали пользователям новые и красивые интерфейсы.  Старый фронт уже действительно очень стар, ему более 7 лет, он написан на jQuery и на React (новый проект собираем на Nuxt + Vue).   Пишу много кода и регулярно общаюсь с нашими веб-дизайнерами. По сути, дизайнерский макет и является для меня техническим заданием, а где-то только прописана логика, поэтому я работаю в тесном контакте с продуктовой командой.  Ещё одна моя важная часть работы — CR для ребят. У нас в этом плане хорошая практика — не выпускать задачи, не прошедшие Code Review хотя бы одного коллеги. И это на самом деле довольно важная часть работы: найти и аккуратно указать на ошибки, проследить их исправление, а заодно выискивать крутые решения коллег и брать их себе на вооружение.   Фронтенд — это то, каким наш сервис видят пользователи. Это самое острие бизнеса, точка контакта Flowwow с клиентом. От качества фронта зависит, будет ли клиенту с нами либо хорошо и удобно, или трудно и непонятно (и тогда он уйдет от нас туда, где все удобнее). Поэтому абсолютно все на нашем фронте должно быть хорошо продумано, нарисовано и реализовано.   Какое у вас образование, если есть? Высшее, но не совсем релевантное. Я окончил Таганрогский радиотехнический университет (ныне Инженерно-технологическая академия Южного федерального университета им. Н. А. Ретивова) по специальности «Инженер-программист систем автоматизированного проектирования». Теоретически, я должен был бы сейчас проектировать какие-нибудь автокады — но занимаюсь вместо этого тем делом, которым заболел еще в детстве и всегда любил заниматься.      Но в то же время образование мне очень помогает: в вузе меня научили учиться, разбираться и осваивать новое, а без этого программисту сейчас просто можно выкинуть себя на помойку.  Начало карьеры Как вы узнали о своей специальности? С чего все начиналось? Когда я был маленьким, мне в руки попала книга «Энциклопедия профессора Фортрана» про компьютерный город. Я взял ее в руки и… пропал.   А еще у моего соседа дома был компьютер. Парень был меня старше года на три, и его родители были программистами в банковском деле. Для нашей деревни (г. Новокубанск) настоящие мажоры!   Позже, когда мне было уже лет 12, была еще одна книга — «Вводный курс в информатику». Родители заметили мое увлечение компьютерами и сказали: если хочешь, чтобы мы тебе купили ПК, прочитай эту книгу. И я честно изучил ее всю от корки до корки. Для меня это был целый талмуд — страниц 400, наверное. Ну и ПК мне купили — как сейчас помню: 128Мб оперативы, win95 и диск целых 20 Гб. Это был подарок мне на день рождения в 2000-м году. Родители хотели, чтобы я с его помощью развивался, я учил на нём английский. Мне кажется, этот подарок стал ключевым в моей любви к компьютерам.   В старших классах я программировал для собственного удовольствия на Pascal. Кстати, на всю нашу школу (довольно престижную) было всего двое мальчишек, которые вот так вот программировали для себя. Информатики как предмета в школе не было, и меня учил друг, тогда уже студент. Я писал свою «игру»: это было текстовое приключение с катастрофическим количеством GOTO в коде.  Чтобы поступить в университет, я ходил на подготовительные курсы по информатике. Тогда только ввели ЕГЭ и никто толком не знал, как сдавать этот экзамен — и я, пользуясь случаем, ничего толком не делал. Но мне повезло: в марте на курсах устроили пробный ЕГЭ по профильным предметам — физике и математике (информатику тогда не сдавали). Я его написал ради интереса, получил соответственно 39 и 35 из 100 и понял, что такими темпами я никуда не поступаю. Оставшиеся два-три месяца пахал как не в себя — и настоящий ЕГЭ написал достаточно хорошо, чтобы поступить. Точные баллы помню только по русскому — 71. По математике и физике в дипломе отлично, а за экзамены примерно 68 по математике и около 60 по физике.  В общем, ничто так не бодрит, как замаячившие перспективы топтать плац вместо учебы в вузе.  Как вы искали свою первую работу в ИТ? Дело было в 2009 году, тогда все веб-студии в Краснодаре можно было пересчитать по пальцам. Я ходил по городу и обрывал номера с объявлений, ходил на собеседования в самые разные места.  Расскажите про свое первое собеседование и первое место работы. Какой вы получили опыт? Это был опыт сложный, брутальный и травмирующий. Меня не учили конкретной практике, и никто почти тогда этому не учил: курсов программирования было мало, даже видеороликов было не найти. Конечно, в вузе мы учились писать на C++, и я подрабатывал на кафедре, пытался поддерживать сайт. Но это все было бесконечно далеко от разработки.  Мне даже не приходило в голову где-то их искать и пробовать получить нужные навыки. Все тогда учились методом тыка и устной передачи знаний.  Однажды пришел по объявлению, меня спросили: «Что умеешь делать?» Я тогда только чуть-чуть учился писать на php в блокноте. Мне сказали — проваливай и больше не приходи.   В другой конторе первым делом сказали, что моим дипломом можно подтереться. Но там я все-таки проработал два дня! У начальства был странный подход к обучению сотрудников: они взяли меня с моим уровнем знаний и сказали, что научат всему, что нужно, но вместо этого всякий раз устраивали массовые перфомансы: всем офисом обсуждали, какой я идиот. Та фирма давно закрылась, а я — старший фронт. Ну и кто кого?  Третья фирма состояла только из меня и моего начальника. Я верстал отдельные страницы на сайте и отвечал на телефонные звонки от коллекторов, которые доставали шефа.    Все это меня научило только одному: плевать на дураков и все равно заниматься тем, что нравится, пусть пока и не за деньги.  Как складывался карьерный путь в ИТ после первой работы? После всех неудачных попыток я забил на IT и пошел работать в колл-центр (мне было тогда 22 года). Параллельно программировал понемногу «для себя».   Однажды мой однокурсник Иван Могилат подогнал мне клиента, которому надо было сверстать форму обратной связи. Я неожиданно для самого себя справился с задачей — и получил свои первые деньги за программирование. Так я понял, что могу что-то делать и начал понемногу подрабатывать программистом на фрилансе. Но работать в таком режиме было сложно и не очень прибыльно. На фрилансе же как потопаешь, так и полопаешь, а «топать» как следует я тогда еще не научился.   Через пару лет я перешел в веб-студию уже в роли программиста — и вот там столкнулся с фронтендом. Это был совсем не тот фронтенд, с которым сейчас приходится иметь дело, а мучительная верстка под печально известный Internet Explorer 6. По сути, я работал фуллстаком — с Symphony на бэкенде и jQuery + KnockoutJS на фронте.  Потом в январе 2013 я пошел работать в компанию «Магнит»: там в то время работала моя жена, и я знал, что им всегда требуются IT-специалисты. Кодил бэк на Python и фронтовую часть на ExtJS (меня продолжало бросать из стороны в сторону). Писал новый функционал и поддерживал в рабочем состоянии инструменты для закупки.   Там я получил отличный опыт личного менеджмента: меня научили широко смотреть на свою работу. Например, когда работаешь и видишь косяк у коллеги в коде, не надо с постным лицом проходить мимо, как будто тебя это не касается. Либо иди к коллеге разбираться, либо исправь сам.  До 2018 года я получил очень разнообразный, но в целом поверхностный опыт программирования. И надо сказать, к фронтенду я тогда относился даже с брезгливостью. Может быть, сыграл свою роль негативный опыт с IE 6, но, честно скажу, тогда разработка на фронте казалась мне жалким служебным отстоем. А на бэке в это время творилась магия: базы данных, целые миры «под капотом»... Поэтому, когда тот же мой друг Ваня Могилат позвонил и сказал, что в Flowwow, где он работает, освободилось место фронтендера, я поначалу отказался. Но задумался! Начал изучать вопрос, и быстро выяснилось, что, пока я метался по разным направлениям, JavaScript очень изменился, появились Angular, Backbone… Кроме того, Ваня сказал, что у них фронтенд пишется на React, и я просто ради любопытства стал изучать этот стек.  Днем работал на фрилансе, а по ночам учил — и мне этот стек очень понравился! Прямо захотелось на нем поработать.  Какая была ваша первая зарплата, если не секрет? Первая была смехотворной, даже называть ее нет смысла (ладно, это были 4000 рублей, я не шучу). А с 2013 года по уровню зарплаты я рос достаточно уверенно. В студии получал 15 тысяч рублей, и мне этого хватало на жизнь. В 2014 в «Магните» получал 25 тысяч, и тогда это казалось ох какой серьезной суммой. В 2018 на фрилансе зарабатывал уже под 80 тысяч — но это была работа нон-стоп и днем и ночью, без выходных и праздников. Так, конечно, не надо делать.   Сегодня попасть в ИТ стало проще — множество компаний предлагают свои программы обучения по разным специализациям. Сейчас на Хабр Карьере опубликовано более ста курсов для тех, кто хочет изучить фронтенд. Программы разные: как для опытных специалистов, так и для тех, кто хочет изучить профессию с нуля.  Компания Как вы попали в компанию, в которой работаете сейчас? Где нашли вакансию, на какую должность, и как прошло собеседование? Собственно, именно с Flowwow начался мой осмысленный путь во фронтенде. Меня собеседовали сооснователь компании и тимлид команды фронтенда Артем Гамбицкий, технический директор Дмитрий Шестернин и тогдашний фронтенд-девелопер Яна (меня брали ей в помощники).   К тому моменту я побывал уже на стольких собеседованиях, что совершенно не волновался. Наоборот, мне было любопытно, я решал задачки, которые мне дают, и задавал встречные вопросы — не чтобы показать заинтересованность, а из искреннего любопытства: зачем вы ищете нового человека? Куда предыдущий делся? Какой специалист вам нужен?   С 2018 года я работаю здесь — и, знаете, я не согласен с тем, что программисту надо каждые 2-3 года менять работу, чтобы не застаиваться. Фигня все это! Чтобы не застаиваться, надо просто не застаиваться, а смена компании тут ни при чем.   В профессии я однолюб. Всегда мечтал найти такую фирму, в которой проработаю до старости, отдам ей весь свой потенциал, время и знания.   Но на собеседования ходить важно, хотя бы ради того, чтобы не зазвездиться. Около года или полутора я сходил в один банк — и упрочился во мнении, что наш фронт устарел и его надо срочно развивать, иначе мы станем нерелевантны. Отчасти благодаря этой моей вылазке у нас сейчас готовится неофронт.  Как проходил процесс адаптации? С какими трудностями вы столкнулись? Я как-то очень быстро почувствовал себя в своей тарелке. Помогал Иван, мой друг и наш бэкенд-тимлид — особенно по вопросам, связанным с бэком. Иногда бил по рукам, заставлял переписывать код, но мне такой формат работы как раз нравится. Это хоть и болезненный, но наиболее короткий способ вырасти в профессии.   Самым трудным оказалось оценивать сроки выполнения задач. Когда ты фрилансер, уметь оценивать задачи не так уж нужно: ты просто говоришь «за сегодня сделаю» и сидишь за экраном, пока не сделаешь. Поэтому и получалось, что на фрилансе я убивался по 12-13 часов почти без перерыва. Работал на износ и чуть не подорвал здоровье. Попробовал так же работать на Flowwow, но меня остановили. Дмитрий Шестернин позвонил и сказал: у нас тут не эстафета, а марафонский забег, поэтому экономь силы и трезво оценивай задачи.    Со временем я понял, насколько важно работать в комфортном темпе, но равномерно: я же не один работаю. Саппорт, маркетологи, дизайнеры завязаны на мою работу. Им тоже надо знать, когда включать свою маркетинговую магию, когда обратить внимание пользователей на другой функционал.  Какие знания у вас уже были, когда вы пришли в свою компанию? Я бы сказал, что знания мои были обширны, но не слишком глубоки. Я умел кодить на всем понемножку: и на Python, и на JavaScript, и на PHP, и на Oracle.  И до сих пор мне кажется, что моя база пока недостаточно глубока — даже в тех вещах, с которыми я систематически имею дело уже четвертый год. То есть, мне мало, чтобы просто получалось: хочется чувствовать себя в коде еще более свободно.   Например, есть у нас в команде разработчик Женя Косухин, у которого невероятно крепкая база. Когда я читаю его код, то понимаю, что мне есть куда расти.  Как вы продвигались в компании? Какие навыки в этом помогли? В Flowwow нет как таковой идеи карьерной лестницы: каждый растет над собой, растет его зарплата, но мы остаемся на одной горизонтали. Мне это безумно нравится.   Наш тимлид Тема бок о бок с нами пишет код и решает административные задачи, а мы работаем каждый над своей частью и видим, что происходит на других ветках.   В знаниях и опыте я очень продвинулся. Я в 2018 году — просто мальчик по сравнению со мной в 2022 году. Фронтенд тут ничем не отличается от других IT-сфер: ты растешь и по хард и по софт скиллам. Хард — это прежде всего качество кода и масштаб задач. Софт — это все, что относится к селф-менеджменту. Время оценки задачи, способность договариваться с командой, принимать решения. Их я отточил здесь до совершенства, и именно они позволяют мне оценивать себя как уверенного миддл+.    Ну и главный навык — ответственность и широта видения. Для меня уже совершенно естественно не проходить мимо лажи, а видеть ее и спокойно исправлять, неважно, чья она — моя или коллег.   На какую среднюю зарплату вы рассчитывали тогда и что получили? Как и писал раньше, в 2018 году на фрилансе у меня выходило около 80 тысяч в месяц, но в каторжном режиме. В Flowwow я пошел с понижением оклада — насколько помню, стартовал с 60 тысяч рублей — но я понимал, что у меня будут выходные, стабильный график, да еще и коллегой будет мой друг. Это казалось просто каким-то чудом.   Честно, я даже не думал о зарплатных ожиданиях: к тому времени я измотал себя настолько, что мне стало почти всё равно, лишь бы я мог спать по ночам.  Сейчас во фронтенде чувствую себя отлично — в том числе и по зарплате. До событий последних месяцев рынок отечественного фронтенда рос как на дрожжах, особенно после ковидных ограничений, когда весь офлайн-бизнес рванул в сеть. Рынок дико перегрет, и зарплаты на фронте стали даже выше чем у бэкенда. И думаю, это не только из-за рынка, но и потому что фронтенд «повзрослел» и его значимость для бизнеса тоже выросла за последние 10 лет.  Раз уж зашла речь о трудоустройстве — сейчас на Хабр Карьере более 250 вакансий для фронтенд-разработчиков. Фронтендеров ищут Perfect Systems, White Code, Sportmaster Lab, Gradient CSLab и много других компаний.  У Flowwow, в которой работает наш герой, тоже есть открытые вакансии, но сейчас они для бэкендеров, мобильных разработчиков и аналитиков.  Опыт Что сейчас нужно знать специалисту, чтобы попасть в вашу сферу? Если кратко — дофига всего. Вход во фронтенд и раньше был непростой, а теперь это почти нереальная задача — начать с нуля.   В целом сфера предполагает, что:   Ты уверенно знаешь хотя бы один из основных фреймворков/библиотек: Vue, React, Angular (а лучше всех их хотя бы не бояться).  Твоя база — JavaScript: без нее нельзя научиться ничему из вышеперечисленного. Плюс, тебе придется уметь аккуратно верстать на CSS, и приготовься знать определенное количество html-тэгов.   Надо уметь работать со сборщиком скриптов, понимать, что такое гитхаб и как коммитить задачи. В целом, за два месяца этому не научиться, а за полгода — гипотетически можно, если как следует погрузиться и не отвлекаться больше ни на что.   Самое главное — нельзя просто за полгода научиться и дальше кодить спокойно. Так ты просто не успеешь за отраслью, которая развивается очень быстро. Приготовься каждый год осваивать новые стеки, технологии, подходы.   В целом, сейчас вполне адекватный путь во фронтенд из бэка. Сфера достаточно окрепла, чтобы предложить привычные бэкендеру вещи: объектно-ориентированное программирование, необходимость продумывать архитектуру проекта, покрытие тестами, использование привычных паттернов.  Какие бы вы выделили важные софт- и хард-скиллы для специалиста вашего направления? Hard — описал выше: базовые фреймворки/библиотеки плюс навыки верстки. А главные soft skills — это коммуникативные навыки, способность донести до команды свое видение и аргументировать свои решения.   И еще — умение жить и развиваться на высоких скоростях. Главное отличие фронтенда от других сфер программирования — это очень короткий путь от идеи до результата. Ты видишь фактический результат своих трудов практически мгновенно: заверстал кнопку — и вот она уже видна на экране. Сделал так, чтобы данные по клику подтягивались в форму — и через неделю уже конверсия в покупку выросла. Это очень быстрая, увлекательная, даже азартная разработка.  И сообщество JavaScript тоже развивается очень быстро. Адреналиновые маньяки получают настоящий кайф в такой среде: когда каждый год нужно догонять, апгрейдить себя.  Поговорим об ошибках? Что вы сделали не так за это время, что не нужно делать новичкам? Думаю, что новичкам можно и даже иногда нужно очень много работать (не совсем так, как я на фрилансе, но все же). Если задача идет хорошо, и ты хочешь закончить, можно и посидеть над ней полночи — но тут еще надо, чтобы в команде к переработкам относились, как у нас, и отправляли трудоголиков отдыхать.   А вот чего не надо делать, так это вестись на рассказы постановщика задачи о том, что «там мелочи» и «задача ерундовая». По личному опыту, если менеджеры так говорят — значит, все с точностью до наоборот. Не пытайтесь делегировать другим оценку вашей задачи и не ведитесь, когда ее оценили за вас.   Есть еще одна характерная ошибка — искать в своей работе какой-то обозримый финал. Считать проект завершенным. Потому что во фронтенде часто бывает так: вы что-то решили, ты выполнил задачу на 90% — а потом понял, что что-то изменилось: в бизнесе, в постановке задач, в геополитике — в чем угодно. И вот тут важно не жадничать, не бояться переделать и не разрушаться от того, что ты где-то не поставил галочку насчет решенной задачки. Есть прогеры, которым такая ситуация невыносима, но я уверен, что они просто неправильно заряжены.   Укажу еще одну типичную ошибку новичка — биться над проблемой самостоятельно больше двух часов. Если ты за этот срок не смог решить проблему сам, прекрати тратить время понапрасну и иди советоваться к коллегам. Бизнесу нужны не героические усилия, а максимум результата за минимум времени.  С чего можно начать специалисту без опыта? Начинайте с hard skills, идите на хорошие курсы JavaScript и как можно скорее пробуйте делать руками то, чему вас будут учить. Конкретные курсы не посоветую: лично мне всегда гораздо больше помогало чтение первоисточника, то есть технической документации.   Если речь идёт о высшем образовании, то я считаю его очень важной составляющей успеха. В процессе получения «вышки» ты сталкиваешься со всякими умными штуками — например, у меня это были генетические алгоритмы и методы их оптимизации. Сомневаюсь, что такая информация попалась бы мне просто так.  Высшее образование повышает и общую грамотность: когда разговариваешь с человеком без образования, замечаешь разницу. И, как нам всегда говорили преподаватели, «наша задача — научить вас учиться». Навыки самостоятельного поиска и анализа информации — это бесценно. Разумеется, всему этому можно научиться и без занудных лекций и профессоров, но с ними, как мне кажется, это проще.  От автора Какие книги статьи, подкасты, курсы стоит почитать/посмотреть для развития в профессии? Мы все разные. Кого-то максимально развивают видеокурсы, кого-то — чтение документаций, а кого-то — книги. Я из тех, кто больше за документацию: серьезно, просто откройте доку по vue, она сделана как учебник. По React тоже самое.   Наш тимлид Артем — гуру по профлитературе. К его рекомендациям я всегда прислушиваюсь, поэтому вслед за ним могу порекомендовать «Мифический человеко-месяц» Фредерика Брукса и «Чистая архитектура» Роберта Мартина.   Карьерный трек фронтендера Мы часто слышим от специалистов на Хабр Карьере вопрос: как понять, что я уже сеньор? Или: что мне нужно сделать и освоить, чтобы вырасти до миддла?   Интервью с Константином — первое из серии. В каждой статье рубрики мы будем разбирать новую специализацию и показывать карьерный трек. Это инфографика с навыками, задачами и условиями работы, разбитыми по квалификациям.  Вот какой трек нам помог составить Константин и команда Flowwow.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 2,
    "tag": [
      26,
      30,
      31,
      17
    ]
  }
},
{
  "model": "articles.article",
  "pk": 9,
  "fields": {
    "registration_time": "2022-07-12T14:31:27Z",
    "slug": "prakticheskoe-ispolzovanie-jcstress",
    "is_active": true,
    "title": "Практическое использование JCStress",
    "body": "Приветствую, в этой статье мы рассмотрим фреймворк JCStress, созданный для тестирования многопоточного кода и применим его для решения практических задач.  Цель данной статьи — показать читателям что JCStress можно и нужно использовать не только в лабораторных работах для демонстрации эффектов связанных с моделью памяти, но и для доказательства правильности преобразований кода. Тренироваться будем на кошках JDK.  Зачин Сразу оговорюсь, что конечная целью упражнения — построение предположения и его применение для написание тестов, а не конские приросты производительности.  Почему именно JCStress? Это неудачливый брат JMH, и если последнему выпала долгая и счастливая жизнь вместе с мировым признанием, то JCStress куда менее известен и востребован. Если о JMH на момент написания статьи задано 395 вопросов, то о JCStress — лишь 7. Мне кажется, что причиной этого является либо неосведомлённость о существовании фреймворка, либо мнение о нём как об испытательном стенде, годном только для обучения и/или тестирования примитивов из java.util.concurrent.  Теперь к делу. Порядок работы такой:  возьмём код JDK, покрутим его, поищем лазейки для улучшения  построим предположение о том, как можно изменить код  напишем и запустим тест  сделаем вывод  В моей повседневной работе я чаще всего имею дело со Спрингом и прочим энтерпрайзом разной степени кровавости, поэтому наиболее интересен для меня пакет java.lang.reflect.  Например, java.lang.reflect.Parameter.isNamePresent() многократно вызывается при загрузке контекста приложения:  public boolean isNamePresent() {   return executable.hasRealParameterData() && name != null; } В свою очередь метод j.l.r.Executable.hasRealParameterData() дважды обращается к volatile-полям:  private transient volatile boolean hasRealParameterData; private transient volatile Parameter[] parameters;  boolean hasRealParameterData() {   if (parameters == null) {     privateGetParameters();   }   return hasRealParameterData; }  private Parameter[] privateGetParameters() {   Parameter[] tmp = parameters;    if (tmp == null) {      // Otherwise, go to the JVM to get them     try {       tmp = getParameters0();     } catch(IllegalArgumentException e) {       // Rethrow ClassFormatErrors       throw new MalformedParametersException(\"Invalid constant pool index\");     }      // If we get back nothing, then synthesize parameters     if (tmp == null) {       hasRealParameterData = false;       tmp = synthesizeAllParams();     } else {       hasRealParameterData = true;       verifyParameters(tmp);     }      parameters = tmp;   }   return tmp; } Обратите внимание, что метод privateGetParameters() ведёт себя как ленивый сеттер, проставляющий начальное значение двух полей (hasRealParameterData и parameters). Поставим вопрос следующим образом:  1) можно ли считать присвоение значений двум полям безопасной публикацией?  2) если публикация безопасна, то можем ли мы избавиться от одного из двух volatile?  О безопасной публикации Под безопасной публикацией здесь и далее подразумевается открытие доступа к объекту и/или его свойствам таким образом, что все доступившиеся потоки \"видят\" одно и тоже правильное состояние (состояние в данном случае - это и ссылка на объект, и все его поля). Беглый поиск по словосочетанию \"safe publication\" выдаёт несколько ссылок:  https://liyanxu.blog/2018/05/19/java-thread-safe-problems/  https://shipilev.net/blog/archive/safe-publication/  https://shipilev.net/blog/2014/safe-public-construction/#_safe_publication  https://www.youtube.com/watch?v=zMHU-nIQdwE  Большинство из них предлагает классический набор подходов:  статика  синхронизация  final поля  Все они неприменимы в нашем случае, поэтому воспользуемся менее известным (скажем так — реже встречающимся в письменных источниках) приёмом \"последний volatile\".  Отступление о первоисточниках Предположение Рассуждать будем примерно так: нужно доказать, что поведение кода под гонкой не изменится, если мы уберём volatile из объявления поля hasRealParameterData. Предположим, два потока (П1 и П2) одновременно вызывают hasReadParameterData(). Поскольку метод не синхронизирован, то оба потока исполняют его одновременно. Рассмотрим возможные исполнения:  1) П1 отработал быстрее и П2 прочитал не null из поля parameter. Что вернёт в этом случае П1? Очевидно, он вернёт то же значение, которое записал П1 в переменную hasRealParameterData, ведь если мы \"увидели\" запись не null в волатильное поле parameter, то \"увидим\" и все предшествующие ей записи.  2) Предположим, что оба прочли null, соответственно оба попадают в privateGetParameterData() и тут вновь развилка:  П{1, 2} уже записал массив в поле parameters, следовательно П{2, 1} вернёт значение уже записанное в hasRealParameterData (см. п. 1)  оба потока читают null, и единственным следствием этого будет вызов метода getParameters0(), который вернёт два разных массива (arr1 != arr2, но с тем же содержимым). Также оба потока запишут одно и то же значение в поле hasRealParameterData  Изменится ли это поведение с удалением volatile из объявления поля hasRealParameterData? На первый взгляд — нет.  Не торопитесь открывать, подумайте самостоятельно Применительно к нашему коду запись в волатильное поле parameters — это т. н. \"releasing store\", а чтение из него — \"acquiring read\". Таким образом, если мы читаем не null из поля parameters, то гарантированно \"видим\" все предшествующие записи.  Запись в поле hasRealParameterData, предшествующая записи в волатильное поле parameters, как бы защищена этой самой записью, соответственно описанные выше исполнения не меняются.  Теперь нужно доказать это строго, и в этом нам поможет JCStress.  Доказательство Вот полный код теста, пояснение ниже  @State @JCStressTest @Outcome(id = \"true\",  expect = ACCEPTABLE, desc = \"Boolean value is guarded\") @Outcome(id = \"false\", expect = FORBIDDEN, desc = \"Boolean value is not guarded\") public class ConcurrencyTest {    ConcurrencyTest.Value value = new ConcurrencyTest.Value();    @Actor   public void actor1(Z_Result r) {     r.r1 = value.method.hasRealParameterData();   }    @Actor   public void actor2(Z_Result r) {     r.r1 = value.method.hasRealParameterData();   }    static class Value {     final Executable method;      public Value() {       try {         method = getClass().getMethod(\"foo\", int.class);       } catch (NoSuchMethodException e) {         throw new RuntimeException(e);       }     }      public void foo(int parameter) {     }   } } Аннотации @State и @JCStress являются служебными. Повторяющиеся аннотации @Outcome необходимы для описания допустимых и запрещённых значений (кроме ACCEPTABLE и FORBIDDEN есть ещё ACCEPTABLE_INTERESTING и UNKNOWN; в данном случае они нас не интересуют).  Далее описано разделяемое состояние:  ConcurrencyTest.Value value = new ConcurrencyTest.Value();  static class Value {   final Executable method;    public Value() {     try {       method = getClass().getMethod(\"foo\", int.class);     } catch (NoSuchMethodException e) {       throw new RuntimeException(e);     }   }    public void foo(int parameter) {   } } Обратите внимание, что JCStress самостоятельно воссоздаёт значение поля value для каждого прогона. Иными словами, при каждом вызове одного или нескольких помеченных @Actor методов они будут работать со свежим полем.  Теперь логика:  @Actor public void actor1(Z_Result r) {   r.r1 = value.method.hasRealParameterData(); }  @Actor public void actor2(Z_Result r) {   r.r1 = value.method.hasRealParameterData(); } Здесь всё просто: методы вызываются из разных потоков создавая гонку на одном объекте. Полученный результат записывается в особый объект класса что-то_Result, похожий на хорошо знакомый по JMH Blackhole с той лишь разницей, что у \"воронки\" много перегруженных методов для \"затягивания\" разных типов данных, а типы, с которыми работает результат, определяются приставкой. В нашем случае Z_Result — это результат имеющий одно логическое поле (Z — принятое в Java обозначение типа boolean). Результату с двумя логическими полями соответствует ZZ_Result, паре boolean-int — ZI_Result и т. д. Тысячи их!  Для доказательства нашего предположения необходимо выполнить тестирование для существующего и изменённого кода. Если результаты совпадут, то код с исключённым volatile работает как прежде (читай — правильно), и корректность программы сохранена.  Теперь необходимо решить задачу по \"раскрытию\" метода Executable.hasRealParameterData() для внешнего мира. Для этого нужно сделать две вещи: очевидную и не очень.  Объявить метод публичным и добавить документацию, чтобы компилятор не ругался при сборке.  Добавить объявление метода в раздел class name java/lang/reflect/Executable файла java.base-H.sym.txt, который показывает, какие именно части стандартной библиотеки можно открывать миру.  Получается так:  class name java/lang/reflect/Executable header extends java/lang/reflect/AccessibleObject implements java/lang/reflect/Member,java/lang/reflect/GenericDeclaration sealed true flags 421 innerclass innerClass java/lang/invoke/MethodHandles$Lookup outerClass java/lang/invoke/MethodHandles innerClassName Lookup flags 19 method name hasRealParameterData descriptor ()Z flags 1 Формат несколько необычный: сперва указывается вид и имя метода, потом тип возвращаемого значения и флаг доступа.  Сборку JDK из исходников я не описываю, всё подробно изложено в документации.  Получив готовый JDK можно приступать к сборке теста. Основа для него создаётся из архетипа, как описано в README. Для сборки нужно выполнить  mvn clean package Обратите внимание, что по умолчанию компилятор Java не будет использовать в скомпилированном коде указанные в исходниках имена переменных, соответственно Executable.hasRealParameterData() всегда будет возвращать \"ложь\". Это большое неудобство, ведь данное значение совпадает со значением по умолчанию логического типа. Значит мы не можем достоверно определить, является ли прочитанное значение проставленным программой или оно таково по умолчанию. Поэтому сперва нужно сделать так, чтобы указанный метод возвращал \"истину\". Подсказали, что это можно сделать с помощью флага -parameters, в случае с мавеном это делается так:  <plugin>   <artifactId>maven-compiler-plugin</artifactId>   <version>3.8.1</version>   <configuration>     <compilerArgs>       <arg>-parameters</arg>     </compilerArgs>   </configuration> </plugin> Теперь можно запустить сам тест (выполняется из корневой папки проекта):  java -jar target/jcstress.jar -t ConcurrencyTest -v Итак, для исходного JDK с открытым Executable.hasRealParameterData() получаем:    Results across all configurations:    RESULT      SAMPLES     FREQ      EXPECT  DESCRIPTION    false            0    0,00%   Forbidden  Boolean value is not guarded     true  154?130?432  100,00%  Acceptable  Boolean value is guarded Теперь убираем лишний volatile, пересобираемся и идём на второй круг:    Results across all configurations:    RESULT      SAMPLES     FREQ      EXPECT  DESCRIPTION    false            0    0,00%   Forbidden  Boolean value is not guarged     true  187 932 672  100,00%  Acceptable  Boolean value is guarged Выводы Таким образом, мы не только теоретически обосновали возможность упрощения кода, но и подтвердили это. По ходу дела был создан запрос на слияние, код в нём пришлось немного переделать (полный отказ от volatile в пользу @Stable).  И хотя данная аннотация недоступна нам, простым смертным вне JDK, я всё же решил поделиться этим опытом, надеюсь, вы найдёте ему применение в своих проектах. Написав хотя бы простейшие тестов, вы будете гораздо глубже понимать модель памяти Java, что в свою очередь упростит её использование на практике.  Вообще строго-формальное доказательство того или иного предположения о работе многопоточного кода легко может стать адом даже для опытного разработчика, и JCStress - это именно тот инструмент, который поможет вам проверить его несложным тестом.  До новых встреч!",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 2,
    "tag": [
      5
    ]
  }
},
{
  "model": "articles.article",
  "pk": 10,
  "fields": {
    "registration_time": "2022-07-13T14:20:17Z",
    "slug": "povyshenie-urovnya-masterstva-v-javascript-es6",
    "is_active": true,
    "title": "Повышение уровня мастерства в JavaScript ES6",
    "body": "Принципы, о которых пойдет речь, являются фундаментальными для этого языка и будут оставаться таковыми независимо от того, какой фреймворк вы используете. Более того, понимание этих концепций окажется бесценным бонусом, когда вы решите изучить или использовать какую-либо популярную библиотеку или фреймворк из арсенала JavaScript.  Что такое this? Если вы уже работали с другими языками, такими как C++ или Java, вы наверняка сталкивались с ключевым словом this(или self в случае Python). В этих языках this ссылается на экземпляр текущего объекта при вызове метода класса.  В JavaScript, однако, несколько другой принцип действия: ключевое слово this может использоваться тут вне контекста функции или метода, а именно в глобальном контексте, и будет демонстрировать различное поведение в зависимости от выбранного режима.  Глобальный контекст Глобальный контекст — это просто глобальный объект, который определяется как объект window в браузере или объект global в Node JS. Независимо от того, используется ли “строгий” или “нестрогий” режим, this будет вести себя всегда одинаково в глобальном контексте.  Например, следующий пример справедлив для любого браузера:  \t  console.log(this === window) // truethis.foo = \"This is a global variable\" console.log(window.foo) // Это глобальная переменная \t  Контекст функции Поведение this внутри функции определяется способом вызова функции и используемым режимом.  В JavaScript функция может быть вызвана 4 различными способами. В следующих примерах я покажу, как ведет себя this в каждом отдельном случае.  Простой вызов функции  В \"нестрогом\" режиме this ссылается на глобальный объект при вызове функции. Однако в \"строгом\" режиме значение this будет установлено на undefined.  \t  function checkThis() {   return window === this; }  function checkThisStrict() {   \"use strict\";   return window === this; }  console.log(checkThis()); // true console.log(checkThisStrict()); // false \t  Вызов метода  Внутри метода объекта this будет просто ссылаться на содержимый объект:  \t  let address = {   country: \"Lebanon\",   getCountry: function () {     return this.country;   },   // ... };  console.log(address.getCountry()); // Ливан \t  Но что если мы будем хранить getCountry в другой переменной?  \t  const getCountry = address.getCountry; \t  Если код выполняется в браузере, использующем \"нестрогий\" режим, this осуществит возврат к window. Таким образом, getCountry() будет расцениваться как window.country, поскольку родительский объект в данном случае не указан:  \t  console.log(getCountry()); // не определено \t  Вот почему мы должны использовать Function.prototype.bind. Метод bind, как следует из названия, связывает новый объект с указанной функцией, раскрывая объект this.  \t  const getCountry = address.getCountry.bind({ country: \"Russia\" }); console.log(getCountry()); // Россия \t  Вызов конструктора  Функция может быть использована в качестве конструктора при инициализации ключевым словом new. При использовании ключевого слова new инициализируется новый объект, на который ссылается this. Отсутствие ключевого слова new приведет к установке значения this в глобальное значение fallback и вызовет ошибки.  \t  function Address(country) {   this.country = country; }  Address.prototype.getCountry = function () {   return this.country; };  var address = new Address(\"Kazahstan\"); console.log(address.getCountry()); // Казахстан  var addressNoNew = Address(\"Russia\"); console.log(addressNoNew.getCountry()); // Uncaught TypeError: невозможно прочитать свойства undefined (reading 'getCountry') \t  Дополнительная обработка функции конструктора поможет предотвратить такое поведение:  \t  function Address(country) {   if (!(this instanceof Address)) {     throw Error('Для вызова функции следует использовать оператор \"new\"');   }   this.country = country; }  // или использовать \"new.target\", введенный в ES6 function Address(country) {   if (!new.target) {     throw Error('Для вызова функции следует использовать оператор \"new\"');   }   this.country = country; } \t  Подробнее об этом будет рассказано в разделе \"Прототипы\".  Косвенный вызов  Функции JavaScript при вызове поддерживают ссылки на другие объекты через ключевое слово this. Мы можем добиться такого поведения, используя Function.prototype.call или Function.prototype.apply. И call , и apply делают одно и то же. Разница лишь в том, что call ожидает объект и столько аргументов, сколько необходимо, а apply ожидает, что все аргументы, кроме объекта, будут переданы в виде массива.  \t  function displayPrice(currency, decimals) {   console.log(currency + this.price.toFixed(decimals)); }  let item = {   price: 10, };  displayPrice.call(item, \"$\", 2); // $10.00 displayPrice.apply(item, [\"$\", 2]); // $10.00 \t  !!! ВАЖНО. Обратите внимание на то, что стрелочные функции ES6 не имеют собственного контекста выполнения, а наследуют this от внешнего родителя. Именно по этой причине мы не можем использовать стрелочные функции для определения методов функций или классов.  Более подробные примеры с this смотрите в этой статье.  Прототипы Все объекты JavaScript наследуют свойства и методы от прототипа. Прототипы позволяют нам добавлять методы и свойства к нашим объектам и наследовать свойства.  При использовании вызова конструктора, о котором мы говорили выше, видно, что JavaScript добавляет свойство prototype к нашему объекту, которое указывает на исходный конструктор:  \t  function Person(name, age) {   this.name = name;   this.age = age; } \t  Прототипы JavaScript  Мы можем добавить метод в наш исходный конструктор для получения года рождения. После добавления этого метода все объекты, имеющие в качестве прототипа объект Person, будут наследовать этот метод:  \t  Person.prototype.getYearOfBirth = function () {   return new Date().getFullYear() - this.age; }; \t  Работа с прототипами в JavaScript  Используя ту же процедуру, мы можем добавлять или изменять методы и свойства существующих объектов-прототипов JavaScript, таких как Array.prototype или Date.prototype, однако, как правило, делать этого не рекомендуется.  Я не буду углубляться в тему прототипов, но вы всегда можете обратиться к документации, чтобы изучить более сложные понятия, связанные с ними.  Классы Классы ES6 — это специальные функции, построенные на основе наследования прототипов в JavaScript. Именно поэтому классы JavaScript всегда называют “синтаксическим сахаром”. Эти классы не предоставляют дополнительных возможностей, встречающихся в других языках ООП, таких как объектно-ориентированное наследование, однако они служат хорошим шаблоном для построения объектов.  Вот как мы можем реализовать класс, похожий на наш предыдущий объект-прототип:  \t  class Person {   constructor(name, age) {     this.name = name;     this.age = age;   }    getYearOfBirth() {     return new Date().getFullYear() - this.age;   } } \t  Классы в JavaScript  В целом, классы ES6 обеспечивают более чистый синтаксис для стандартных объектов-прототипов, чтобы они были похожи на классы в других языках, таких как Java и C++, без добавления каких-либо функций ООП.  Области видимости Область видимости в JavaScript определяет, как с помощью кода можно получить доступ к значениям и функциям. Области видимости в JavaScript делятся на глобальные и локальные.  Глобальная область видимости Говоря простым языком, все, что определено за пределами всех функций и фигурных скобок {}, относится к глобальной области видимости. Переменные, определенные в глобальной области видимости, могут быть использованы в любом месте кода.  \t  var foo = \"This is a global variable\";  function printFoo() {   console.log(foo); }  console.log(foo); // Это глобальная переменная printFoo(); // Это глобальная переменная \t  Как правило, программист стремится максимально ограничить количество глобальных переменных по следующим причинам:  Использование глобальных переменных может привести к коллизии имен при масштабировании кода. Учтите, что повторное объявление переменных const или let приведет к ошибке, а повторное объявление var переопределит переменную. В браузерах глобальные переменные являются членами объекта window, который доступен пользователям и любому скрипту, выполняющемуся на странице. Следовательно, использование глобальных значений может привести к проблемам безопасности. JavaScript выполняет поиск переменных, начиная с текущей области видимости и поднимаясь к следующему родителю, пока не достигнет глобальной области видимости. Наличие большого количества глобальных переменных может привести к проблемам с производительностью. Локальная область видимости Локальная область видимости — это область видимости локальных переменных. Локальная область видимости состоит из областей видимости функции и блока.  Область видимости функции  Переменные, объявленные внутри функции, доступны только в пределах одной функции. Это правило действует для переменных, объявленных с помощью var, let или const:  \t  function printFoo() {   var foo = \"This is a local variable\";   console.log(foo); }  printFoo(); // Это локальная переменная  console.log(foo); // Uncaught ReferenceError: foo не определено \t  Область видимости блока  Введенные в ES6 переменные, объявленные с помощью const или let внутри любой фигурной скобки {}, находятся в области видимости блока, то есть они доступны только внутри одного блока. Область видимости блока фактически является подмножеством области видимости функции, кроме случая стрелочных функций с неявным возвратом.  \t  / Использование const или let {   const foo = \"This value is block-scoped\";   console.log(foo); // Это значение находится в области видимости блока }  console.log(foo); // Ошибка, foo не определено  // Использование var {   var bar = \"This value is NOT block-scoped\";   console.log(bar); // Это значение НЕ находится в области видимости блока }  console.log(bar); // Это значение НЕ находится в области видимости блока \t  Поднятие В JavaScript поднятие — это стандартный процесс перемещения объявлений переменных и функций в верхнюю часть текущей области видимости перед выполнением кода. Технически это означает, что вы можете использовать переменные до их объявления.  \t  foo = \"Variable to declare later\"; console.log(foo); // Переменная, которую нужно объявить позже var foo; \t  Важно знать, что перемещаются на самый верх только объявления, но не инициализации:  \t  console.log(foo); // не определено var foo = \"Variable initialized later\"; \t  Здесь объявление foo перемещено на самый верх, но поскольку оно инициализируется позже, сначала оно будет иметь значение undefined.  Область видимости блока и поднятие Как уже говорилось ранее, const и let находятся в области видимости блока. Блок \"знает\" об этих переменных, но не может использовать их до того, как они будут объявлены. Значения, объявленные с помощью const and let находятся во \"временной мертвой зоне\" до их объявления.  Инициализация let перед объявлением приведет к ошибке ReferenceError:    Однако инициализация const перед объявлением приведет к ошибке SyntaxError, и код даже не будет запущен:    Поднятие функций При использовании объявления функций, последние будут подняты на верх текущей области видимости. Это значит, что вы можете использовать функцию до того, как она будет объявлена.  Однако если вы используете выражение функции, функции не будут подняты, так что в этом случае вам нужно использовать функцию только после ее объявления:  \t  printHelloDeclaration(); function printHelloDeclaration() {   console.log(\"hello\"); // hello }  printHelloExpression(); // Uncaught ReferenceError: printHelloExpression не определено const printHelloExpression = function () {   console.log(\"hello\"); }; \t  Замыкание В официальной документации находим следующее определение понятия \"замыкание\":  Комбинация функции и ее лексического окружения, в котором эта функция была объявлена.  Другими словами, замыкание — это внутренняя функция, которая может обращаться к переменным своей объемлющей или внешней функции. Отсюда можно сделать вывод, что у замыкания есть три цепочки областей видимости:  доступ к собственной области видимости блока; доступ к области видимости своей объемлющей функции (или внешней функции); доступ к глобальной области видимости. Взгляните на следующий пример:  \t  var firstTimout = 500; var secondTimout = 1000;  function startCounter() {   var counter = 0; // локально для startCounter    setTimeout(     // первое замыкание     function () {       var innerCounter = 0; // локально для первого замыкания       counter += 1; // из объемлющей функции (startCounter)       console.log(\"counter = \" + counter);        setTimeout(         // второе замыкание         function () {           counter += 1; // из самой внешней функции (startCounter)           innerCounter += 1; // из объемлющей функции(первое замыкание)           console.log(             \"counter = \" + counter + \", innerCounter = \" + innerCounter           );         },         secondTimout // из глобальной области видимости       );     },     firstTimout // из глобальной области видимости   ); }  startCounter(); \t  В этом примере мы видим, что у нас могут быть вложенные замыкания, каждое из которых имеет доступ ко всем переменным объемлющих функций, их локальным и глобальным переменным. Я использовал здесь тайм-ауты, чтобы показать самую важную особенность замыканий, а именно:  Внутренняя функция будет иметь доступ к значениям внешней функции, даже если внешняя функция была уже возвращена.  Каррирование Принцип замыкания в JavaScript позволяет нам воспользоваться преимуществами каррирования, которое является важной концепцией функционального программирования.  Каррирование — это преобразование функций, которое переводит функцию из вызываемой как f(a, b, c) в вызываемую как f(a)(b)(c).  Другими словами, каррированная функция не будет возвращать значение после передачи аргумента. Вместо этого функция будет возвращать новую функцию, ожидая следующего аргумента из набора до тех пор, пока все аргументы не будут исчерпаны. Результат всех функций будет возвращен после передачи последнего аргумента. Ниже показана реализация функции сложения:  \t  // Стандартный способ const add = (first, second, third) => first + second + third;  console.log(add(1, 2, 3)); // 6  // С каррированием const addCurried = (first) => (second) => (third) => first + second + third;  console.log(addCurried(1)(2)(3)); // 6 \t  Более реалистичным случаем использования каррирования является внедрение обработчиков событий с предопределенными аргументами. Возьмем в качестве примера следующий обычный компонент React:  \t  import React from \"react\";  export function ButtonGroup() {   const createClickHandler = (message) => (e) => {     alert(message);   };    return (     <div>       <button onClick={createClickHandler(\"Button 1 clicked!\")}>#1</button>       <button onClick={createClickHandler(\"Button 2 clicked!\")}>#2</button>       <button onClick={createClickHandler(\"Button 3 clicked!\")}>#3</button>     </div>   ); } \t  В этом случае предупреждение появится только после нажатия на кнопку. Благодаря замыканию, предупреждающее сообщение будет тем же сообщением, которое было передано при первом вызове каррированной функции.  Можете ознакомиться с этой статьей, чтобы лучше понимать, что такое каррирование и как его использовать.  IIFE IIFE (Immediately Invoked Function Expression) — это функция, которая вызывается сразу же после ее определения. IIFE важны, поскольку все переменные, объявленные внутри этих функций, недоступны во внешней области видимости. Вероятнее всего, эти функции понадобятся вам, когда вам нужно будет непосредственно выполнить код и гарантировать конфиденциальность данных.  \t  (() => {   var foo = \"This value is private\";   console.log(foo); // Это значение является приватным })();  console.log(foo); // Ошибка: foo не определено \t  Примером использования IIFE и шаблона модулей JavaScript может служить внедрение объекта Singleton:  \t  class MyDAO {   // ... }  export default (function () {   var instance;    function createInstance() {     var classObj = new MyDAO();     return classObj;   }    return {     getInstance: function () {       if (!instance) {         instance = createInstance();       }       return instance;     },   }; })(); \t  В дальнейшем мы будем иметь доступ только к одному экземпляру, когда будем импортировать наш объект singleton в другое место:  \t  import MySingletonDAO from \"./MyDAO\" \t  \t  const instance1 = MySingletonDAO.getInstance() const instance2 = MySingletonDAO.getInstance() \t  \t  console.log(instance1 === instance2) // true",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 2,
    "tag": [
      6,
      26,
      30,
      17
    ]
  }
},
{
  "model": "articles.article",
  "pk": 11,
  "fields": {
    "registration_time": "2022-07-13T14:21:12Z",
    "slug": "instrumenty-uproshayushie-razrabotku",
    "is_active": true,
    "title": "Инструменты упрощающие разработку",
    "body": "5 инструментов Chrome DevTools, упрощающие разработку Chrome DevTools — лучший друг веб-разработчика. Этот набор инструментов содержит массу полезных свойств и не совсем очевидных функций, о которых не все знают.  Большинство разработчиков используют базовые функции, например исследование элементов на странице. Но Chrome DevTools скрывает куда более интересные возможности. Цель этой статьи — рассказать о некоторых из наиболее полезных малоизвестных функций и показать, как они помогают в разработке.  Ссылка на элементы HTML Одна из самых малоизвестных функций Chrome DevTools — возможность ссылаться на элементы HTML. Это можно сделать в два простых шага.  - Откройте Chrome DevTools и перейдите к представлению Elements.  - Щелкните правой кнопкой мыши элемент, на который вы хотите сослаться, и выберите Store as global variable.  Ссылка на элементы HTMLM Теперь у вас есть ссылка на HTML-элемент, к которому вы можете получить доступ и проверить его в консоли.  Логпоинты Логпоинты — это способ предоставления отладочной информации в консоль без необходимости прибегать к console.log(). Эта функция позволяет очистить кодовую базу от мусора, который образуется в результате работы с console.log.  Логпоинты Добавить новый логпоинт можно, щелкнув правой кнопкой мыши любую строку на вкладке источников в DevTools и указав выражение, которое нужно логировать. Когда эта строка будет выполнена, вы получите ее значение в консоли.  Live expressions Live expressions — это функция, которая показывает значение выражения по мере его изменения. Она пригодится для отслеживания проблем с затратными выражениями (например, используемыми в анимации) или теми, которые часто меняются (например, при итерации по массиву).  Все, что вам нужно сделать, — нажать на кнопку Create live expressions и указать выражение, которое вы хотите отслеживать. После этого будет автоматически показываться значение выражения по мере его изменения.  Live expressions console.trace() console.trace() — это утилита, которая позволяет узнать, где был сделан конкретный вызов определенной функции. Допустим, у вас есть внутренняя функция, которая используется в разных местах и вызывает проблему. Чтобы устранить эту проблему, необходимо сначала выяснить, где она вызывается.  console.trace console.trace() предоставляет эту информацию. Достаточно просто вставить ее внутрь функции, которую нужно отследить.  console.trace Обратите внимание: трассировка стека показывает, что вызову innerFunction предшествовал вызов outterFunction.  Это отличный способ устранить неполадки и выяснить, где именно происходят сбои.  Консольные утилиты Консольные утилиты являются неотъемлемой частью функций Chrome Dev Tools. Console Utilities API содержит набор удобных функций для выполнения распространенных задач. Более подробно о них можно прочитать здесь.  Утилиты $() и $$() заменяют document.querySelector() и document.querySelectorAll() соответственно.  Консольные утилиты Они возвращают ожидаемый список узлов и приводят результаты к массивам, чтобы вы могли использовать map() и filter().  Это лишь некоторые из малоизвестных функций Chrome DevTools, которые могут облегчить процесс разработки. Самостоятельно исследуя этот набор инструментов, вы сможете найти еще больше лайфхаков, которые оптимизируют ваш рабочий процесс.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 2,
    "tag": [
      6,
      30
    ]
  }
},
{
  "model": "articles.article",
  "pk": 12,
  "fields": {
    "registration_time": "2022-07-13T14:22:22Z",
    "slug": "kak-vylozhit-svoj-proekt-na-github",
    "is_active": true,
    "title": "Как выложить свой проект на GitHub?",
    "body": "Если вы, как и я, решили освоить git, то скорее всего у вас возникнет желание разместить свой проект на GitHub.com для публичного доступа.  Как новичку мне было сложно понять, каким образом создать связь между репозиториями. То есть локально у нас есть набор файлов проекта. Нужно каким-то образом выложить их на гитхаб. По сути это обычное копирование, но в git это работает не так очевидно. Пробившись несколько дней, я написал свою пошаговую инструкцию для новичков.  Два способа Существует два способа для связи с гитхабом. Они далеко не так очевидны для новичков. Основной нюанс заключается в том, какой именно будет использован гитхабовский репозиторий: совершенно пустой (не инициализированный) или уже рабочий. Именно это будет определять два разных варианта работы.  Первый способ подходит для уже инициализированных удаленных репозиториев. Для связи GitHub с локальной копией, вначале следует клонировать гитхабовский репозиторий как локальный. Только после этого можно изменить локальный и отправить его на удалённый.  Второй способ используется для совершенно пустого гитхабовского репозитория. Если уже есть локальный репозиторий, то можно вручную связать его с гитхабом без клонирования.  Регистрация на GitHub.com Вначале нужно зарегистрироваться на GitHub.com. Процедура простая, не будем на ней останавливаться. После этого нужно создать репозиторий. В поле «Repository name» следует указать имя, которое в будущем будет совпадать с каталогом проекта. Это удобно, хотя, локальный каталог может быть любым. Пусть проект называется «demo».  Создание нового репозитория на GitHub  Здесь очень важнный момент. Если вы отметите любые опции (добавить .gitignore, лицензию и/или readme), то фактически это будет означать инициализацию репозитория. То есть это уже не пустой репозиторий, а наполненный и инициализировнный. В этом случае для связки придётся вначале клонировать удаленный. Это первый способ.  Если же вы не отметили ни одной опции, то гитхаб создаст совершенно пустой репозиторий без инициализации. И вот такой репозиторий можно связать с уже существующим локальным. Это второй способ.  После создания репозиторий получит уникальную ссылку, например: https://github.com/USER/demo.git- где USER — ваш логин в гитхабе. Эта ссылка потребуется для работы.  Установка Git Я всё ставил с официального сайта Git. Там же на сайте есть руководство Book, где описаны все начальне шаги. Поэтому будем считать, что git установлен и настроен.  Рассмотрим два способа отдельно.  Первый способ Наш проект размещается в каталоге /demo/. Было бы неплохо сохранить этот каталог и для дальнейшей работы. Для того, чтобы обезопасить себя, переименуем его /demo-temp/любым файловым менеджером. То есть теперь каталога /demo/у нас нет.  Запускаем git-bash и клонируем удаленный репозиторий на локальную машину:  \t  git clone https://github.com/USER/demo.git \t  — где USER — ваше имя на гитхабе. Ссылку также можно скопировать со страницы репозитория в поле «HTTPS clone URL».  Ссылка репозитория GitHub  Появится каталог /demo/который создал git. Он должен быть пустой, кроме подкаталога «.git» — это служебный каталог, и его трогать не нужно.  Теперь копируем в каталог /demo/содержимое нашего проекта, которое мы сохранили в /demo-temp/. Всё, что мы сюда скопируем, будет вылождено на GitHub, поэтому желательно удалить все ненужные файлы. Если какие-то служебные файлы требуются для проекта, то их можно указать в файле .gitignore.  Выполняем команду  \t  git add . \t  Это добавит все файлы для отслеживания git'ом. Проверить состояние (до и после add) можно командой  \t  git status \t  Теперь делаем коммит (сообщение любое):  \t  git commit -m \"Add project\" \t  Пока мы работаем с локальным репозиторием. То есть нужно настроить его так, чтобы он оказался в том виде, который отправится на гитхаб.  Для удобства можно сразу выставить метку версии (опять же любой вариант):  \t  git tag v1.0 \t  Теперь можно отправить изменения на гитхаб.  \t  git push \t  Git может выдать сообщение, что команда push не настроена по-умолчанию. Пока не обращайте внимания на это сообщение. Нужно будет внести изменения в конфигурацию позже.  Git потребует ввести логин и пароль для GitHub.com. Учитывайте, что пароль полностью скрывается, поэтому не будет видно даже «звездочек». После ввода нажимаем Enter и git выполнит обновление удаленного репозитория.  Теперь нужно обновить метки на удаленном репозитории (если вы их задали).  \t  git push --tags \t  Здесь также нужно будет ввести логин и пароль.  Всё, синхронизация выполнена! Временный каталог /demo-temp/можно удалить или сохранить как старый резервный вариант.  Если мы зайдем на страницу репозитория на гитхабе, то увидим свой проект.  Для настройки push, если требуется, пишем:  \t  git config --global push.default simple \t  Второй способ Наш проект может размещатся в любом каталоге. Для него нужно инициализировать git. Это стандартная процедура:  \t  git init git add . git commit -m \"Init\" \t  Теперь для проекта git работает и его можно использовать по своему усмотрению: добавлять версии, смотреть логи, делать ветки и т.п.  Для связи с GitHub'ом следует указать удаленный репозиторий:  \t  git remote add origin https://github.com/USER/demo.git git push -u origin master \t  Этот код указывает адрес удаленного и отправляет все изменения на гитхабовский сервер. Если мы зайдем на страницу репозитория на гитхабе, то также увидим свой проект.",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 2,
    "tag": [
      17
    ]
  }
},
{
  "model": "articles.article",
  "pk": 13,
  "fields": {
    "registration_time": "2022-07-13T14:24:20Z",
    "slug": "vyrezaem-izobrazhenie-s-pomoshyu-jquery-i-php",
    "is_active": true,
    "title": "Вырезаем изображение с помощью jQuery и PHP",
    "body": "Допустим Ваш клиент загрузил изображение в CMS и сказал, что ему оно не нравится, и он хотел бы его изменить. Этот сценарий знают практически все. В этом статье мы опишем механизм вырезки изображения, и всё, что Вашему клиенту останется сделать, так это выделить нужный фрагмент и нажать на кнопку.  После того, как мы вырежем изображение через PHP GD, сохраним то, что у нас получилось на диске.  Мы будем больше уделять внимание части редактирования изображения, полагая, что клиент предварительно его загрузил:  \t  <p>Выделите необходимый фрагмент.</p> <p>     <img id=\"photo\" src=\"photo.jpg\" alt=\"\" title=\"\" style=\"margin: 0 0 0 10px;\" /> </p> \t  У нас есть изображение с id и стилем. В нашем деле нам поможет плагин jQuery ImgAreaSelect, ну для того чтобы не изобретать велосипед.  Подключаем библиотеки и таблицы стилей в разделе head:  \t  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/imgareaselect-default.css\" /> <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"></script> <script type=\"text/javascript\" src=\"scripts/jquery.imgareaselect.pack.js\"></script> \t  Теперь Вы готовы к «волшебству»! Мы покажем пользователю небольшое превью, которое реализуем через jQuery  \t  $(document).ready(function () {     $('<div><img src=\"photo.jpg\" style=\"position: relative;\" /><div>') .css({         float: 'left',         position: 'relative',         overflow: 'hidden',         width: '100px',         height: '100px'     }) .insertAfter($('#photo')); }); \t  Данный код выведет блок размером 100x на 100px. Теперь реализуем функциональность, отвечающую за вырезание  \t  $(document).ready(function () {     $('<div><img src=\"photo.jpg\" style=\"position: relative;\" /><div>') .css({         float: 'left',         position: 'relative',         overflow: 'hidden',         width: '100px',         height: '100px'     }) .insertAfter($('#photo'));       $('#photo').imgAreaSelect({         aspectRatio: '1:1',         handles: true,         onSelectChange: preview     }); }); \t  Мы добавили вызов нашего плагина, передали несколько параметров и функцию обратного вызова, которая отобразит выделенный нами фрагмент в отдельном блоке. Вот как она выглядит:  \t  function preview(img, selection) {     var scaleX = 100 / (selection.width || 1);     var scaleY = 100 / (selection.height || 1);     $('#photo + div > img').css({         width: Math.round(scaleX * 600) + 'px',         height: Math.round(scaleY * 400) + 'px',         marginLeft: '-' + Math.round(scaleX * selection.x1) + 'px',         marginTop: '-' + Math.round(scaleY * selection.y1) + 'px'     }); } \t  Тут пожалуй мы немного объясним. Наш плагин отправит 2 параметра анонимной функции, изображение и координаты выделения. Выделение представлено у нас объектом, содержащим ширину, высоту и границы.  Затем мы получаем новые координаты и, изменяя значения свойств CSS нашего презентационного блока, показываем отдельный фрагмент фотки. Ну ни круто ли?  Ну и что теперь? Что дальше? Круть конечно полнейшая, но как нам сохранить выделенное изображение. Для этого нам необходимо послать соответствующие координаты в файл PHP. Чтобы нам было проще, создадим форму, в которую запишем соответствующие данные для отправки.  Давайте же создадим формы ниже нашего изображения:  \t  <p>     <img id=\"photo\" src=\"photo.jpg\" alt=\"\" title=\"\" style=\"margin: 0 0 0 10px;\" /> </p>  <form action=\"crop.php\" method=\"post\">     <input type=\"hidden\" name=\"x1\" value=\"\" />     <input type=\"hidden\" name=\"y1\" value=\"\" />     <input type=\"hidden\" name=\"x2\" value=\"\" />     <input type=\"hidden\" name=\"y2\" value=\"\" />     <input type=\"hidden\" name=\"w\" value=\"\" />     <input type=\"hidden\" name=\"h\" value=\"\" />     <input type=\"submit\" value=\"Crop\" /> </form> \t  Теперь напишем JavaScript фрагмент, который будет заполнять поля нашей формы. Код примерно такой  \t  function preview(img, selection) {     var scaleX = 100 / (selection.width || 1);     var scaleY = 100 / (selection.height || 1);     $('#photo + div > img').css({         width: Math.round(scaleX * 600) + 'px',         height: Math.round(scaleY * 400) + 'px',         marginLeft: '-' + Math.round(scaleX * selection.x1) + 'px',         marginTop: '-' + Math.round(scaleY * selection.y1) + 'px'     }); }   $(document).ready(function () {     $('<div><img src=\"photo.jpg\" style=\"position: relative;\" /><div>') .css({         float: 'left',         position: 'relative',         overflow: 'hidden',         width: '100px',         height: '100px'     }) .insertAfter($('#photo'));       $('#photo').imgAreaSelect({         aspectRatio: '1:1',         handles: true,         onSelectChange: preview,         onSelectEnd: function ( image, selection ) {             $('input[name=x1]').val(selection.x1);             $('input[name=y1]').val(selection.y1);             $('input[name=x2]').val(selection.x2);             $('input[name=y2]').val(selection.y2);             $('input[name=w]').val(selection.width);             $('input[name=h]').val(selection.height);         }     }); }); \t  Когда вы выделили необходимую область (отпустили кнопку мыши), функция обратного вызова вставит 4 координаты в поля нашей формы. После нажатия на кнопку Crop, эти данные отправляются в PHP файл crop.php, который вырежет выбранный фрагмент и сохранит его на диске. Содержимое файла crop.php  \t  // оригинальное изображение $filename = 'photo.jpg'; //die(print_r($_POST)); $new_filename = 'photo1.jpg';  // получаем размеры изображения list($current_width, $current_height) = getimagesize($filename);  // координаты x и y оригинального изображение, где мы // будем вырезать фрагмент, по данным, берущимся из формы $x1    = $_POST['x1']; $y1    = $_POST['y1']; $x2    = $_POST['x2']; $y2    = $_POST['y2']; $w    = $_POST['w']; $h    = $_POST['h'];       //die(print_r($_POST));  // финальные размеры изображения $crop_width = 100; $crop_height = 100;  // создаём маленькое изображение $new = imagecreatetruecolor($crop_width, $crop_height); // создаём оригинальное изображение $current_image = imagecreatefromjpeg($filename); //вырезаем imagecopyresampled($new, $current_image, 0, 0, $x1, $y1, $crop_width, $crop_height, $w, $h); // создаём новое изображение imagejpeg($new, $new_filename, 95);",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 2,
    "tag": [
      6,
      4
    ]
  }
},
{
  "model": "articles.article",
  "pk": 14,
  "fields": {
    "registration_time": "2022-07-13T14:24:52Z",
    "slug": "masshtabirovanie-v-css-sredstvami-zoom-i-transform",
    "is_active": true,
    "title": "Масштабирование в CSS средствами zoom и transform",
    "body": "Масштабировать элементы можно используя css свойство zoom. Но свойство CSS Zoom, поддерживается в IE 5.5+, Opera, Safari 4 и Chrome.  Firefox - единственный браузер, который не поддерживает css свойство zoom. Начиная с Firefox 3.5 рекомендуется использовать css свойство с префиксом -moz-transform.  Пример:  \t  div.zoom {       zoom: 2; /* all browsers */      -moz-transform: scale(2);  /* Firefox */ } \t  Масштабирование блока на CSS  Cегодня мы можем просто использовать CSS свойство transform: scale. Это уже работает во всех современных браузерах. scale необходимо задать параметиры (X, Y), например (0,5).  \t  -moz-transform: scale(0.5, 0.5);  -ms-transform: scale(0.5, 0.5);  -webkit-transform: scale(0.5, 0.5);  -o-transform: scale(0.5, 0.5);  transform: scale(0.5, 0.5); \t  Преобразование может оставить пустое пространство вокруг элемента, который получил меньший размер после визуализации (преобразование применяется после визуализации), и для минимизации проблем пустого интервала мы можем использовать transform-origin CSS.  \t  -moz-transform-origin: left top;  -ms-transform-origin: left top;  -webkit-transform-origin: left top;  transform-origin: left top; \t  Значения можно так же указывать в % и px  Рекомендуется добавить максимальную высоту - max-height элементу или отрицательный margin-bottom.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 2,
    "tag": [
      25,
      24,
      6,
      30
    ]
  }
},
{
  "model": "articles.article",
  "pk": 15,
  "fields": {
    "registration_time": "2022-07-13T14:25:43Z",
    "slug": "ispolzovanie-html5-elementa-audio-v-javascript",
    "is_active": true,
    "title": "Использование HTML5-элемента audio в JavaScript",
    "body": "Благодаря тегу audio появившемуся в HTML5, можно очень просто добавлять звук на сайт. В javascript работать со звуком позволяет соответствующий класс Audio, а проверить поддержку формата звукового файла в браузере - метод canPlayType.  Доступ к audio в javascript Если в HTML есть тег audio, доступ к соответствующему объекту Audio можно получить через имя тега  \t  var audio = document.getElementsByTagName('audio')[index]; \t  или через id  \t  var audio = document.getElementById('my-audio-id'); \t  Объект Audio также можно создать в js.   Создание объекта Audio в javascript \t  var myAudio = new Audio(); myAudio.src = 'sound.ogg';  //или  var myAudio = new Audio('sound.ogg'); \t  Создание объекта Audio в jQuery  \t  $('audio').attr('src', 'audio_file.mp3') \t  Используется один из поддерживаемых форматов (mp3, wav, ogg) Воспроизведение звука и пауза:  \t  //воспроизведение звука myAudio.play();  // пауза myAudio.pause();  // после паузы воспроизведение продолжится с места остановки myAudio.play(); \t  Как остановить воспроизведение audio Команды stop нет, и чтобы остановить воспроизведение звукового файла, нужно два действия - пауза и задание нулевого значения для свойства currentTime- текущее время:  \t  // Функция stop для Audio: HTMLAudioElement.prototype.stop = function() { \tthis.pause(); \tthis.currentTime = 0.0; }  ...  // использование myAudio.stop(); \t  События audio loadeddata - данные загружены Используем событие loadeddata , чтобы начать воспроизведение большого звукового файла после окончания загрузки:  \t  var loaded = false;  var myAudio = new Audio();  myAudio.addEventListener('loadeddata', function() { \tloaded = true; \tmyAudio.play(); }, false);   myAudio.src = 'background.ogg'; \t  Обработчик события окончания загрузки записан раньше, т.к. он должен быть доступен во время загрузки файла, которая начинается сразу после задания src.  error - обработка ошибки загрузки \t  myAudio.addEventListener('error' , function() { \talert('ошибка загрузки файла'); }, false);  myAudio.src = 'nofile.ogg'; \t  onended - окончание воспроизведения Длительность звукового файла  \t  var audio = document.createElement('audio');  audio.src = 'mus3.mp3';  // time=NaN var time = audio.duration; \t  Свойство duration может быть недоступно, если не завершена загрузка метаданных, правильно:  \t  audio.addEventListener('loadedmetadata', function() { \ttime = audio.duration; }); \t  Изменение свойств audio Используем свойство muted - кнопки включения и выключения звука на странице:  \t  <html> <body> \t<input type=\"button\" onclick=\"aud.muted=true\" value=\"Выключить\" /> \t<input type=\"button\" onclick=\"aud.muted=false\" value=\"Включить\" /> </body> </html> \t  Хотелось бы выключать фоновый звук, когда посетитель сайта переключается на другое окно или вкладку браузера. Важно, что выражение muted=true сработает, если будет выполняться после завершения загрузки звукового файла, т.е. его следует поместить в обработчик события loadeddata:  \t  var loaded = false; var myAudio = new Audio();  myAudio.addEventListener('loadeddata', function() { \tmyAudio.muted = true; }, false);  myAudio.src = 'background.ogg'; myAudio.play(); \t  Поддержка элемента Audio и форматов звуковых файлов Для проверки поддержки форматов звуковых файлов браузером используется метод canPlayType с параметром  текстовым значением MIME-типа.  \t  audio.canPlayType('audio/ogg'); \t  Можно явно указать кодек:  \t  audio.canPlayType('audio/ogg; codecs=\"vorbis\"'); \t  canPlayType возвращает одно из 3 значений:  probably - наверное maybe - может быть \"\" (пустая строка) - формат не поддерживается Пример проверки поддержки формата mp3 Можете проверить, Opera не поддерживает формата mp3  \t  var audio = new Audio(); var canPlayMmp3 = !!audio.canPlayType && audio.canPlayType('audio/mp3') != \"\";  if(!canPlayMmp3) { \tdocument.write('mp3 не поддерживается! '); } \t  !! преобразует объект строки в логический тип Пример проверки поддержки audio и форматов файлов \t  <script> function check_audio() {  var elem = document.createElement('audio'), bool = false; \ttry { \tif ( bool = !!elem.canPlayType ) { \t\tbool = new Boolean(bool); \t\tbool.ogg = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,''); \t\tbool.mp3 = elem.canPlayType('audio/mpeg;').replace(/^no$/,''); \t\tbool.wav = elem.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/,''); \t\tbool.m4a = (elem.canPlayType('audio/x-m4a;') || elem.canPlayType('audio/aac;')).replace(/^no$/,''); \t} \t} \tcatch(e) {  \t}    return bool; }  var b = check_audio();  if(!b) { \tdocument.write('Audio не поддерживается'); } else { \tvar formats = ['ogg', 'mp3', 'wav', 'm4a'];  \tfor(var i = 0; i < formats.length; i++) { \t\tdocument.write(formats[i] + ' - ' + b[formats[i]] + ' '); \t} } </script> \t  Если функция check_audio возвращает false, браузер не поддерживает элемент audio. Если элемент audio поддерживается, проверяется возможность использования форматов файлов ogg, mpeg, wav и m4a.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 2,
    "tag": [
      24,
      6,
      30
    ]
  }
},
{
  "model": "articles.article",
  "pk": 16,
  "fields": {
    "registration_time": "2022-07-13T14:27:07Z",
    "slug": "chetyre-sposoba-plavnogo-skrolla-do-elementa-na-javascript",
    "is_active": true,
    "title": "Четыре способа плавного скролла до элемента на JavaScript",
    "body": "Плавный скролл до элемента на JavaScript Разработаем следующее: после клика по ссылке будет происходить плавный скролл до элемента на JavaScript. Реализуем это без использования плагинов, сначала при помощи библиотеки jQuery, а затем на чистом JavaScript Плавный скролл до якоря. С помощью jQuery. Для всех ссылок, начинающихся с #. На чистом JavaScript - метод Element.scrollIntoView(). На чистом JavaScript - метод Window.scrollBy(). Сначала в HTML реализуем обычный «грубый» переход к секции, а затем уже добавим jQuery для создания плавности скролла.  Добавим codeid секциям к которым мы хотим выполнять скролл, а ссылкам атрибут codehref в формате code#name. Решетка - означает идентификатор (id), а name - имя идентификатора.  Наш HTML файл получится примерно такой.  \t  <nav class=\"scrollto\">     <ul>         <li><a href=\"#element1\">Ссылка-1</a></li>         <li><a href=\"#element2\">Ссылка-2</a></li>         <li><a href=\"#element3\">Ссылка-3</a></li>     </ul> </nav>  <section id=\"element1\">Секция-1</section> <section id=\"element2\">Секция-2</section> <section id=\"element3\">Секция-3</section> \t  Атрибут href указывает к какому элементу необходимо осуществить переход.  1. Плавный скролл с используя jQuery Теперь добавим плавности с помощью библиотеки jQuery. В js-файле добавьте следующи код.  \t  $('.scrollto a').on('click', function() {      let href = $(this).attr('href');      $('html, body').animate({         scrollTop: $(href).offset().top     }, {         duration: 370,   // по умолчанию «400»          easing: \"linear\" // по умолчанию «swing»      });      return false; }); \t  Чтобы добавить плавность перехода для необходимого элемента, просто добавьте навигации класс scrollto  Изменить скорость скролла можно поменяв значение duration  2. Плавный скролл для всех ссылок, начинающихся с # Для этого мы обратимся к селектору атрибута тега a при помощи ^ - что будет означать, что мы выбираем все ссылки, начинающиеся с # (решётки)  \t  $('a[href^=\"#\"').on('click', function() {      let href = $(this).attr('href');      $('html, body').animate({         scrollTop: $(href).offset().top     });     return false; }); \t  3. Плавный скролл на чистом JavaScript - метод Element.scrollIntoView() Будем использовать метод scrollIntoView(). Это стандартный нативный метод JavaScript.  \t  const smoothLinks = document.querySelectorAll('a[href^=\"#\"]'); for (let smoothLink of smoothLinks) {     smoothLink.addEventListener('click', function (e) {         e.preventDefault();         const id = smoothLink.getAttribute('href');          document.querySelector(id).scrollIntoView({             behavior: 'smooth',             block: 'start'         });     }); }; \t  У метода scrollIntoView() есть недостаток.  Если у нас будет навигация position: fixed, то нам необходимо добавить отступ сверху на x-пикселей, т.е. высоту навигации.  Для решения данной задачи отлично подойдёт метод Window.scrollBy().  4. Плавный скролл на чистом JavaScript - метод Window.scrollBy() Метод Window.scrollBy() имеет параметр top в котором мы укажем количество пикселей, на сколько нам необходимо прокрутить страницу.  От общей высоты документа отнимем высоту навигации и получим необходимое смещение в пикселях по оси Y.  \t  document.querySelectorAll('a[href^=\"#\"').forEach(link => {      link.addEventListener('click', function(e) {         e.preventDefault();          let href = this.getAttribute('href').substring(1);          const scrollTarget = document.getElementById(href);          const topOffset = document.querySelector('.scrollto').offsetHeight;         // const topOffset = 0; // если не нужен отступ сверху          const elementPosition = scrollTarget.getBoundingClientRect().top;         const offsetPosition = elementPosition - topOffset;          window.scrollBy({             top: offsetPosition,             behavior: 'smooth'         });     }); }); \t  Если нужен отступ сверху, укажите class элемента (навигации), чтобы вычислить его высоту. Если не нужен отступ, переменной topOffset присвойте значение 0.",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 2,
    "tag": [
      6,
      30
    ]
  }
},
{
  "model": "articles.article",
  "pk": 17,
  "fields": {
    "registration_time": "2022-07-13T14:28:11Z",
    "slug": "kak-izbezhat-povtornoj-zagruzki-kontenta-jquery-ajax-json",
    "is_active": true,
    "title": "Как избежать повторной загрузки контента Jquery + Ajax + JSON",
    "body": "Предисловие Совсем недавно разрабатывал сервис интернет каталога с подгружаемым контентом. Задача состояла в том, что каталог должен быть с древовидной структурой, в каждой категории должны быть под категории и при клике на него, товар должен только разворачиваться и подгружаться Ajax'ом, для того что бы товар динамически подгружался дабы сократить объемы загрузки страницы. Для работы Front - End'а доступны были по ТЗ только таковы инструменты Java Script, JQuery, Ajax, JSON и конечно же HTML + CSS. Разработка 1) Сперва, я собрал дерево в HTML и CSS - создать дерево самому или найти в сети не так уж проблематично.  2) Создание самого механизма на JQuery.  <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\"> ...  <script>     $(document).ready(function() {         $('.article').click(function(){             var articleView = $(this).parent('.Node').find('.article');             var viewArticle = $(this).parent('.Node').find('.articleBlock');             var url = $(this).attr('data');             $.getJSON(url, function(data){                 $.each(data, function(i, field){                     var productCount = viewArticle.append('+field.price+' руб.'+field.name+');                  });              });           });       });  </script>  Все стало подгружаться, все заработало, можно было сказать Ура! Но..., при повторном клике подкатегории товар дублировался опять и oпять.  3) Доработка механизма   <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\"> ...  <script>     $(document).ready(function() {         $('.article').click(function(){             var articleView = $(this).parent('.Node').find('.article');             var viewArticle = $(this).parent('.Node').find('.articleBlock');             var url = $(this).attr('data');             $.getJSON(url, function(data){                 $.each(data, function(i, field){                     var productCount = viewArticle.append('+field.price+' руб.'+field.name+'');                      if ( articleView.attr(\"data\") == productCount ) { articleView.removeAttr(\"data\") }                      else { articleView.attr(\"data\", productCount); }                   });              });          });      });  </script>   Все заработало! Выкладываю исходник (черновой вариант, не поправлены стили ), рабочий.  Пример  Решение сырое, но рабочее, доработать будет не сложно.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 2,
    "tag": [
      34,
      33,
      29
    ]
  }
},
{
  "model": "articles.article",
  "pk": 18,
  "fields": {
    "registration_time": "2022-07-13T14:29:57Z",
    "slug": "kak-iskusstvennyj-intellekt-ispolzuetsya-v-mobilnoj-razrabotke",
    "is_active": true,
    "title": "Как искусственный интеллект используется в мобильной разработке?",
    "body": "Мобильные приложения стали неотделимой частью человеческой жизни. Они решают множество задач, помогают бизнесу продвигать продукты и услуги как локально, так и глобально. Учитывая растущий спрос на многофункциональные приложения и обеспечение пользователей повышенной ценностью и наилучшим опытом, компании все больше фокусируются на создании уникальных и умных приложений на базе передовых технологий: Блокчейн, 5G, AR (дополненная реальность) и VR (виртуальная реальность), AI (искусственный интеллект) и ML (машинное обучение). AI и ML трансформировали то, как мы взаимодействуем с различными машинами и способствуют максимальной персонализации пользовательского опыта. Медиа и маркетинговые компании, отрасли образования, здравоохранения и другие все чаще интегрируют искусственный интеллект в свои продукты, тем самым стремясь улучшить свой сервис и репутацию бренда.   Ниже описываем преимущества, которые дает применение искусственного интеллекта и машинного обучения в мобильной разработке.   1. Расширение возможностей поиска.  AI и ML привели к росту использования голосового поиска и голосовых команд. Теперь можно попросить виртуального ассистента вроде Google Assistant, Siri, Alexa или в отечественном варианте — Алиса или Маруся — что-нибудь для вас найти. Будь то рестораны, или ювелирные магазины, или любая иная необходимая информация, получить ответы можно, просто задав правильный вопрос поисковым системам.    2. Анализ и прогнозирование  Будь то доставка готовой еды или продуктов, продавцы книг или поставщики кухонь, компании используют искусственный интеллект и машинное обучение в мобильных приложениях, чтобы исследовать интересы клиентов и понять, как  сделать свой сервис для них лучше. Данные получают непосредственно через сами мобильные продукты, и далее они передаются и обрабатываются чаще всего на серверной стороне. Чат-боты позволяют клиентам получать ответы на стандартные, часто задаваемые вопросы быстрее, не дожидаясь ответа живого сотрудника. А через пуш-уведомления можно доставить персонализированные рекомендации, основанные на истории поиска, местоположении пользователя, возрасте и предпочтениях. Анализ и прогнозирование с помощью искусственного интеллекта применяются также и в IoT-приложениях (приложениях для интернета вещей — множества объектов, объединенных через интернет и обменивающихся между собой данными). Так, существующие подобные сервисы для промышленности собирают данные с различных датчиков и сенсоров, анализируют их, формируют отчеты, позволяют проводить аудит качества, выявлять брак, AI и ML-технологии моделируют негативные сценарии для производственных процессов и оборудования, выявляют их, предупреждают и оповещают о необходимости повлиять на них.    3. Система распознавания лиц.  После релиза iPhone X в 2017 году, распознавание лица стало популярной фичей в смартфонах ввиду простоты ее использования и дополнительного уровня безопасности. Производители смартфонов используют AI и ML-основанные алгоритмы для идентификации лиц, чтобы разблокировать устройство и различные приложения в нем. В будущем, в телефонах появятся продвинутые версии данных технологий, которые будут определять человека с учетом его изменений внешности: например, наличия бороды или ношения очков.   4. Повышенная безопасность приложений С ростом киберпреступности, безопасность данных и приложений стала еще более важна. Использование искусственного интеллекта и машинного обучения в разработке мобильного приложения поможет обнаруживать вредоносное ПО и угрозы в реальном времени и предупреждать пользователей или предприятия о них, чтобы предотвратить нанесение вреда.   5. Перевод иностранных языков в реальном времени Приложения-переводчики довольно популярны, однако большинство из них требуют стабильного интернет-соединения для корректной плавной работы. С интеграцией ИИ и машинного обучения напрямую в мобильное приложение смартфонам больше не будет нужно подключение интернета, чтобы переводить с множества языков.   Мобильное приложение на основе технологии искусственного интеллекта SberMedAI, помогающее определить вероятность наличия респираторного заболевания Не исключено, что именно те компании, которые быстро и эффективно интегрируют технологии искусственного  интеллекта в своих проектах, будут иметь ощутимое конкурентное преимущество на рынке. Мы в студии разработки мобильных приложений AppCraft готовы подсказать, каким образом в вашем сервисе могут быть применены AI и ML-технологии, и реализовать вашу идею оптимальным способом.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 3,
    "tag": [
      32,
      20,
      21,
      19
    ]
  }
},
{
  "model": "articles.article",
  "pk": 19,
  "fields": {
    "registration_time": "2022-07-13T14:30:48Z",
    "slug": "razrabotka-mobilnogo-prilozheniya-dlya-marketplejsa",
    "is_active": true,
    "title": "Разработка мобильного приложения для маркетплейса",
    "body": "Маркетплейсы начали быстро набирать популярность с 2020 года — в пандемию сфера онлайн-торговли выросла в несколько раз, а к 2024 году объем продаж на маркетплейсах, по прогнозам, вырастет до 7 трлн долларов. Так что, если у вас есть идея для нового приложения, самое время занять свободную нишу. А мы в AppCraft расскажем про нюансы и поможем с разработкой и маркетингом.  Маркетплейс — это интернет-площадка, которая соединяет покупателей и продавцов. На маркетплейсе люди могут сравнить товары от разных производителей и выбрать лучший вариант, не тратя время на изучение каждого магазина по отдельности. Производители получают дополнительный канал продаж с теплой аудиторией, а также возможность сэкономить на маркетинге и развитии своего сайта.  Сейчас рынок действительно открыт для маркетплейсов, но надолго закрепить позиции смогут только профессионально разработанные приложения. За несколько лет пользователи успели привыкнуть к качественному сервису Amazon, eBay, Ozon, Яндекс.Маркет и других крупных компаний, поэтому сырой продукт уже мало кого привлечет.  Давайте разберем, какие моменты нужно учесть, чтобы ваш маркетплейс стал прибыльным и полезным проектом, а не пустой тратой сил и бюджета.   Классический вид мобильного приложения маркетплейса. Источник: behance.net Бизнес-план и монетизация Создание мобильного приложения для маркетплейса — рискованный и требующий больших вложений процесс. Планирование бизнес-плана и способов монетизации поможет ответить на три главных вопроса, которые обычно задают владельцы компаний и инвесторы:  какой минимальное количество пользователей нужно привлечь, чтобы обеспечить нужный поток доходов; сколько понадобится денег для того, чтобы привлечь первый поток пользователей; когда вложенные инвестиции начнут окупаться. Некоторые считают, что бизнес-план нужен только для привлечения инвестиционных денег. Но это не так: он помогает объективно оценить любую идею и понять, насколько она жизнеспособна на реальном рынке. Для каждого проекта структура документа может быть своей, но есть общепринятые пункты, которые можно взять за основу.  Анализ рынка Мониторинг состояния e-commerce сферы, глобальных и региональных трендов, изучение конкурентов, оценка спроса поможет понять, какую прибыль можно получить в конкретный период времени и какие возможности для масштабирования приложения можно использовать в будущем.  Обзор маркетплейса Описание, конкурентные преимущества приложения и основные функции, жизненный цикл бизнеса. Опишите, каким вы видите приложение, его функционал, аудиторию и отличия от действующих конкурентов.  Маркетинговый анализ и стратегия Позиционирование продукта.  Портрет целевой аудитории. Статистика среднего объема затрат на продвижение. Выбор площадок для продвижения и составление медиаплана.  Финансовый план Затраты на разработку приложения. Бюджет на рекламу. Операционные расходы: оплата серверов, лицензий, бухгалтерии, юристов, банковских переводов, логистических затрат, аренды складских помещений и пр. Основные функции Функционал приложения зависит от направления маркетплейса, бюджета и сроков. Разработка базового или «коробочного» набора функций займет намного меньше времени и будет стоить дешевле — об этом рассказываем чуть ниже в тексте. Индивидуальная разработка по ТЗ заказчика может быть дороже в несколько раз и затянуться на 3-5 месяцев.  Вне зависимости от выбранного варианта в приложении для маркетплейса могут быть реализованы следующие функции для запуска:  Регистрация и авторизация  Пользователь должен иметь возможность создать личный кабинет, где будет храниться вся информация о его заказах. Обычно зарегистрироваться можно с помощью почты, номера телефона и социальных сетей. Для безопасности вводится функция двухфакторной аутентификации при авторизации. Также должен быть экран восстановления пароля.  Управление профилями продавца и покупателя  Покупатель может редактировать личные данные, менять пароль, загружать фотографию профиля.  Продавец — добавлять информацию о компании, загружать изображения товаров и описание карточек к ним, создавать роли администратора, владельца и менеджера, ограничивать права доступа к отдельным функциям. А еще в реальном времени следить за транзакциями, статусом доставок, разрешением споров, выгружать статистику и аналитику по каждому товару.  Поиск  Система удобных фильтров и сравнения товаров — главное преимущество маркетплейсов. В базовом варианте можно добавить обычный поиск, а позже реализовать дополнительные опции: автозаполнение, выдача подсказок, исправление ошибок и опечаток в тексте пользователя, сохранение истории запросов и пр.   Реализация поиска и фильтрации в маркетплейсе. Источник: Pinterest Общение между покупателями и поставщиками  Его реализуют в виде совместных чатов, возможности поставить лайки, модуля с отзывами, оценками и рейтингами.  Уведомления  Пуш-уведомления являются частью маркетинговых инструментов: они помогут рассказать о новых товарах и акциях, отследить статус заказа или напомнить о себе, если пользователь давно не заходил в приложение.  Оплата  Ввод данных банковских карт, просмотр и управление покупками, отмена оплаты, история платежей.  Платежная система Безопасность каждого платежа на платформе — одно из важных требований для маркетплейса. Для бесперебойных финансовых расчетов между покупателем и продавцом в приложении нужно использовать надежный платежный шлюз — сервис, который обрабатывает транзакции по банковским картам, шифруя конфиденциальные данные пользователей.  Чем надежнее вы защищаете личную информацию покупателей и чем чаще рассказываете об этом, тем больше люди начинают доверять новому приложению. Добавьте информацию о безопасности персональных и банковских данных на экран корзины и оформления заказа, чтобы мотивировать человека сделать покупку.  Разработка MVP MVP (Minimal Viable Product) — минимально жизнеспособная версия приложения. В нашем случае это тестовый вариант мобильного маркетплейса для оценки его спроса и функциональности. MVP сильно сокращает расходы на разработку и риски в целом. Если продукт на этапе тестирования окажется популярным среди пользователей, его дорабатывают и развивают проект дальше. Если заказчик не получит желаемого результата, то хотя бы потратит меньше денег, чем мог бы в случае с разработкой полноценного приложения.   В MVP-версии разрабатывают только самое необходимое, анализируя карты путешествия пользователей по маркетплейсу и выделяя основные точки касания. Главная цель — протестировать идею с наименьшими затратами, собрать обратную связь от первых пользователей и, возможно, сделать первые продажи.  Разработка тестового приложения обычно включает следующие этапы:  Определить целевую аудиторию. Не нужно сразу охватывать всех. Лучше сосредоточиться на узкой группе пользователей, которым в первую очередь нужен ваш продукт.  Составить список функций. Выделите самые важные этапы пользовательского пути и добавьте в MVP. Остальное внедрите в случае успешного запуска.  Провести пользовательское тестирование. Дайте оценить приложение реальным людям и проанализируйте отзывы.  Например, вы хотите протестировать B2B-маркетплейс оборудования и товаров для ведения бизнеса: ресторанов, торговых центров, гостиниц и т.д. Во время изучения рынка вы узнали, что сейчас начинается время подготовки к туристическому сезону в городе. Отели готовятся к приему гостей, и отделы закупок ищут необходимое: дополнительную технику для кухни, моющие средства, информационные стойки и т.д. Создайте тестовый вариант для закупщиков и продавцов оборудования с базовым функционалом.  Как тестировать MVP Сервисы обычно проверяют в несколько подходов с помощью альфа- и бета-тестирования.  Альфа — внутренний этап. После разработки приложение тестируют внутри команды. Если ошибок нет, передают внешним пользователям в бета-тестирование. В это время собирается статистика скачиваний, аналитика поведения и пользовательский путь, отзывы и предложения. Затем мобильный сервис снова отдают на разработку и тестирования.  Спустя несколько таких итераций можно прийти к оптимальной версии продукта и запланировать полноценный релиз.  Чего не нужно делать при запуске MVP Пытаться довести до идеала. Бесконечное редактирование и прорисовка кнопок будет тянуться долго и зря тратить бюджет. Остановитесь на «достаточно хорошем» продукте. Если ваша идея актуальна для рынка, плохой дизайн или недостаточная скорость работы не испортят спрос.  Хаотично собирать отзывы. На стадии разработки MVP нужно сразу определить метрики успешности проекта: количество скачиваний, число зарегистрировавшихся пользователей, уровень удержания клиентов и т.д.  Анонсировать маркетплейс раньше времени. Когда продукт уже почти готов, хочется рассказать о всех функциях и даже пообещать то, чего еще нет. Оценивайте начальный сервис реалистично. Лучше оказаться скромнее в начале, чем оправдываться перед пользователями за невыполненные договоренности.  Поддержка и обслуживание Маркетплейс — сложный мобильный продукт. Не получится один раз написать техническое задание, выпустить итоговое приложение и спокойно получать прибыль. После релиза предстоит не менее кропотливая работа: нужно будет изучить все отзывы новых пользователей и внести правки, удалить непопулярные функции и усилить те, что приносят больше денег. Приложение должно развиваться вместе с рынком и своей целевой аудиторией.  Мы не оставляем заказчиков один на один с приложением после запуска: команда AppCraft обеспечивает гарантию и поддерживает проект в течение индивидуально оговоренных сроков.    Приложение важно будет постоянно анализировать и дорабатывать Сколько стоит разработка Итоговый бюджет будет зависеть от конкретного запроса заказчика: типа разработки (базовый или кастомный с индивидуальными функциями), сложности дизайна и дополнительных правок. Точную стоимость мы сможем рассчитать во время консультации.  Команда AppCraft — это команда опытных и горящих своим делом разработчиков, дизайнеров, менеджеров продукта и маркетологов. Мы работаем без привлечения сторонних специалистов — это обеспечивает быструю коммуникацию между отделами и высокое качество каждого мобильного сервиса.  За 10 лет мы разработали более 200 приложений от интернет-магазинов и маркетплейсов до соцсетей, игр и банковских приложений.  Мы возьмем на себя разработку маркетплейса под ключ с оптимальным для вас бюджетом и выпустим продукт в короткие сроки без потери качества.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 3,
    "tag": [
      20,
      21,
      19
    ]
  }
},
{
  "model": "articles.article",
  "pk": 20,
  "fields": {
    "registration_time": "2022-07-13T14:31:45Z",
    "slug": "razrabotka-korporativnyh-prilozhenij",
    "is_active": true,
    "title": "Разработка корпоративных приложений",
    "body": "С выходом многих компаний на удаленку корпоративные мобильные решения стали особенно актуальными. Они помогают объединить сотрудников, автоматизировать рутинные задачи, быстро вовлечь в работу новых специалистов и реализовать те необходимые для бизнеса функции, которых нет в обычных приложениях.  Что такое корпоративное приложение Это сервис, который используется внутри одной компании для решения рабочих вопросов с коллегами, клиентами и партнерами. В него можно внедрить любые кастомные функции: личные карточки, инструменты для анализа и создания отчетов, шаблоны документов с автозаполнением, библиотеку с корпоративной информацией для онбординга и пр. Такие программы чаще заказывает крупный бизнес, но для небольших организаций они тоже актуальны. Например, если у вас много удаленных работников и/или приходится обрабатывать большое количество данных.   Для чего нужно корпоративное приложение Каждая организация сама подбирает цели и функции сервиса перед началом работ. Рассмотрим распространенные запросы, под которые создается апп:  Контроль эффективности  В мобильном продукте можно автоматизировать постановку рутинных и разовых задач, контролировать их выполнение и отслеживать статистику в онлайн режиме, получая удобные отчеты по каждому направлению и человеку. Дополнительно можно настроить переадресацию задач во время больничных или отпуска и напоминания о просроченных дедлайнах.  Все рабочие процессы в одном месте  Часто в компаниях используют сразу несколько платных сервисов для разных задач. Людям необходимо больше времени, чтобы найти нужную информацию или переключиться с одной программы на другую. Если на одной из площадок происходит сбой, приходится срочно переходить на другую программу. А новым людям приходится привыкать к разным интерфейсам и запоминать, где находятся нужные параметры. Единое приложение, где есть все нужные параметры, упростит работу и поможет сэкономить бюджет на оплату сразу нескольких сторонних сервисов.  Онбординг новых специалистов и обучение  В мобильном сервисе есть возможность загрузить библиотеку знаний с основной информацией о бизнесе, правилами, инструкциями, контактами коллег и обучающими курсами. С ее помощью люди быстрее вливаются в рабочие процессы даже в удаленном режиме.  Упрощенный документооборот  Можно быстрее получать справки, зарплатные листы, больничные и отпуска, отправляя запрос онлайн в бухгалтерию и HR-отдел. Процесс будет проходить еще быстрее, если все документы будут приходить с возможностью автозаполнения.  Прозрачная бухгалтерия  У руководителей есть доступ к бухгалтерским счетам, операциям и расчетам по каждому направлению и ежемесячные финансовые отчеты.  Внутренняя система мотивации  Интерфейс позволяет внести элементы геймификации: поощрять людей за вовремя выполненные задания и вовлеченность в проекты, получать обратную связь от коллег, собирать интересные идеи из разных отделов или создать внутреннюю валюту с магазином.  Конфиденциальность  Используя мессенджеры и рабочие инструменты сторонних сервисов, вы рискуете стать жертвой утечки данных. В собственном приложении разработчики могут надежно защитить коммерческую тайну и личную информацию сотрудников.  Быстрая коммуникация с клиентами  Если разрабатывать отдельное CRM-приложение, оно поможет ускорить связь с партнерами, сохранить всю нужную информацию в одном месте, а также следить за статистикой и получать отзывы по качеству обслуживания.  Виды корпоративных приложений Мобильный сервис можно создать под конкретную задачу — упростить коммуникацию между отделами, создать базу для обучения или автоматизировать продажи. Или создать универсальную программу для всех направлений.  Корпоративный мессенджер  Внутри программы можно коммуницировать и обмениваться документами, хранить все данные в одном месте, общаться по видеосвязи и организовывать групповые конференции. В интерфейс можно включить новостную ленту, блог, локальные чаты или онлайн-переговорные. В отличие от WhatsApp или Telegram, здесь важные сообщения не затеряются среди личных переписок.    Приложения для конкретных отделов  Не всегда бизнесу нужен сервис сразу для всех отделов. Например, это может быть отдельный продукт для автоматизации работы HR-отдела, программа для контроля удаленных специалистов или электронного документооборота.  CRM-система  Здесь можно собирать и систематизировать информацию об услугах, клиентах и заказах, следить за эффективностью отделов продаж и маркетинга. Обычно какая-то часть остается открытой для клиентов, а остальная служит для личного пользования и сбора статистики.   Платформа для обучения  Здесь сотрудники могут проходить профильные курсы, повышать квалификацию и проходить тесты на соответствие должности. Так специалистам будет проще развивать карьеру, претендовать на повышение и увеличение зарплаты. А сам мобильный формат позволит обучаться в свободное время в любом месте.  Как внедрить приложение в команде Если бизнес действует уже несколько лет, то, как правило, в команде выстроен определенный ритм и стиль общения с коллегами. И тут неожиданно появляется новый сервис, который может поменять привычный уклад жизни. Даже если вы планируете создать небольшое приложение, нужно заранее предупредить об этом людей и внедрять технологию постепенно.  Презентовать идею  Конечное решение о запуске принимает руководитель, но важно опираться на поддержку остальных членов команды. Перед началом работы можно провести общее собрание и подробно рассказать про идею и функционал сервисом, сделав акцент на его преимуществах. Так люди охотнее примут нововведения и включатся в обсуждение.  Подогреть интерес  Рассказывайте об этапах разработки программы и новых возможностях, которые ждут их в интерфейсе. Сделайте так, чтобы им хотелось воспользоваться сервисом еще до его релиза. Можно выбрать местных лидеров мнений, которые будут рассказывать о преимуществах и собирать идеи разных работников.  Протестировать на одном из отделов  Не стоит запускаться сразу на всех — лучше протестировать его на нескольких отделах и получить обратную связь. Как только недочеты будут исправлены, можно внедрять продукт в остальных подразделениях.  Переводить рабочие процессы постепенно  Дайте возможность привыкнуть к новой программе. Для начала можно использовать ее только для базовых целей: постановки задач и общения между людьми. Или добавить немного развлекательного контента: провести голосование по выбору локации для корпоратива, рассказать в новостной ленте о дополнительных бонусах и пр. И уже потом переносить более сложные элементы вроде документооборота или анализа статистики по результатам квартала.  Создать форму обратной связи  У вас должен быть удобный инструмент для сбора обратной связи (можно анонимно) и плановыми датами, когда ошибки будут исправлены. Работникам нужно чувствовать, что их мнение важно и влияет на бизнес в целом. Сообщения могут поступать и обрабатываться в отделе техподдержки.   сбор обратной связи может вестись прямо внутри приложения Следить за результатами системы аналитики  Регулярно запрашивайте информацию по количеству уникальных посетителей и времени использования сервиса, популярным функциям и т.д. Это поможет понять, насколько хорошо внедряется апп в корпоративную жизнь, и вовремя решать проблемы.  Процесс создания Подготовка  На первом этапе собираются требования, стратегические и тактические задачи клиента. Главная цель первого этапа — понять, можно ли решить проблему бизнеса с помощью мобильного сервиса.  Далее создается команда, которая будет заниматься разработкой, и руководитель группы. Это продакт-менеджер, бизнес-аналитик, HR-специалисты, разработчики, маркетологи, дизайнеры, редакторы, контент-менеджеры и тестировщики. Они должны собрать необходимую информацию, найти решения для каждой бизнес-проблемы и разработать концепцию будущего приложения.  Исследование  После создания основной концепции важно подробно изучить аудиторию. В случае с корпоративным приложением это работники разных уровней и направлений. В ходе интервью составляется примерный пользовательский путь сотрудника и варианты, которые помогут упростить его работу.  Техническое задание  Это файл, в котором описаны цели проекта, требования к функциональности и безопасности, возможности интеграции и контроля над разработкой. Обычно он включает следующие пункты:  Цели и задачи. В рамках каких направлений разрабатывается проект (для отдельных подразделений или всего бизнеса). Платформы, под которые разрабатывается приложение. Функции, которые должны быть в будущем интерфейсе. Требования к надежности и безопасности. Рекомендации к UX/UI дизайну. Состав и содержание работ. Правила документирования этапов разработки и дизайна. Порядок контроля за ходом создания аппа и приемке готового проекта. Разработка прототипа  Во время основного этапа создается кликабельный прототип, где можно в режиме реального времени протестировать возможности приложения. Затем программисты прописывают код, а дизайнеры подробно отрисовывают экраны и графические элементы.  Тестирование  После выхода первой версии продукта он отправляется к тестировщикам. Важно, чтобы они не участвовали в остальных этапах создания приложения — так можно получить объективную оценку и найти как можно больше ошибок до релиза.   Интеграция  Готовое решение интегрируется с существующими IT-системами, настраивается пользовательская аналитика внутри интерфейса.  Обучение сотрудников  После запуска нужно показать пользователям все возможности и функции нового сервиса.   Поддержка и развитие  При завершении работ и запуска проекта продолжается техподдержка. Разработчики могут добавлять новые функции или удалять старые, исправлять текущие ошибки и технические проблемы.  Мы в AppCraft больше 10 лет занимаемся разработкой мобильных приложений, в том числе сложных корпоративных решений и мессенджеров для бизнеса из разных сфер. Наша команда возьмет на себя все этапы от создания технического задания до релиза и маркетингового продвижения продукта и обеспечит бесплатную техподдержку в течение 1 года после запуска.  Сколько будет стоить корпоративное приложение Стоимость зависит от количества работников и нагрузки на платформу, внедряемых технологий, интеграции с другими IT-сервисами, особенностей настроек безопасности и других факторов. Заполните заявку ниже, и мы рассчитаем точную цену.",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 3,
    "tag": [
      20,
      21,
      19
    ]
  }
},
{
  "model": "articles.article",
  "pk": 21,
  "fields": {
    "registration_time": "2022-07-13T14:32:23Z",
    "slug": "mobilnoe-prilozhenie-dlya-dostavki-edy-osobennosti-razrabotki",
    "is_active": true,
    "title": "Мобильное приложение для доставки еды: особенности разработки",
    "body": "2020-2021 стал годом интенсивного роста для рынка доставки еды. Аналитики прогнозируют, что в 2021 году эта сфера вырастет почти в 2 раза (на 47%), а рынок общепита сократится на 21,3%. За время пандемии у пользователей выработалась привычка пользоваться сервисами доставки, а рестораторы смогли воспользоваться ситуацией и внедрить онлайн-доставку в свою бизнес-стратегию. По некоторым данным, 74,7% ресторанов предлагали доставку еды своим клиентам в сентябре 2020 — это на 29,91% больше, чем в тот же период 2019 года.  Может показаться, что рынок уже заполнили крупные компании, но у вас всегда есть возможность создать что-то уникальное. В статье рассказываем, как придумать и создать платформу для доставки, и, главное — с чего начать.    Photo by Yu Hosoi on Unsplash Провести аналитику Перед разработкой нужно провести аналитику и найти ответы на следующие вопросы:  В каком формате вы будете работать? Можно доставлять еду из своего заведения или работать с партнерами, собирая заказы на своей базе. В любом случае вам нужно будет выстроить систему работы с персоналом и обеспечить качественную доставку для пользователей.  Как вы будете работать с клиентами? Заранее продумайте, как вы будете принимать заказы, решать организационные вопросы и спорные ситуации.  Кто будет доставлять еду? Вы можете нанимать собственную команду курьеров или воспользоваться сторонними сервисами.  От ответов будет зависеть бизнес-модель и функционал будущего приложения. Возможно, в итоге вам нужно будет создать сразу несколько продуктов: приложения для клиентов, администраторов и курьеров.  Разобраться: кто ваша целевая аудитория? Изучите, сколько лет вашим потенциальным пользователям, какой у них уровень дохода, где и кем они работают, чем увлекаются, какой образ жизни ведут и какие блюда предпочитают. Самая желанная аудитория — миллениалы в возрасте 25-30 лет: они охотнее пользуются новинками и чаще заказывают еду.  Составьте примерный портрет вашей аудитории и продумайте функционал, который полностью удовлетворит ее потребности.  Чем вы будете отличаться? Выйдя на рынок, вы окажетесь в одном пространстве с крупными и известными игроками — у них больше ресурсов и влияния, но это не значит, что малый бизнес не может добиться успеха. Подумайте, что уникального вы будете предлагать своей аудитории. Это может быть бесплатная доставка продуктов, большой выбор товаров — от напитков до бытовой техники, круглосуточное обслуживание или пожертвования на благотворительность с каждой покупки.  Каким должно быть приложение? Чтобы люди надолго оставались с вами и советовали друзьям, приложение должно быть понятным и удобным. Вот несколько параметров, которые нужно применить:  Быстрый и простой интерфейс В идеале пользователь должен совершать заказ за пару шагов, поэтому сделайте интерфейс интуитивно понятным и функциональным. Не заставляйте людей по несколько раз открывать страницы, чтобы разобраться, как они работают.  Приятный визуал Даже если ваше приложение будет максимально удобным, негармоничная цветовая гамма и фотографии плохого качества могут отпугнуть человека — никто не хочет травмировать сетчатку глаза и свое чувство прекрасного плохой картинкой.  Безопасная оплата Защитите личные данные пользователей и покажите, что каждая операция проходит без проблем.  Система лояльности Дарите персональные скидки и промокоды за лояльность, предлагайте специальные предложения в случае ошибок и дайте возможность зарабатывать баллы.  Отзывы и рейтинги Перед выбором блюда нам важно, чтобы заказ нас не разочаровал, так что сортировка заведений и еды по рейтингу точно упростит выбор.  Отслеживание заказа в реальном времени Возможность посмотреть, где находится курьер, даст вам еще одно преимущество — это поможет спланировать время и вовремя получить свой заказ.  Удобные фильтры Ещё один способ упростить жизнь клиентам — добавить возможность выбирать блюда по расположению кафе, кухне, способу приготовления и ингредиентам.  Push-уведомления Рассказывайте людям о состоянии их заказов, акциях, скидках и обновлениях. Это не даст пользователю забыть о вас и упустить возможность выгодно заказать еду.  Понятный контент Старайтесь использовать грамотный и читабельный текст и изображения, которые упростят восприятие информации.  Если предполагается мультирегиональная доставка, это повод задуматься о реализации определения местоположения пользователя. Такая функция поможет показать ему доступные места для заказа, актуальные цены, меню и контактную информацию.   Delivery Club просит разрешить приложению доступ к данным о местоположении, а Dostaevsky просит указать пользователей город самостоятельно. Продумать структуру интерфейса В проектах по доставке, приложения могут понадобиться сразу для клиентов, курьеров и администраторов. Каждый из этих блоков должен быть понятным и удобным для пользователя.  Клиенты Функция регистрации через почту, номер телефона или социальные сети. Выбор заведений и поставщиков, доступных в районе проживания пользователя. Быстрая оплата заказа с помощью систем PayPal, Apple / Google Pay и пр. Отслеживание статуса заказа, время доставки и местонахождение курьера. Общение с рестораном и курьером в отдельном чате. Возможность сохранять в избранном рестораны, кафе и любимые блюда. Администраторы Управление контентом: публикация меню, информации о компании и фотографий. Запуск акций и промокодов. Отслеживание заказов и информирование клиентов о статусе. Поиск курьера для доставки и возможность отслеживания его местоположения. Прямое общение с пользователями в чате. Курьеры Страница регистрации для подписки на ваше приложение. Бронирование заказов в онлайн-режиме и просмотр деталей. Чат для общения с ресторанами и клиентами. Просмотр истории доставки конкретному клиенту. Основные этапы работы Создание технического задания и составление договора В ТЗ обычно указывают цель проекта и требования к нему, сценарии использования, примерные эскизы экранов и требования к платформе. А в договоре прописываются конкретные даты, сроки, стоимость, условия и список выполняемых работ каждого члена команды.  Создание прототипа Разрабатывается карта путей пользователей, составляются блок-схемы и примерный дизайн экранов. Прототип позволяет на ранней стадии протестировать функциональность и при необходимости быстро внести правки.  Дизайн UX/UI дизайнеры продумывают внешний вид и цветовую гамму страниц с учетом особенностей функционала и требований платформ iOS и Android.  Программирование На этом этапе разработчики пишут код, чтобы приложение работало и выглядело так, как запланировано.  Тестирование На протяжении разработки приложение проверяется на наличие ошибок и сбоев, а также стабильности работы на разных устройствах.  Запуск и техподдержка После финальных тестов приложение публикуется на площадках, но на этом работа над ним не заканчивается. Помощь команды разработки потребуется для оптимизации, добавления новых функций и обновления приложения.  Студия AppCraft осуществляет комплексную техническую поддержку приложений и информационное обслуживание профилей в App Store и Google Play в течение 12 месяцев.  Во сколько обойдется разработка подобного приложения? Стоимость приложения всегда индивидуальна. Например, цена приложения доставки для кафе или ресторана, когда не требуется отдельное приложение для курьеров, — от 2,5 млн. рублей.   Для формата агрегатора, вроде Яндекс.Еды и Delivery Club — от 3,5 млн., так как потребуется приложение для пользователей на две платформы, приложение для курьеров на две платформы, продвинутая административная панель и back-end разработка.  Существенное влияние на стоимость оказывают частные случаи по интеграции, например, с 1С, Bitrix, реализация бонусной системы, ее сложность и т.д.  Из чего складывается итоговая стоимость приложения, подробно описали в этой статье.    Рынок и потребности аудитории могут быстро меняться. Если вы хотите запустить продукт и не тратить бюджет на функции, в рентабельности которых не до конца уверены, присмотритесь к разработке минимальной версии приложения (MVP). Это будет быстрее и дешевле разработки всех функций и даст возможность улучшать уже рабочее приложение постепенно, опираясь на поведение пользователей.  Мы в команде AppCraft уже 9 лет занимаемся разработкой клиентских и собственных проектов и понимаем, что правильная оценка ресурсов и постоянное тестирование позволит правильно распределить финансы и успешно монетизировать проект. С радостью поделимся опытом с вами, и поможем разработать качественный продукт!",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 3,
    "tag": [
      20,
      21,
      19
    ]
  }
},
{
  "model": "articles.article",
  "pk": 22,
  "fields": {
    "registration_time": "2022-07-13T14:33:38Z",
    "slug": "pochemu-kompaniyam-nuzhno-razrabatyvat-prilozheniya-v-krizisnyj-period",
    "is_active": true,
    "title": "Почему компаниям нужно разрабатывать приложения в кризисный период?",
    "body": "Отечественный бизнес переживает непростые времена. Эксперты прогнозируют различные сценарии развития текущей ситуации, которые сводятся к значительным изменением в бизнесе и простой жизни. Логично видеть, что многие диджитал-проекты ставятся на паузу для оценки рисков. Однако работа не останавливается, и сегодня мы хотели бы рассказать, чем разработка приложения может помочь бизнесу в кризисное время.    Потребности не меняются Сейчас важно не забывать о таких ключевых моментах, как целевая аудитория проекта (продукта, предприятия) и инструменты, влияющие на уровень продаж. О чем здесь речь? Целевая аудитория обладает, как правило, базовыми потребностями, привыкла их удовлетворять теми или иными сервисами и не готова терять в качестве жизни. Когда с рынка уходят крупные компании и бренды, их место должны быть готовы занять отечественные предприниматели. Но они могут столкнуться с тем, что зарубежные компании активно использовали в своем бизнесе мобильные приложения: заказы и коммуникации с клиентами осуществлялись через них. Ведь сегодняшний высокий тренд диджитализации затрагивает все сферы жизнедеятельности, вплоть до того, что в некоторых домах даже домофоны управляются через приложения на смартфонах: настолько IT заходит в быт каждого пользователя. Что уж говорить о e-commerce: по данным Sensor Tower, российская аудитория мобильных приложений потратила в них за 2021 год более 1,24 миллиарда долларов, а в мире Россия находится на 5 месте по общему количеству установок приложений. И именно для нашего рынка этот показатель из года в год стабильно растет.  У бизнеса могут быть противоречивые точки зрения на этот счет. С одной стороны никому не хочется рисковать дополнительными ресурсами, которые могут потребоваться в постоянных издержках вроде аренды площадей, фонда оплаты труда. С другой стороны, кризис — это всегда некое окно возможностей, и выигрывать будут те компании, которые не побоятся им воспользоваться. В данном случае разработка приложения может позволить бизнесу нащупать новые ниши, произвести оптимизацию процессов и дать толчок развитию.    Немаловажно исследовать образ жизни своей целевой аудитории. Если большинство покупок клиенты совершают через телефоны или планшеты, к тому же еще и работают с помощью них, то мобильное приложение для них действительно является удобным и даже необходимым. Если же ваш сегмент — B2B направление, оптовые продажи или услуги для бизнеса, то скорее всего с вами будут взаимодействовать специалисты в свое рабочее время со стационарных компьютеров. При этом варианты развития в мобайле все равно есть, ведь в сегменте B2B могут быть востребованы сервисы для профессионального использования. Например, вы являетесь поставщиком строительных материалов или электротехнической продукции. Ваша дилерская сеть, скорее всего, с удовольствием будет пользоваться сервисом для расчета необходимого количества товара, особенно если продукт имеет свои нюансы: определенный процент запаса при том или ином способе монтажа, отличия в выборе позиции при разных физических условиях. Разработав приложение, которое помогало бы формировать сметы с учетом всех деталей, и добавив туда опцию отправлять заказ на ваш склад, вы получите эффективную оптимизацию бизнес-процессов для своих партнеров.  Организация удаленной работы может снижать издержки на аренду площадей. И в IT-сервисах, помогающих наладить в этом случае бизнес-процессы, также может потребоваться импортозамещение. Например широко распространенные средства коммуникации для онлайн-конференций, звонков и текстовых сообщений созданы зарубежными производителями ПО. Несмотря на то, что такие гиганты как Zoom, Google Meet,  Skype, Slack не обозначали свой текущий вектор на российском рынке на момент написания текста, ситуация может меняться стремительно. Продукты такого рода — это один из ключевых блоков в образовании, работе с клиентами и удаленными командами. Пока нет гарантии сохранения стабильного доступа к ним, будет возрастать спрос на корпоративные системы, которые можно разработать как для своего бизнеса целенаправленно, так и для поставки другим компаниям.   Многие секторы экономики успешно диджитализировались до кризиса, но остались еще слабо оцифрованные направления: строительная отрасль, машиностроение, в принципе, большинство производств, в котором внедрение IT-технологии позволило бы оптимизировать технологические процессы, прогнозирование, логистику и снабжение.   Нужны продажи, значит нужен маркетинг  “Решили отложить до лучших времен” — фраза, которая сейчас будет звучать все чаще и чаще. Но поведение рынка таково, что он не возвращается к полностью аналогичным позициям. Будет меняться структура спроса, ценные преимущества продуктов и команд, длительность сделок и их цикличность. Для того, чтобы сохранить бизнес в сложный период, необходимо больше продавать. Для активации продаж нужно усиливать маркетинг.   Приложение — это дополнительный канал, позволяющий контактировать с вашими клиентами. Push-уведомления, мобильные программы лояльности, даже просто логотип, находящийся на экране смартфона и периодически попадающий в поле зрения пользователя, работает как точка касания и стимулирует конверсию.  Через уведомления можно напоминать пользователю о сервисе, о сроках оплат —  например, если вы управляющая компания или поставщик ресурсов ЖКХ (электроэнергии, воды, отопления), поддерживать обратную связь через уведомления с ответами менеджеров на запросы клиента, да и просто сообщать об акциях. В большинстве случаев эти механики реализуются e-mail рассылками. Но почтовые сервисы могут помещать ваши письма в разделы “промоакции”, где пользователи с высокой долей вероятности до них не доберутся. Сервисные уведомления могут попадать во вкладку “Оповещения”, но из-за несовершенства технологии там оказывается немало других рассылок. В результате они между собой перемешиваются, и пользователь снова пропустит ваше письмо, касания с ним не получится. Push-уведомления повышают вероятность, что клиент увидит важную сервисную информацию или маркетинговое предложение. Однако обязательно следует учитывать специфику продукта и целевой аудитории, чтобы не переборщить с интенсивностью рассылок и не получить отключение пушей.  Помимо прочего, у маркетинговых специалистов появится дополнительная аналитика, которая позволит сегментировать аудиторию по их реакции на те или иные пуши, по совершенным действиям, транзакциям. Анализ поведения даст возможность менять ваш продукт к лучшему и делать клиентам наиболее персонализированные предложения, которые, в свою очередь, будут лучше конвертироваться в продажу.    При грамотном использовании пуш-уведомления в мобильных приложениях будут возвращать клиента и делать его более лояльным Можно ли оптимизировать бюджет проекта?  Разработка приложения требует финансовых вложений, которые исчисляются сотнями тысяч, и это ощутимые затраты порой даже для среднего бизнеса. Для их снижения можно предложить несколько путей: no- или low-code разработка либо MVP-подход. Nocode решения на базе конструкторов в целом подойдут для малого и среднего бизнеса, но с рядом оговорок. Ресурсы nocode сервисов будут ограничены и за счет колебания валюты, и за счет позиции их владельцев относительно присутствия на российском рынке. Безусловно, к ним будут обращаться для экономии ресурсов и решать свои задачи. Но no- и low-code не смогут заменить кастомную, то есть индивидуальную, разработку, этот подход просто не обладает возможностями для реализации всего спектра функционала, который требуется. Конструкторы стоит применять для проверки гипотез или создания небольших продуктов, но при дальнейшем развитии проекта все равно придется прибегать к кастомной разработке.  Более перспективен MVP-подход, когда выпускается продукт с минимальным набором функций, чтобы проверить его жизнеспособность на рынке. Оптимизация за счет упрощения потребует еще и тщательного продумывания, внимательной аналитики – как предварительной, так и сопутствующей запуску, чтобы вкладывать ресурсы в то, что в действительности будет иметь ценность.   Тренд будет в сторону развития понимания технологий. Предприниматели будут вовлекаться в процесс разработки приложения все больше. И это тоже сработает на оптимизацию: именно владелец бизнеса понимает его и знает все детали лучше всего. А в связи с потребностью в глубоких исследованиях для малых и средних предприятий будут востребованы специалисты, объединяющие в себе несколько важных ролей, способные и анализировать сервисы, и проектировать их.    Мы уже приводили эту схему в одной из своих статей, и сейчас вновь обращаем внимание в ней на то, что разработка в продукте занимает далеко не основную часть. Наибольшая нагрузка в успехе проекта ложится на аналитику, маркетинг и тестирование гипотез. Взгляд в будущее Любое вложение сейчас — это осознанный риск. Риск того, что гипотеза себя не оправдает, риск столкнуться с некачественной разработкой. Прогнозировать наступление стабильности в текущей лихорадке рынка практически невозможно. Чем мы со стороны разработчиков можем помочь бизнесу? Делиться с клиентами экспертизой (ведь мы уже проходили несколько негативных экономических периодов), проводить аналитику, рекомендовать, как оптимизировать бюджет проекта в каждом индивидуальном случае. Мы вместе с вами заинтересованы в скорейшем завершении кризисной ситуации и всегда готовы помочь в решении ваших диджитал задач.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 3,
    "tag": [
      20
    ]
  }
},
{
  "model": "articles.article",
  "pk": 23,
  "fields": {
    "registration_time": "2022-07-13T14:34:12Z",
    "slug": "pochemu-vazhno-analizirovat-fidbek-ot-polzovatelej-prilozheniya",
    "is_active": true,
    "title": "Почему важно анализировать фидбэк от пользователей приложения?",
    "body": "Когда вы запускаете на рынок приложение и начинаете его продвигать, отзывы от пользователей могут стать как источником гордости и вдохновения, так и величайшим разочарованием. В современном мире практически любой интернет-пользователь делится своим мнением о том или ином продукте. Анализ этого фидбэка – важная часть любой маркетинговой стратегии. Такие технические гиганты, как Google или Amazon, нанимают сотни людей, которые отслеживают отзывы о своих сервисах, отвечают на критику и вопросы клиентов. У вас может, конечно, не быть таких ресурсов, как у этих корпораций, но отвечать на обратную связь и использовать ее в своей стратегии можно и без них.   То, как вы строите работу отзывами клиентов, зависит от вашего отношения к продукту. Наилучший подход – рассматривать приложение как совместный проект с пользователями и брать от них фидбэк как возможность построить надежные взаимоотношения и улучшить оффер.   Структурированный подход в анализе обратной связи пользователей состоит из трех ключевых шагов. Первое –  вы должны быть уверены, что вы в курсе всего фидбэка, который генерируют ваши пользователи. Второе –  эту информацию нужно использовать, чтобы выстраивать понимание того, как люди взаимодействуют с вашими продуктами. И третье –  это знание следует использовать для повышения конверсии.    Из отчёта «2020 Mobile App Engagement Benchmark Report», Apptentive Чтение отзывов Первый шаг – осведомленность, на каких локациях вам оставляют фидбэк. Некоторые ресурсы могут быть более заметными, чем другими. Для новых приложений, возможно, наиболее критичной платформой будет стор, где они представлены и где негативные отзывы будут иметь наибольшее влияние на показатель загрузок. Но при этом нужно быть в курсе еще и того, что пользователи говорят о вашем приложении в социальных сетях и на специализированных ресурсах, где потенциальные клиенты могут искать рекомендации.   Реакция на обратную связь должна быть одинаково качественной независимо от платформы, где идет публикация. Отвечать на негативный фидбэк позитивно – это возможность уменьшить потенциальный вред вашему бренду и показать клиентам, что вы та компания, которая будет прислушиваться к их пожеланиям. Отвечать на позитивный фидбэк тоже важно, хотя об этом часто забывают. Простое “спасибо” пользователям, которые хвалят ваше приложение, удивительно эффективно формирует образ бренда, особенно в течение таких важных нескольких месяцев после запуска.    Реагировать необходимо как на позитивную обратную связь, так и на негативную. Источник: appfollow.io Аналитика воронок и поиск слабых точек Как только накапливается значимое количество отзывов на приложение, эту информацию можно использовать для маркетинговой стратегии и анализа конверсии. Существует немало гайдов и подходов к работе с пользовательским фидбэком, но все из них используют один и тот же базовый принцип – аналитика воронки. Работая по этому методу, вы исследуете, сколько пользователей привлекается на каждой стадии: от первого касания до продажи. И здесь стоит смотреть не только на число привлекаемых юзеров, но и получаемые на каждом этапе пользовательские отзывы.   Таким образом можно идентифицировать любые слабые точки маркетинговой и продуктовой стратегии. Например, вы производите потрясающий контент, который люди читают и делятся им, но при этом они с трудом находят ваше приложение в сторе. Цель в конечном итоге состоит в том, чтобы предоставлять потенциальному клиенту беспроблемный опыт с самого начала – от первого знакомства с преимуществами вашего приложения – до каждодневного использования. И как раз анализируя фидбэк поэтапно, можно  обнаружить недостатки продукта, которые пользователи находят раздражающими или отталкивающими.   Отслеживание конверсии Анализ взаимодействия пользователей с каждой частью оффера, который несет ваше приложение, очень важно, но большинство компаний сосредоточивается на единственной метрике – коэффициенте конверсии. Убеждать заинтересованных клиентов устанавливать ваше приложение и делать в нем покупки – это труднейшая часть любой маркетинговой стратегии. Поэтому конверсия становится аспектом наиболее сосредоточенного внимания во всей воронке.   На что важно обращать внимание? Вы должны быть уверены, что в приложении легко покупать и что преимущества ясно обозначены. Ценовая политика также важный фактор, повышающий конверсию. Если в ходе анализа пользовательского фидбэка вы обнаруживаете, что клиенты жалуются, что приложение слишком дорогое, это, на самом деле, знак того, что ваша маркетинговая стратегия работает хорошо. Пользователи приложение нашли, отметили его достоинства и хотят его использовать.   И здесь вступают в игру стартовые предложения, ограниченные по времени бесплатные загрузки, бесплатные уровни подписки – инструменты, которые покажут пользователю, за что он платит.   Выстраивание отношений  Исследования говорят, что миллениалы все больше относятся к брендам, как к людям, и ищут личных взаимоотношений с компаниями, чьи услуги они приобретают. Следовательно, анализ пользовательского фидбэка и позитивная реакция на него  – это невероятно важная часть работы для завоевания этой группы.   Иными словами, вам следует смотреть на анализ пользовательского фидбэка как на возможность построить отношения с пользователями и включить их в процесс разработки приложения. Конечная цель этого – обеспечить клиентов персональным вкладом в бренд, потому что это и выстроит их лояльность и побудит их рекомендовать ваши продукты сверстникам.     источник- uxfeedback.ru Анализ метрик должен всегда быть частью маркетинговой и продуктовой стратегии, кроме того, также важно взаимодействовать с пользователями тем путем, который подчеркивает ценности вашего бренда. В переполненном и очень высококонкурентном рынке отстроиться от конкурентом может быть крайне трудно, и эффективный способ это сделать – построить базу лояльных и воодушевленных клиентов.",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 3,
    "tag": [
      20,
      21
    ]
  }
},
{
  "model": "articles.article",
  "pk": 24,
  "fields": {
    "registration_time": "2022-07-13T14:34:40Z",
    "slug": "razrabotka-mobilnyh-prilozhenij-dlya-ios",
    "is_active": true,
    "title": "Разработка мобильных приложений для iOS",
    "body": "По данным платформы App Annie, пользователи iOS-приложений тратят в Apple App Store почти в два раза больше, чем пользователи Android в Google Play Store — в 2021 году Apple App Store заработал более 85 млрд долларов, а Google Play чуть менее 48 млрд.  Владельцы Apple платежеспособнее, а значит, приложение на IOS может принести больше прибыли. Если вы хотите привлечь новых покупателей и сделать процесс покупки удобнее, команда AppCraft  предлагает услуги по разработке мобильных приложений, которые выведут ваш бизнес на новый уровень.  Разработка мобильного приложения IOS под ключ — от 500 тыс. руб до нескольких миллионов рублей.   Кому понадобится разработка приложения на IOS? Крупному бизнесу  Систематизирует работу всех структур внутри компании и филиалов, автоматизирует взаимодействие с клиентами и поможет оперативно получать обратную связь, анализировать эффективность сотрудников и устранять издержки.  Интернет-магазинам  Приложение привлечет покупателей и увеличит количество повторных продаж, позволит настроить индивидуальные Push-уведомления для каждого пользователя и создать эффективную систему лояльности. Приложение можно интегрировать с CRM, системами управления предприятием и бухгалтерского учета.  Стартапам  Поможет быстро привлечь целевую аудиторию и получить первую прибыль, обойти конкурентов с помощью современных технологий и презентовать свой продукт потенциальным инвесторам.  Зачем нужно разрабатывать приложение? Пользователи App Store скачивают больше платных приложений, чем в Google Play, поэтому продукт с платным скачиванием или покупкой внутри ПО станет выгодной инвестицией в ваш проект. Целевая аудитория IOS-приложений — люди с достатком выше среднего, которые активно покупают новые решения на рынке. Приложения на IOS позволяют внедрить большое количество полезных функций по разному запросу. Быстрый срок разработки продукта: устройства Apple унифицированы и имеют меньше версий, чем у Android, поэтому займут меньше времени на создание. Студия Appcraft больше 9 лет занимается разработкой приложений для компаний, их дальнейшей поддержкой и продвижением в App Store. Мы собрали опытную команду разработчиков и маркетологов, которые учтут особенности вашего бизнеса и сделают его удобным для вашей аудитории. Мы находимся в Москве и работаем с компаниями по всей России.  Закажите разработку мобильного приложения для IOS, чтобы увеличить прибыль вашего бизнеса.  Специфика мобильных приложений на iOS Первая и главная отличительная черта iOs приложений — то, что парк устройств значительно меньше, чем количество смартфонов на Android. Это значит, что адаптировать внешний вид мобильного приложения под актуальные на рынке айфоны должно быть проще.  В то же время с выходом каждого нового устройства и обновлением операционной системы подавляющее число мобильных приложений нужно адаптировать под новые условия. Статистика App Store показывает, что пользователи айфонов охотно обновляются до актуальной версии ОС. Поэтому приложения должны соответствовать ее требованиям, например, поддерживать темную тему, представленную в устройствах в 2019 году.  На диаграммах ниже видно, что за один месяц с момента презентации iOS 13 до неё обновилось 50% пользователей. Особенно занятно это выглядит в сравнении со статистикой, которую мы приводим в статье о разработке под Android.   Статистика обновлений операционной системы на iOS устройствах на начало 2022 года Экраны современных iOS устройств при этом имеют хорошее разрешение. Это позволяет использовать тонкие шрифты: они не искажаются, как это бывает на дисплеях низкого качества.  Также однотипная архитектура устройств позволяет не проводить дополнительных проверок при старте приложения: не нужно проверять наличие камеры, GPS датчика или акселерометра.  Особенности разработки и создания приложений для IOS (iphone) И все же несмотря на то, что база устройств на платформе iOS значительно меньше, чем на Android, нюансов создания и разработки приложений для iphone достаточно много. Дизайн, актуальный код, использование особенностей смартфона может сильно повысить лояльность пользователей, что приведет к повышению рейтинга приложения в магазине. Но обо всём по порядку:  При разработке приложений для ios необходимо учитывать не только размеры экрана, что важно при проектировании дизайна приложения, но и аппаратные различия каждого устройства.  В нашей студии приложения разрабатываются нативным путем — это написание программы на базовом языке для платформы iOS — Swift. Apple настоятельно рекомендует использовать нативные технологии, чтобы приложение получилось максимально быстрым, интуитивным и использовало новейшие возможности операционной системы, но мы на своей практике убедились, что кроссплатформенные решения также являются качественными и полноценно решают вопросы бизнеса..  Вернемся к диаграммам со статистикой обновлений: выходит, что при выпуске свежей версии операционной системы большинство пользователей практически сразу до нее обновляется. Но новая версия может сильно отличаться от предыдущей, и некоторые функции приложения могут работать некорректно или не работать вообще.  Соответственно код нужно поддерживать в актуальном состоянии, при этом Apple не предоставляет полного списка всех нововведений заранее, давая доступ лишь к бета-версиям с незавершенным функционалом, реализация которого в итоге может отличаться. Поэтому в течение нескольких недель после выхода финальной версии новой ОС нужно протестировать мобильное приложение и оперативно адаптировать его под новые условия, если это необходимо.   Презентация темной темы на 2019 Apple WWDC К этой же тематике можно отнести добавление новых возможностей в последних версиях, так как прогресс не стоит на месте, и Apple старается быть в тренде, внедряя в свой продукт топовые изобретения мира технологий. Например, в iOS 13 появилась возможность забыть о входе в разные приложения по номеру телефона или аккаунту в соцсети, не говоря уже о давно забытых логине и пароле: теперь можно просто нажать кнопку “вход с Apple ID” и, не заполняя ничего лишнего, попасть в приложение. Более того, пользователь может выбрать опцию скрытия своего Apple ID, и никто не получит доступа к его e-mail.  Этот нюанс важно учитывать не только при разработке приложений для ios, но и при маркетинговой стратегии, так как сбор таких данных для дальнейшего их использования — частая практика в продвижении приложений. Отправить письмо на псевдоадрес, сгенерированный Apple для пользователя, можно через специализированный канал, но вот массовые рассылки так работать не будут, во всяком случае пока популярные сервисы рассылки не предусмотрят эту особенность.  Еще один блок особенностей разработки ios приложений с нуля  — дизайн. Визуальная составляющая всегда была у Apple в приоритете, поэтому аудитория пользователей привыкла к стильным интерфейсам, интуитивным элементам управления приложениями и очевидному расположению разделов. Более того, есть строгий гайдлайн, придерживаться которого необходимо, чтобы успешно пройти проверку на публикацию приложения в App Store.  Иногда при создании и разработке приложений для iphone заказчики просят нас сделать как можно больше уникальных иконок, кнопок и шрифтов, в то время как требования платформы противоположны. Но самое главное здесь — пользовательский опыт, и практика показывает, что пользователь сможет попасть в профиль быстрее, если он будет однозначно идентифицироваться по иконке.   Какие иконки не стоит использовать в интерфейсе iOS Еще одной особенностью разработки мобильных приложений под iOS является реализация динамического размера системного шрифта. Пользователи iOS устройств могут изменять размер шрифта всей ОС, используемый по умолчанию. Если ваше приложение не изменяет шрифт динамически и отображает его все время фиксированного размера, оно будет восприниматься как некачественный продукт у этого сегмента аудитории.  При разработке дизайна также важно учитывать, что некоторые пользователи открывают приложение в режиме совместимости на планшетах. На некоторых моделях iPad при этом разрешение рабочей области становится таким же, как и на старых моделях iPhone: 4 и 4s. Служба проверки приложений Apple часто делает именно так: даже предназначенные только для iPhone приложения проверяют на iPad.  Это означает, что нужно учитывать компоновку интерфейса приложений и на размерах экрана 960×640 пикселей, а не только на iPhone 7 и выше. Многие элементы могут накладываться друг на друга, текст переноситься некорректно и т.д.  Политика Apple по публикации приложений в App Store После того, как вы разработали приложение самостоятельно или заказали разработку приложения ios, наступает момент публикации. App Store отличается жесткими требованиями, которые необходимо соблюдать при публикации приложения. Важно не только соблюдение всех style guide при разработке дизайна, но и обеспечение конфиденциальности личных данных пользователя, стабильности приложения во время работы и, самое главное, его полезности.  Одной из причин отказа в публикации может послужить то, что проверяющий сочтет приложение бесполезным, или же недостаточно полезным на фоне множества аналогичных приложений в App Store. В таком случае функционал приложения стоит пересмотреть, добавив в него, в том числе, элементы, затрагивающие нововведения операционной системы. Такие приложения пропускают в стор охотно, поощряя разработчиков и дальше поддерживать последние функции ОС.  Стоит отметить и ряд формальных моментов, которые очень важно учесть при создании мобильного приложения для iOS:  Для размещения в App Store какого-либо продукта нужно зарегистрироваться как разработчик, оплатить взнос в $99 за год и корректно заполнить все данные о себе. В случае, если вы планируете выпускать продукт как юридическое лицо, процедура регистрации будет дольше, и закладывать на этот процесс нужно от недели до месяца. Поэтому аккаунт разработчика мы советуем создавать сразу же, как только стартовала разработка – это поможет к моменту готовности приложения к запуску разместить его в сторе без лишних проволочек. • Необходимо подготовить материалы для страницы приложения: скриншоты строго заданного формата и размера (даже 1 лишний пиксель играет роль и картинки не будут приняты), рекламное и общее описание приложения, ключевые слова, политику конфиденциальности (написать и разместить файл так, чтобы он был доступен по ссылке). А еще нужно предусмотреть легкий вход в приложение для проверяющих, так как в случае необходимости регистрироваться по номеру телефона с смс-подтверждением попасть внутрь и проверить приложение они не смогут, и сразу отклонят его. Обычно мы генерируем заданный номер телефона и код, по которому можно войти в приложение, минуя получение смс. • Само приложение может проверяться от одного дня до недели. В исключительных случаях этот срок может быть и больше, но, как правило, приложение проходит проверку в течение нескольких дней. Это также стоит учитывать, планируя маркетинговую кампанию — стоит оставлять запас между днем отправки на проверку и стартом рекламы хотя бы в несколько дней. Требования Apple не ограничиваются стором, например, размещение на вашем лендинге кнопки “Download on the App Store” также регламентируется правилами, так что покрасить ее в цвета продукта не удастся.   Хотя правил и условий размещения немало, следует просто действовать по выверенному плану и соблюдать рекомендации, тогда риск столкнуться с проблемами снизится до минимума.  Выводы При разработке ios приложений с нуля важно учитывать следующие особенности:  Парк устройств относительно небольшой и они имеют однотипную архитектуру – это хорошо. • Вместе с тем нужно обеспечить удобную работу с интерфейсом и на небольших экранах, в режиме совместимости с которыми приложения открываются на планшетах. • Обновляются устройства на последнюю версию операционной системы быстро – это прекрасно. • На всех актуальных устройствах используется Retina дисплей высокого разрешения. Можно использовать тонкие шрифты и элементы, и не бояться их некорректного цветового или контурного отображения. • При проектировании интерфейса необходимо руководствоваться Apple Human Interface Guidelines. • При публикации приложения необходимо учитывать все требования App Store Review Guidelines, их много и они весьма разнообразны. • Готовиться к публикации нужно заранее: на получение необходимого DUNS номера, проверку документов и самого приложения может потребоваться 3-4 недели. Список требований достаточно обширный, кроме того, для каждого типа приложений он расширяется в свою специфику, но следование этим принципам разработки позволяет нам делать действительно качественные продукты. В нашей студии вы всегда можете заказать разработку ios приложений в Москве и России.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 3,
    "tag": [
      20,
      19
    ]
  }
},
{
  "model": "articles.article",
  "pk": 25,
  "fields": {
    "registration_time": "2022-07-13T14:35:52Z",
    "slug": "razrabotka-i-sozdanie-mobilnyh-prilozhenij-dlya-android",
    "is_active": true,
    "title": "Разработка и создание мобильных приложений для Android",
    "body": "Популярность Android-приложений растет с каждым годом и приносит их владельцам все больше прибыли. Например, по данным Sensor Tower, в 2020-ом выручка Google Play выросла на 30% по сравнению с предыдущим годом.   Студия AppCraft больше 9 лет разрабатывает мобильные приложения любой сложности: социальные сети, мессенджеры, сложные корпоративные решения, e-commerce и банковские системы. Большой опыт помогает создавать интуитивно понятный и актуальный интерфейс для любого бизнеса.   ✅ Разработка мобильного приложения под ключ для Андроид зависит от многих факторов и может составлять от 600 тыс. руб до нескольких миллионов рублей.   Кому понадобится разработка приложений под Android Корпоративному бизнесу  Мобильное приложение поможет автоматизировать сложные рабочие процессы: создать удобную систему для взаимодействия с персоналом и клиентами, анализировать эффективность работы, быстро получать обратную связь.   E-commerce  Приложение позволит привлечь новых покупателей и увеличить количество повторных продаж, рассказывать пользователям о новых товарах и акциях и создать систему лояльности клиентов.   Стартапам  Поможет быстро вывести идею на рынок и получить первую прибыль, заинтересовать инвесторов и изучить свою аудиторию с помощью внутренней статистики приложения.   Зачем нужно разрабатывать приложение?  Возможность охватить большую целевую аудиторию — 88% людей пользуются телефонами на Android.  Разнообразие гаджетов на Android позволяет полностью заменить десктоп, так что пользователям необходимы удобные мобильные приложения.   Можно реализовать любые функции, которые помогут поддерживать связь с пользователями и увеличить продажи.  Популярность Google Play растет с каждым годом, что дает возможность выйти на новые сегменты рынка.  AppCraft занимается разработкой мобильных приложений, их дальнейшей поддержкой и продвижением в Google Play. Мы ценим время и потребности клиентов, поэтому собрали команду из лучших и проверенных специалистов, ориентированных на результат.   Заказать разработку мобильного приложения для Android, чтобы вывести свой бизнес на новый уровень.   Специфика создания и разработки мобильных приложений под Android с нуля Создание мобильного приложения под android непростая задача, потому что важно знать несколько моментов. Во-первых, это большая фрагментация устройств. Просто огромная. Это прекрасно для пользователей: можно выбрать телефон на любой вкус и под любые технические требования. Но очень непросто для разработчиков приложений, и это касается как аппаратной, так и программной части.  Аппаратно у девайса может быть фронтальная камера, а может и нет. Симкарт может быть любое количество. Физические кнопки могут присутствовать или нет. Экрана может быть два: дополнительный с тыльной стороны или на чехле.  Существующие элементы также имеют разные параметры. Например, датчик акселерометра у всех мобильных может быть установлен в нескольких вариантах.   Расположение осей акселерометра может оказаться не таким, как в документации Казалось бы – мелочь. Но для создания игры, управляемой наклонами устройства (например, гонки), сначала вам надо попросить пользователя повертеть телефон в руках в заданных направлениях, чтобы приложение распознало позицию установленного датчика. Иначе на одном смартфоне для поворотов нужно будет делать наклоны влево-право, а на другом – вперед-назад.   Схематичная демонстрация основных размеров экранов Android и iOS Размер экрана и его разрешение – отдельная проблема. Например, если вам нужно разместить изображение на весь экран iOS, вы используете несколько изображений под типовые размеры iPhone 6 и выше, iPhone 6 Plus и выше, iPhone X и iPhone X Max. В случае же с Android экраны имеют разные разрешения, соотношение сторон и плотность.  В связи с этим для Android–разработчиков существуют разные инструменты, например 9 Patch – схема разметки, позволяющая задать правила растягивания изображения при изменении его размера. Без нее сложно разработать приложения под android и корректно отобразить, в том числе, и фоновые изображения в связи с разбросом в размерах экранов.   Пример использования 9 Patch в Android Соответственно если вы задались целью заполнить изображением весь экран, вам нужно или использовать несколько картинок и обрезать их на нестандартных размерах, или разрезать так, чтобы отдельные части образовывали собой одно целое, но могли смещаться относительно друг друга (например, земля, облака, левая и правая части).   Распределение версий ОС Android на 7 мая 2019 г. Последняя версия, Pie (Android 9) установлена только на 10% устройств. Версии 5.х (Lollipop) и младше занимают более 20% рынка. Во-вторых, это большой разброс видов операционной системы Android, установленных у пользователей. Это порождает множество проблем при создании мобильных приложений для android с нуля:  В процессе разработки необходимо учитывать особенности отображение интерфейса на разных версиях ОС и оболочках. Так, системные элементы управления могут выглядеть совершенно не одинаково на нескольких версиях Android и оболочках одной и той же версии Android; • Разные версии в ряде моментов имеют отличную друг от друга логику работы. Например, до версии 6.0 приложения не должны были запрашивать каждое разрешение отдельно (доступ к камере, микрофону и так далее), они указывались списком в Google Play и, подразумевалось, что пользователь ознакамливается с ними до момента загрузки. Начиная с 6.0 каждое разрешение должно быть запрошено отдельно уже в момент работы приложения. Соотвественно, если вы не реализовываете оба варианта логики при разработке мобильного приложения андроид, оно не будет работать либо до версии 6.0, либо в более поздних; • Программные методы и библиотеки меняются: какие-то из них признаются устаревшими и их требуется заменять на более новые. Таким образом всегда встает выбор: либо поддерживать наиболее последние функции ОС, либо позволить как можно большему количеству пользователей установить мобильное приложение; • В последних видах ОС добавилась многозадачность рабочей области. Пользователь может отобразить на рабочей области одновременно несколько приложений и вашему может быть выделена совершенна произвольная по размеру область. Это также надо учитывать при создании приложений.  Темы отображения одного и того же приложения Третье, что нужно учитывать при разработке андроид приложений с нуля, это архитектура самого приложения. В отличие от iOS, где приложения архитектурно представляют собой нечто единое целое, в Android они собираются из логически самостоятельных и обособленных частей – активити и фрагментов.  Такой подход был создан как раз для того, чтобы обеспечить работу приложений на совершенно любых мобильных, в том числе с очень малым объемом оперативной памяти и очень слабыми процессорами. Если части приложения независимы, любую из них можно в нужный момент выбросить из памяти и не тратить на поддержание ее жизненного цикла драгоценные ресурсы.  Например, вы видите список ресторанов, затем нажимаете на какой-то элемент и проваливаетесь в него. Второй экран, карточка ресторана, ничего не должна знать о предыдущем списке, потому что в любой момент времени, в том числе сразу после перехода в карточку, он может быть выгружен из оперативной памяти и уничтожен. Это произойдет, например, если в фоне запущенно много приложений или в карточке вы начинаете проигрывать видео в хорошем качестве.   Активити и фрагменты представляют собой логически обособленные элементы со своим жизненным циклом Чтобы приложение работало корректно и без сбоев, экран карточки не должен обращаться ни к какой информации предыдущего экрана, принимая на вход лишь определенные данные. Если, например, у пользователя есть возможность перейти на следующий ресторан, не возвращаясь в список, то карточка должна самостоятельно получить необходимую информацию. В то же время экран списка не должен ничего знать о самой карточке, т.к. после возвращения из нее она так же может быть уничтожена.  Этот аспект архитектуры приложений звучит слишком технически, но он дает понять почему, например, далеко не для всех типов приложений возможна кроссплатформенная разработка: если это что-то объемное по функционалу, то оно полностью выгружается из памяти при недостатке места и на слабых устройствах возможность работы с ними попросту отсутствует.  Особенности разработки под Android В процессе разработки приложений для android есть ряд особенностей:  1. В отличие от iOS, приложения для Android представляют собой взаимосвязь отдельных, логически обособленных элементов, как об этом говорилось выше. То есть нельзя просто взять и ипортировать приложение на другую операционную систему, переписав код с одного языка программирования на другой. То есть при создании приложений под android нужно закладывать совершенно другую архитектуру.  Другой подход наблюдается и в других аспектах.  Например, современная иконка приложений может иметь разную форму в зависимости от настроек операционной системы. Дизайнер должен это учитывать и убедиться, что логотип выглядит прекрасно и гармонично во всех вариантах.   Иконка приложения может иметь разную форму на гаджетах разных пользователей. Но она всегда должна оставаться прекрасной. 2. При разработке мобильных приложений для android важно опираться на Material Design. Это целая философия создания пользовательского интерфейса. Официальная документация по этому подходу включает в себя сотни документов, подробно описывающих как его принципы, так и конкретные примеры правильного и неправильного использования правил для каждого элемента интерфейса.   Кнопка, выступающая над активной областью, должна быть только одна (одного цвета). Нельзя использовать несколько выступающих кнопок нескольких цветов. Кнопка, панель навигации, иконка и все остальные элементы должны следовать этим правилам, если вы хотите сконструировать красивый material интерфейс и получить предложение от Google на продвижение вашего приложения в Google Play.   На кнопках нельзя использовать вертикальное выравнивание текста и иконки. Как и нельзя использовать более одной иконки на одной кнопке. 3. Рекомендуемым Google языком программирования, при создании приложений под android, в настоящее время является Kotlin, не Java. Различие между ними существенно меньше, чем между Objective-C и Swift для iOS, но все же это немного отличающиеся подходы к разработке.  4. Тестирование на большом парке физических устройств (не эмуляторов) при этом имеет чрезвычайно важное значение при создании андроид приложений. Даже оно, в силу огромного количества телефонов на рынке, не обеспечивает беспроблемное функционирование на всех доступных моделях, но по крайней мере снижает вероятность проблем на наиболее популярных девайсах.  Политика публикации приложений в Google Play После того, как процесс создания мобильного приложения android завершен, наступает время его публикации. Перед публикацией в магазин приложений Google Play сборки проходят гораздо менее тщательный контроль с точки зрения соблюдения требований по построению интерфейса, выбора тематики и запроса персональных данных пользователей.  Несмотря на то, что Google недавно изменил подход к проверке приложений, сделав его более тщательным и более ручным, среднее время ревью приложений составляет 2-4 часа. Это существенно быстрее, чем 2-3 дня в случае с App Store.   Общая схема процесса проверки приложений: сначала это делают алгоритмы, выставляя сборке определенный бал, затем живой человек принимает решение, учитывая его величину и другие факторы Раньше многие этим пользовались с целью раскрутки созданных приложений для android. В Android Market, предыдущей версии Google Play, была вкладка “Новые приложения”, отображающая обновления в их хронологической последовательности. Таким образом, чем чаще вы обновляли приложение, тем больше получали загрузок. Каждый апдейт в России давал 1-3 тысячи загрузок, и за месяц можно было достичь хороших результатов, если приложение действительно приносило пользу (если рейтинги плохие, загрузок вы получали единицы).  Сейчас продвижение приложений стало намного сложнее, но в первую очередь нужно создать классный продукт, в том числе с точки зрения требований концепции Material Design. Вы их можете не соблюдать, но такое приложение будет рекламироваться в Google Play самой Google в исключительных случаях.  Выводы Создание мобильных приложений для Android имеет следующую специфику:  Android – самая популярная операционная система в мире. Как следствие, диверсификация устройств, управляемых ею, огромна. В процессе создания приложения нужно убедиться в том, что приложение поддерживает подавляющее большинство гаджетов целевой аудитории. • На этапе разработки обратить внимание, что UI/UX должен учитывать не только различные размеры устройств, но и работу в режиме многооконности, и плотность пикселей экранов: тонкий шрифт на некачественных дисплеях будет искажен или вовсе исчезнет. • Количество актуальных версий Android, находящихся в использовании, много. При создании приложений надо учитывать все из тех, которыми пользуется ваша целевая аудитория. • В процессе разработки, при проектировании интерфейса необходимо руководствоваться концепцией Material Design. • Рекомендуемым Google языком программирования для Android является Kotlin. • На разных этапах создания очень важно тестирование на обширном парке физических устройств. • Настроить личный кабинет разработчика и опубликовать приложение можно за 2-3 часа. Заказать разработку мобильного приложения для Андроид За 9 лет не один десяток компаний обратились в нашу студию, и заказали разработку android приложений для мобильных устройств в Москве и России. Некоторые из них мы не можем публиковать из-за NDA, но очень многими мы поделились в нашем портфолио.  Перед тем, как заказать создание android приложений, нужно быть готовым к тому, что разработка мобильных приложений для android – непростое дело. Важно учитывать основные перечисленные и множество других факторов. Вместе с тем не менее важно и решить реальную, существующую проблему людей, и не допустить наиболее часто встречающиеся ошибки.  Если вы задумываетесь о создании мобильного приложения под android, позвоните нам или оставьте заявку в форме на сайте. Наши менеджеры свяжутся с вами и ответят на все вопросы.",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 3,
    "tag": [
      20,
      21
    ]
  }
},
{
  "model": "articles.article",
  "pk": 26,
  "fields": {
    "registration_time": "2022-07-13T14:38:32Z",
    "slug": "7-sovetov-kak-uluchshit-interfejs-kartochek-v-veb-dizajne",
    "is_active": true,
    "title": "7 советов как улучшить интерфейс карточек в веб-дизайне",
    "body": "Если просмотреть наши публикации трендов веб-дизайна за несколько прошедших лет, то можно увидеть, что карточное оформление элементов на веб-страницах появилось достаточно давно. Это в первую очередь связано с развитием адаптивного дизайна и социальных медиа, для которых требовалось придумать простой и универсальный метод отображения данных.  интерфейс карточек в веб-дизайне Подобные карточки представляют из себя краткую выжимку с определенной информацией и возможностью перейти к ее полному прочтению. Этот элемент пользовательского интерфейса может включать в себя: медиа-объекты (чаще всего изображения), текстовый анонс, кнопку для перехода, а также заголовки и подзаголовки.  К дизайну карточек нужно подходит достаточно серьезно, т.к. “места для маневров” у вас мало, а от данного компонента зависит многое. Если спроектировать их недостаточно удобными и эффективными, то это негативно влияет на итоговый пользовательский опыт. Сегодня поделимся с вами переводом этой статьи, где представлена подборка полезных советов как сделать карточный дизайн лучше.  1. СПИСКИ И ТАБЛИЦЫ Начнем немного издалека. Есть ситуации, когда карточки вообще не стоит использовать. Например, если у вас имеется однородный контент с содержимым, меньшим нескольких строк, то лучше смотрится оформление в виде списка. Тогда просматривать такую информацию получится намного быстрее  Списки в дизайне Аналогично, когда есть большой набор данных с одинаковыми характеристиками, к которому неплохо было бы добавить сортировку или фильтрацию, то более эффективным решением будет применение таблицы.  Таблицы в дизайне Иногда такое представление информации могут добавлять в виде альтернативы. Наверняка в интернет-магазинах вы встречали функцию переключения каталога товаров в виде карточек или списком.  2. ОДНА ИДЕЯ — ОДНА КАРТОЧКА Карточный дизайн интерфейса Не стоит использовать в этом элементе вывод множественных объектов, лучше каждый из них представить в виде отдельной карты. Тот же слайдер в превью, если он выводится в каждой карточке, будет лишь отвлекать и дополнительно нагружать веб-страницу.  3. НИКАКИХ ЛИШНИХ ССЫЛОК Ссылки в карточках интерфейса Крайне не рекомендуется добавлять ссылки в краткое текстовое описание, линк у карточки должен быть только один — с кнопки/картинки или при клике по ней. Это и смотрится не красиво, и может направить посетителя сайта не туда, куда нужно было.  4. ИЗБАВЬТЕСЬ ОТ РАМОК Рамки для блоков Иногда дизайнеры-новички выделяют каждый элемент рамкой чтобы представить их как отдельные объекты. Делать это вовсе не обязательно. Как видите на картинке выше, это лишь создает дополнительный «визуальный шум» и мешает концентрировать внимание на содержимом отдельной карты.  5. ВИЗУАЛЬНАЯ ИЕРАРХИЯ Визуальная иерархия карточек Содержимое карточки должно хорошо читаться и сразу показывать пользователю, где какой элемент находится и насколько он важен: заголовок, подзаголовок, кнопка и т.п. Это делается за счет разных приемов типографики — разных размеров шрифтов, цвета, фона и т.п.  6. РАЗЛИЧАЙТЕ НЕСКОЛЬКО ДЕЙСТВИЙ Карточки интерфейса Если в карточном интерфейсе для элементов у вас предусмотрены несколько действий, то желательно как-то из разделить. Как видите на картинке примера выше, справа главное действие выделено фоном и заметно выделяется от второстепенного, где используется обычное оформление ссылки.  7. ОГРАНИЧЬТЕ АНОНС Карточки в интерфейсе Добавьте определенное ограничение для текстового содержимого — 20 слов, 50 символов, 2 предложения и т.п. Компактные карточки лучше воспринимаются в интерфейсе. Но при этом важно предоставить пользователю достаточно информации дабы тот мог понять следует ему переходить по ссылке дальше или нет.  Конечно, тут рассмотрена лишь малая часть нюансов, которые можно было выделить в дизайне интерфейса карточек и есть множество других важных деталей. Возможно, в дальнейшем мы дополним ими текущую статью либо опубликуем отдельную заметку. А этот пост можно считать “первым знакомством” с данным вопросом.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 1,
    "tag": [
      26,
      30,
      31
    ]
  }
},
{
  "model": "articles.article",
  "pk": 27,
  "fields": {
    "registration_time": "2022-07-13T14:39:09Z",
    "slug": "osnovnye-vidy-knopok-polzovatelskogo-interfejsa-na-sajtah-i-v-prilozheniyah",
    "is_active": true,
    "title": "Основные виды кнопок пользовательского интерфейса на сайтах и в приложениях",
    "body": "Кнопки – это один из наиболее известных интерактивных элементов пользовательского интерфейса. Они играют очень важную роль в организации взаимодействия с пользователем и формировании у него позитивного опыта. Продолжая серию постов, посвященных тематике UI/UX дизайна, в этой статье были собраны понятия и примеры, касающиеся наиболее часто используемых типов кнопок, что встречаются на веб-сайтах и в мобильных приложениях.  Раньше мы публиковали заметку про историю изменения дизайна кнопок на сайтах и в интерфейсах (начиная с 2009г.), а сейчас рассмотрим этот элемент с точки зрения функциональности, назначения и способа его реализации (срабатывания). Эта информация станет полезным дополнением к советам по созданию эффективного дизайна кнопок в интерфейсах.  кнопки пользовательского интерфейса Данный пост является переводом этой статьи от Tubik Studio.  ЧТО ТАКОЕ КНОПКА В ИНТЕРФЕЙСЕ? Это интерактивный объект, который позволяет получить желаемый отклик от сервиса/приложения после выполнения определенной команды. По сути, кнопка является элементом управления, дающим возможность пользователю напрямую общаться с устройством и отправлять необходимые команды для достижения тех или иных целей, например: отправить электронное письмо, купить какой-то товар, загрузить данные в регистрационную форму на сайте, включить плеер, а также множество других действий. Одна из причин популярности кнопок и их удобства для пользователей заключается в том, что они эффективно имитируют взаимодействие с объектами в материальном мире.  Современные кнопки пользовательского интерфейса разнообразны и многофункциональны. Как правило, они представляют собой интерактивную зону, которая заметно выделяется среди остальных объектов, имеет определенную геометрическую форму и поддерживается текстом, объясняющим выполняемое действие.  Сегодня веб-дизайнерам приходится прилагать немало усилий и времени, чтобы создать эффективные и заметные кнопки, которые бы четко выделялись и естественно вписывались в стилистическую концепцию макета вебсайта. Это может быть добавление CSS hover эффектов срабатывающих при наведении или специальная более сложная анимация.  кнопки в интерфейсе Далее, рассмотрим типы кнопок, наиболее широко применяемых в мобильных и веб-интерфейсах.  КНОПКА ПРИЗЫВА К ДЕЙСТВИЮ CTA (CALL-TO-ACTION) Ее основная задача — побуждать пользователей к выполнению тех или иных действий, превращая их из пассивных юзеров в активных. Подобные «активности» больше всего актуальны в дизайна лендингов и связаны, например, покупкой товара, подпиской на рассылку и т.п.  Технически CTA-кнопка может быть реализована разными способами, но она должна поддерживается текстом с определенным призывом. Ее главное отличие от всех других кнопок вокруг – способность привлекать внимание. Она заметно выделяется на странице/экране и стимулирует пользователей к выполнению необходимых действий.  Кнопка CTA На скриншоте выше — главная страница компании, занимающейся продажей книг для детей через интернет. Тут имеется одно ключевое действие, отображающее основную цель вебстраницы — подписка на общую рассылку. В данном случае кнопка спроектирована таким образом, чтобы быть одним из наиболее заметных элементов дизайна – как только пользователь будет готов оформить подписку, он сможет мгновенно увидеть, каким образом это сделать.  ТЕКСТОВАЯ КНОПКА Здесь все предельно понятно — это кнопка с определенным текстом. Причем слово/фраза не выделены какой-либо формой, вкладкой или чем-то подобным, то есть визуально текст никак не напоминает кнопку в привычном для нас понимании. Несмотря на это, данный элемент управления дает все необходимые возможности для взаимодействия с интерфейсом.  Подобные объеты часто могут выделяться цветом или подчеркиванием через CSS. Очень часто их используют в верхней части шаблона в качестве навигации, которая обеспечивают доступ к основным разделам контента. В этом случае кнопки специально не помечаются, так как все (или большинство) элементов в шапке/хедере являются интерактивными по умолчанию.  Также прием используется для создания дополнительных интерактивных зон, которые бы не отвлекали внимание пользователя от более важных элементов управления/призыва к действию.  Текстовая кнопка Этот изящный дизайн разработан для онлайн-магазина модной одежды. Как видите, интерактивная часть интерфейса основана на текстовых ссылках. Здесь лишь один объект с призывом к действию (Shop new arrivals) представлен легко распознаваемой кнопкой, а все остальные в хедере и вкладках — отличаются только текстом о предложениях магазина. Такой подход к оформлению поддерживает легкий и минималистский дизайн веб-страницы.  КНОПКА С ВЫПАДАЮЩИМ СПИСКОМ При нажатии на нее отображается выпадающий список взаимоисключающих пунктов. Этот вариант часто используется для входа в раздел «Настройки». Выбранный пункт из списка обычно помечается как активный, например, с помощью цвета.  Кнопка с выпадающим списком В этом примере представлен процесс взаимодействия доктора с пациентом в приложении HealthCare. При нажатии на кнопки открываются выпадающие списки дополнительных услуг, которые врач может включить в счет клиента. При выборе нужного варианта большая кнопка исчезает, остается лишь выбранная опция и маленькая кнопка-плюс на случай, если вы захотите еще раз просмотреть список.  КНОПКА «ГАМБУРГЕР» С помощью данной кнопки открывается список меню. Свое название эта реализация получила из-за изображения трех горизонтальных линий в иконке гамбургер меню, визуально напоминающей бургер. В настоящее время это широко используемый интерактивный прием для мобильных и веб-интерфейсов, однако горячие споры о его достоинствах и недостатках до сих пор ведутся. Мы уже как-то рассматривали альтернативы гамбургер-меню и их преимущества.  Кнопка гамбургер-меню Вот пример веб-проекта, использующего данную фишку. Как видим, она позволяет скрыть расширенное меню опций, чтобы не отвлекать посетителей от стильного визуального оформления и ключевой информации.  Активные пользователи интернета заранее знают, что кнопка-гамбургер скрывает различные категории или дополнительный контент, и им не нужны объяснения/подсказки по поводу этой функции. Она заметно освобождает пространство, делая интерфейс еще более минималистским и легким + экономится место для других важных деталей макета. С ее помощью возможно реализовать адаптивный дизайн со скрытыми навигационными элементами и интерфейсом, который гармонично выглядит на разных устройствах.  Аргументы против гамбургер-меню основаны на том, что оно может сбивать с толку людей, которые не так часто посещают веб-сайты – их может ввести в заблуждение знак, выглядящий слишком абстрактно. Это в свою очередь вызовет проблемы с навигацией и станет причиной формирования неудачного опыта при посещении сайта. Таким образом, решение об использовании кнопки-гамбургера следует принимать лишь после исследования целевой аудитории и определения ее возможностей и потребностей.  И хотя применение этого типа кнопок до сих пор является одним из спорных моментов современного дизайна веб-сайтов и моб.приложений, он достаточно широко используется.  КНОПКА-ПЛЮС При нажатии на нее пользователь сможет добавить какой-то контент в систему. В зависимости от типа приложения, это может быть: новое сообщение, контакт, локация, заметка, пункт из списка — все, что является базовыми действиями для цифрового устройства.  Кнопка-плюс В некоторых случаях кнопка-плюс позволяет пользователю напрямую переходить в модальное окно создания контента, а иногда существует также промежуточный этап, предоставляющий возможность выбора дополнительных опций, что делает добавление контента более конкретным.  КНОПКА С ВЫБОРОМ ВАРИАНТОВ После ее нажатия открывается набор доступных опций — это еще один способ задать нужный вид взаимодействия без перегрузки экрана, что особенно важно для в дизайне мобильных интерфейсов для устройств с небольшим размером дисплея.  Кнопка с выбором вариантов В пример показано приложение Travel Planner, где центральным интерактивным элементом на панели вкладок является кнопка-плюс (рассмотренная в предыдущем пункте), позволяющая человеку добавить новую экскурсию или новую услугу к определенному туру. Однако, чтобы упростить работу, она преобразуется в набор доп.кнопок, соответствующих определенным типам контента. Это дает возможность посетителю в самом начале сделать правильный выбор и быстро найти нужный экран.  КНОПКА «ПОДЕЛИТЬСЯ» Из-за высокой популярности социальных сетей, переписок в мессенджерах и электронной почте был разработан тип кнопок, упрощающих процесс взаимодействия приложения или веб-сайта с социальными профилями пользователей. Данные инструменты позволяют легко распространять контент или находить аккаунты компаний в соц.сетях.  Чтобы сделать процесс подключения удобным и понятным, применяются иконки, соответствующие легко узнаваемым логотипам определенных социальных сервисов. Даже если обмен контентом не является ключевым действием, ожидаемым от посетителя на странице, кнопки «Поделиться» все равно не выглядят как обычные – они не имеют особой формы, не выделяются цветом, не подчеркиваются и т. д.  Человек просто видит иконки на странице, которые при этом являются интерактивными. Такое решение поддерживает минималистскую стилистику и способствует эффективному использованию свободного (негативного) пространства. Оно также помогает фокусироваться на основных функциях/задачах приложения, но при этом отчетливо видеть значки для быстрого доступа к социальным профилям.  Кнопка поделиться В изящном и минималистичном макете сайта строительной компании в левом левом нижнем углу находятся иконки корпоративных социальных аккаунтов. Они достаточно заметны, но при этом не отвлекают внимание от ключевой навигации и объекта с призывом к действию.  ПРИЗРАЧНАЯ КНОПКА Она на первый взгляд выглядит «пустой». В принципе, визуально хорошо узнаваема благодаря своей форме и тонкой обводке. В случае нескольких элементов призыва к действию этот вид кнопок помогает установить визуальную иерархию: основной CTA-объект представлен в виде заполненной кнопки, а вторичный (тоже активный) – в виде прозрачной.  Призрачная кнопка В качестве примера представлена форма логина и регистрации приложения ресторана. Здесь вы видите 3 типа кнопок:  основная CTA-кнопка представлена заполненным элементом как наиболее простой способ быстрой регистрации; призрачная — обеспечивает доступ к менее известному варианту; текстовая — в виде ответа на вопрос выделена цветом и интегрирована в строку внизу экрана. Подобный подход в дизайне помогает реализовать четкую иерархию интерактивных объектов/элементов на экране.  ПЛАВАЮЩАЯ КНОПКА ДЕЙСТВИЯ (FAB) Часто используется в «материальном дизайне» и способствует определенному действию. Как правило, представляет собой круглую кнопку, парящую над остальным контентом страницы. Она обеспечивает мгновенный доступ к наиболее важным и популярным действиям юзера на экране приложения. В зависимости от дизайна и информационной архитектуры мобильного приложения FAB-кнопка может:  выполнять обычное целевое действие (открывать новое письмо электронной почты; открывать экран для добавления фото или видео; выполнять поиск нужного контента в галерее и т. д.) показать дополнительные доступные действия трансформироваться в другие UI-элементы. Определяющим фактором для расположения FAB-кнопки на экране обычно является высокая видимость (хотя возможны разные вариации в зависимости от вашей концепции дизайна). Согласно эмпирическому правилу, рекомендуется использовать на экране не более одной такой кнопки, чтобы избежать потери концентрации внимания.  Плавающая кнопка действия (FAB) В этом примере для приложения Travelersdiary для взаимодействия имеются: панель управления в нижней части экрана, FAB-кнопка и прокручиваемый список.  ФАКТОРЫ, ОПРЕДЕЛЯЮЩИЕ ЭФФЕКТИВНОСТЬ ДИЗАЙНА КНОПОК UI РАЗМЕР Является одним из основных показателей, которые определяют степень значимости элемента дизайна и помогают выстроить правильную иерархию компонентов. Заметная и эффективная CTA-кнопка должна быть достаточно большой, чтобы ее можно было быстро найти, но при этом не слишком громоздкой, чтобы не нарушить структуру макета.  Лидеры рынка часто в своих руководствах дают рекомендации по размерам, например:  Apple считают, что размер кнопок CTA в мобильном интерфейсе должен быть не менее 44х44 пикселей; Microsoft рекомендует значение = 34х26 пикселей. Если вы занимаетесь разработкой под мобильные устройства, учтите, что требования к различным типам кнопок могут быть довольно строгими. Поэтому заранее внимательно изучите рекомендации, чтобы свести к минимуму риск отклонения вашего проекта из-за неподходящего UI-дизайна.  ЦВЕТ Чтобы выделить особо важные кнопки, а второстепенные сделать менее заметными, нужно выбрать правильный цвет. Всем известно, что на поведение/настроение человека в значительной степени влияет его визуальное окружение. В связи с этим цветовая палитра является одним из самых мощных инструментов дизайна.  Цвет кнопки При ее выборе для CTA-элементов важно учитывать следующее: цвета фона и кнопки должны четко контрастировать, чтобы она сразу выделялась среди других UI-компонентов.  ФОРМА Если речь идет о Call To Action элементах, то они обычно имеют форму прямоугольника. Она помогает ясно понять, что кнопка является кликабельной и интерактивной + пользователи привыкли воспринимать объект прямоугольной формы как кнопку.  Рекомендуется проектировать CTA-кнопки с закругленными углами – они помогают направить взгляд внутрь и привлечь внимание к тексту. Безусловно, выбранная форма должна гармонично сочетаться с общей стилистической концепцией веб-страницы или экрана мобильного приложения.  МЕСТОПОЛОЖЕНИЕ Правильное расположение играет решающую роль в выстраивании цельной визуальной иерархии и понятной навигации. Если выбранное расположение будет неудачным, другие визуальные аспекты, такие как цвет и размер, будут работать менее эффективно. Дизайнеры должны определить наиболее часто просматриваемые пользователями области экрана и именно там разместить основные функциональные объекты.  ТЕКСТ Убедительный микротекст кнопки – это, как правило, слово или короткий, но содержательный отрывок текста, что может быстро привлечь внимание пользователей. Часто текст набирается заглавными буквами дабы сделать его еще более заметным, но это вовсе не обязательно – подобное решение принимается в соответствии с общей визуальной концепцией, типографикой и назначением самого текстового сообщения.  НАПРИМЕР: Ниже представлен дизайн целевой страницы сайта дошкольного учреждения.  Размещение кнопок на сайте Рассмотрим все кнопки, используемые на странице:  Основная Call To Action кнопка приглашает посетителей присоединиться, она мгновенно привлекает внимание: дизайнер использовал прямоугольную форму с закругленными краями. Яркий цвет кнопки контрастирует с фоном и визуально связывает ее с анимационным hero image изображением – самым заметным визуальным элементом на странице. Поддерживающий CTA-текст набран заглавными буквами и легко читаемым шрифтом. В хедере размещены 4 текстовые кнопки, которые помогают пользователям перейти к самым важным разделам контента на веб-сайте. В левой части хедера находится хорошо заметная дополнительная CTA-кнопка, которая позволяет уже зарегистрированным юзерам входить в свои учетные записи. Кнопки «Поделиться» имеют круглую форму и не слишком резко контрастируют с фоном – их легко увидеть, но при этом они не отвлекают внимание от основных объектов. На самом деле, тут представлены далеко не все типы кнопок для UI-дизайна, но эти встречаются наиболее часто. Надаемся, данная статья будет вам полезной.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 1,
    "tag": [
      30,
      31
    ]
  }
},
{
  "model": "articles.article",
  "pk": 28,
  "fields": {
    "registration_time": "2022-07-13T14:40:13Z",
    "slug": "skandinavskie-cveta-i-stil-v-dizajne-sajtov-60-primerov",
    "is_active": true,
    "title": "Скандинавские цвета и стиль в дизайне сайтов (60+ примеров)",
    "body": "При создании палитры для сайтов дизайнеры учитывают не только сферу будущего веб-проекта, его функциональность, целевую аудиторию, а и множество других нюансов. Вполне логично, что, например, в традиционном зимнем сайте преобладают холодные тона, совместно с всевозможными оттенками синего и голубого.  Сегодня у нас будет подборка дизайнов в скандинавских цветах и стилистике, которая используется не только в веб-проектах данного этого региона, а отлично смотрится практически во всех тематиках. Здесь вы увидите спокойные светлые оттенки, с пастельными фонами и приглушенной типографикой (пусть и больших размеров). Естественная палитра напоминает рассмотренные ранее сайтов о мебели + все выполнено в духе минимализма.  При написании заметки мы ориентировались на эту статью, которая предоставлена интересными дизайнерским сервисом, включающим в себя не только материалы для вдохновения, но небольшой инструмент создания палитр. Он бы отлично вписался в нашу подборку генераторов палитр для веб-дизайнеров.  Zhenya Rynzhuk  Zhenya Rynzhuk  Deplace Maison  Deplace Maison  Lafaurie  Lafaurie  Alex van Zijl  Alex van Zijl  Прикольный сайт портфолио с оригинальной функциональностью. Например, если навести курсор на фото, оно будет шутливо разрисовано. Необычная навигация и вообще все достаточно креативно.  Elena IV-Skaya  Elena IV-Skaya  Vadim Tyurin  Vadim Tyurin  White Elephant  White Elephant  Alfa Charlie  Alfa Charlie  Crafted  Crafted  Veley / Ross Wedding  Veley / Ross Wedding  Thibaud Allie  Thibaud Allie  HalloBasis  HalloBasis  Aristide Benoist  Aristide Benoist  Purple Rock Scissors  Purple Rock Scissors  Harvard Film Archive  Harvard Film Archive  The New Company  The New Company  Gautier Maillard  Gautier Maillard  Bruegel  Bruegel  Adrien Laurent  Adrien Laurent  Sea Harvest  Sea Harvest  Dnlsptzk  Dnlsptzk  Al Safar  Al Safar  Много где в примерах встречается крупная типографика, которая уже давно является дизайнерским трендом. Иногда авторы используют при этом жирные шрифты иногда выбирают тонкие, но большие по размерам буквы. И в том, и в другом случае цель одна – привлечь внимание и подчеркнуть какие-то детали. Вообще для минималистичных макетов типографика играет одну из ключевых ролей.  LARGO Inc.  LARGO Inc.  FAT FAT FAT Festival — 19  FAT FAT FAT Festival — 19  Once Upon a Time In Hollywood  Once Upon a Time In Hollywood  Nomadic Tribe  Nomadic Tribe  Одной ногой в диджитал  Одной ногой в диджитал  Greg Hirshland  Greg Hirshland  Chang Liu  Chang Liu  Nikolas Type  Nikolas Type  Guillaume Colombel  Guillaume Colombel  Homecult  Homecult  Matteo Baratin  Matteo Baratin  Jordan Gilroy  Jordan Gilroy  100 Every Day  100 Every Day  New Drivesally  New Drivesally  Davide Perozzi  Davide Perozzi  Smem Music  Smem Music  Omri Revesz  Omri Revesz  Henry.Codes  Henry.Codes  Daniella&Gemma  Daniella&Gemma  Stuuudio  Stuuudio  On fait quoi pour le climat?  On fait quoi pour le climat?  Superlative  Superlative  Redscout  Redscout  CoType Foundry  CoType Foundry  Made Together  Made Together  Ride and Crash  Ride and Crash  Dai Gondo  Dai Gondo  Natalist  Natalist  Studio Posen  Studio Posen  KIN Partners  KIN Partners  Kenkashi  Kenkashi  Ecosistema del Diseño Español  Ecosistema del Diseño Español  6nomads  6nomads  The Drive New York  The Drive New York  Misfits Market  Misfits Market  Cliff Studio  Cliff Studio  Endless West  Endless West  Isabel Bar  Isabel Bar  Brandland  Brandland  В данной заметке встречаются и достаточно смелые/яркие макеты, и веб-ресурсы из других стран (что можно понять по наполнению и доменам). Поэтому в качестве формулировки в заголовке про скандинавский дизайн сайтов имелась ввиду скорее цветовая палитра и (отчасти) стилистика, нежели географическая принадлежность.  Достаточно много веб-проектов являются интерактивными и необычными, что, в принципе, объясняется их целевым назначением – это портфолио. Хотя это не мешает им оставаться минималистичными – на страницах много пустого места, визуально они смотрятся просто и понятно, не перегружены лишним деталями.",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 1,
    "tag": [
      26,
      30
    ]
  }
},
{
  "model": "articles.article",
  "pk": 29,
  "fields": {
    "registration_time": "2022-07-13T14:41:03Z",
    "slug": "font-combination-tool-podbor-kombinacij-shriftov-dlya-sajta-udachnyh-10-primerov",
    "is_active": true,
    "title": "Font Combination Tool — подбор комбинаций шрифтов для сайта (+удачных 10 примеров)",
    "body": "Если у вас есть два сильных акцента в дизайне, конкурирующие между собой (будь то иллюстрации, цвета или шрифты), важно сохранять баланс и максимально аккуратно совмещать их вместе. Онлайн инструмент Font Combination Tool от Bold Web Design поможет отыскать эффективные комбинации шрифтов + ниже мы продемонстрируем парочку интересных вариантов. Он отлично впишется в компанию других онлайн сервисов подбора шрифтов для сайтов, рассмотренных ранее.  Изначально задача комбинирования кажется достаточно сложной, но на самом деле существует целое множество удачных решений — несмотря на свою уникальность, каждый фонт универсален и может быть использован в разных дизайнах, макетах вебсайтов, иллюстрациях и т.п. Примеры, взятые из этой публикации, станут отличным дополнением наших подборок удачной типографики для веб-страниц и лучших Google шрифтов для заголовков.  FONT COMBINATION TOOL В ДЕЙСТВИИ Допустим, у вас уже имеется какой-то один шрифт и теперь нужно найти для него “компанию” либо вы только начинаете весь процесс выбора типографики с нуля. И в том, и в другом случае вам пригодится сервис Font Combination Tool.  Сервис Font Combination Tool Выбор фонтов – это стресс, ведь их существует так много, и с каждым днем дизайнеры создают их еще больше, и часто найденные варианты вас не устраивают… С данным инструментом задача может немного упроститься.  На главной странице вам нужно выбрать какой-то один основной шрифт из выпадающего списка. Сразу после этого система выдаст пример возможного оформления веб-страницы:  Font Combination Tool - комбинация шрифтов Тут представлены разные функциональные элементы и их комбинации: глобальный заголовок в стиле Hero Image изображения, блок анонсов статей/новостей из 3-х колонок, отображения текста на темном/светлом фоне, список, оформление контента с подзаголовком и т.п.  Удобно, что при наведении на тот или иной объект вам подсвечивается соответствующий фонт.  Font Combination Tool - серсив подбора комбинации шрифтов На странице с результатами в правом верхнем углу разрешается сразу выбрать другое значение для новой выборки.  ПРИМЕРЫ УДАЧНЫХ КОМБИНАЦИЙ ШРИФТОВ ДЛЯ САЙТОВ Вот парочка популярных и эффективных решений. Ищите их по названию в онлайне (или на Google Fonts) + можете поискать в нашем архиве бесплатных шрифтов и соответствующих подборок.  Playfair Display + Source Sans Pro  Playfair Display + Source Sans Pro Игривые засечки Playfair Display отлично гармонируют с традиционным современным внешним видом, он отлично подходит для заголовков. Второй элемент Source Sans Pro при этом добавляет простоту и выдержанность.  Merriweather + Oswald  Merriweather + Oswald Задача получить стильный и простой результат здесь выполнена на 100%. Немного сжатый Oswald есть смысл использовать, когда у вас мало места для текста. Merriweather сохраняет вид контента вне времени, поэтому тот всегда будет смотреться актуально.  Montserrat + Merriweather  Montserrat + Merriweather Компоновка урбанистического и чуть более примитивного вариантов. Montserrat в меру жирный шрифт, но выглядит неформально и свободно. Merriweather больше склоняется к традиционному легко читаемому виду.  Raleway + Lato  Raleway + Lato Иногда чем меньше – тем лучше. Об этом нам регулярно напоминают успехи минималистичного веб-дизайна. Данная комбинация максимально современная, без излишеств, однако ничуть не лишена индивидуальности. Выглядит смело и свежо, не забудьте подобрать сюда яркие картинки.  Elsie + Roboto  Elsie + Roboto Кокетливый шрифт с засечками Elsie словно создан для гламурного антуража и модной стильной атмосферы. Второй компонент добавляет в пару некую практичность.  Dancing Script + Josefin Sans  Dancing Script + Josefin Sans Рукописный шрифт Dancing Script выглядит красиво и немного неформально. Вместе с Josefin Sans, обладающим элегантной геометрической формой, они создают гармоничный дует, дополняющий друг друга.  Abril Fatface + Roboto  Abril Fatface + Roboto Представьте, что вы хотите привнести в старинный и винтажный объект новые современные нотки – это как раз про фонт Abril Fatface. Новые веяния позволяют переосмыслить традиционное видение шрифта с засечками. Дабы не переборщить с акцентами, сюда подбираем чистый и строгий Roboto.  Amaranth + Open Sans  Amaranth + Open Sans Есть люди, при виде которых сразу появляется улыбка и чувство комфорта. Если спроецировать эти эмоции на шрифты, то Amaranth может показаться таким “дружелюбным” хорошо знакомым решением (пусть и с немного необычными изгибами). Легкий воздушный Open Sans добавляет ощущение структурности.  Palanquin + Roboto  Palanquin + Roboto Современный фонт Palanquin обладает блочной компоновку со своими уникальными диагональными линиями и причудливыми деталями в конце букв. Его напарник Roboto создает весьма неплохое общее впечатление, которое хорошо воспринимает и конвертируется в сети.  Sansita + Open Sans  Sansita + Open Sans У Sansita мы видим стильные плавные формы и приятный вид. Для него идеальным сочетанием является более простой и строгий Open Sans.  Итого. Эти 10 примеров комбинаций шрифтов для сайтов лишь малая часть того, что можно «замиксовать» с помощью сервиса Font Combination Tool. Начинающим дизайнерам и не только он будет весьма полезен. Если знаете еще какие-то интересные пары — присылайте названия в комментариях.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 1,
    "tag": [
      30,
      31,
      38
    ]
  }
},
{
  "model": "articles.article",
  "pk": 30,
  "fields": {
    "registration_time": "2022-07-13T14:41:53Z",
    "slug": "20-zagotovok-tem-i-bandlov-dlya-dizajnerov-frilanserov-uproshayushih-rabotu-i-dlya-vdohnoveniya",
    "is_active": true,
    "title": "20 заготовок, тем и бандлов для дизайнеров-фрилансеров, упрощающих работу и для вдохновения",
    "body": "Мы регулярно публикуем подборки отличных качественных материалов для дизайнеров (иконок, PSD, шрифтов, макетов, кистей) и онлайн сервисов, упрощающих определенные рабочие процессы. Однако есть ситуации, когда фришные дизайн-заготовки оказываются слишком простыми и не соответствуют уровню проекта и требованиям заказчика. В таких случаях разумно обратить внимание на премиальные продукты.  В данном блоге имеется серия статей о сервисе TemplateMonster со множеством полезных инструментов для фрилансеров и дизайнеров, которые помогут быстрее/эффективнее выполнять свою работу. Например недавно был пост 20 тем и плагинов Elementor или подборка адаптивных русских HTML шаблонов.  Ниже подготовили для вас еще 20 полезных материалов с этой площадки, причем значительная часть из них является бесплатными. Кстати, платные продукты оттуда в период черной пятницы (и в рамках других акций) можно купить со значительной скидкой до -50%! Кликайте по картинкам-превью для перехода на страницу для скачивания.  Stylish Minimal  Stylish Minimal  Многим дизайнерам кажется, что PowerPoint — это устаревшая программа, которой уже мало кто пользуется и вообще заказов на презентации нет. Но с развитием инфобизнеса и ростом популярности конференций спрос на этот продукт только увеличился, поэтому макет Stylish Minimal может вам пригодиться.  На самом деле создавать дизайнерское оформление в стиле чистого минимализма, когда используется 1-2 шрифта, 2 цвета и почти нет текста, также сложно, как и придумывать необычные оригинальные концепты. Здесь именно такой случай:  среди базовых цветов белый и оливковый (допускается замена на любой другой); картинки аккуратно вставлены в слайды (без рамок, эффектов и прочих деталей, которые не соответствуют принципам минимализма); есть отдельные шрифты для заголовков (курсив вполне нормально читается даже на мелких экранах) + обычный текст (прямой, без засечек). PowerPointшаблон Entorum с инфографикой  PowerPoint шаблон Entorum Среди основных фишек набора:  4 формата отображения — 16:10, 16:9, 4:3, А4 (удобно, если нужно показать презентацию на разных устройств или даже распечатать, не потеряв при этом ни один элемент); есть заготовки под слайды с аналитическими данными: графиками, схемами, таблицами, диаграммами (нужно только выбрать подходящий слайд, ввести инфу, и все само превратится в красивый формат); 800+ слайдов разработаны под разные типы контента: описание команды или проекта, визуализацию отчета с результатами работы, фото новой линейки продуктов и др; содержит векторные иконки и позволяет легко менять данные в диаграммах. PowerPoint-презентация для бизнес тематики  PowerPoint-презентация для бизнес тематики С такой классной заготовкой можно быстро и стильно оформить презентацию. Здесь есть графическое/текстовое отображение разных процессов, красочные диаграммы (если ЦА — аналитики, финансисты, они точно оценят такие слайды) и даже макет карты (немного фотошопа и получится выделить только нужные страны).  Интересный элемент — календарь с датами. Он сделан в общей стилистике и поможет донести информацию по срокам выполнения проекта. Не обошлось и без iPhone мокапа на случай демонстрации приложения на экране гаджета. Предусмотрены светлая и темная цветовые гаммы (наполнение то же самое).  Резюме Brenner Minimal Clean  Резюме Brenner Minimal Clean  Иногда даже продолжительные рабочие проекты заканчиваются и приходится искать новые. Этот инструмент поможет сделать крутое, продающее резюме в сдержанном стиле. Отлично подойдет для подачи заявки в серьезное агентство, крупную корпорацию или даже гос.учреждение.  Макет имеет 2 страницы, сделан под формат А4, поэтому его удобно распечатать. Все элементы поддаются редактированию не только через специальные программы вроде фотошопа, но и через старый и привычный Ворд (когда надо заменить только фото и текст).  Developer’s Free Toolkit  Developer’s Free Toolkit  Инструмент поможет в разработке контактной формы и пользовательских запросов в WordPress. Эти функции активно используются при создании коммерческих сайтов и частично влияют на удобство пользователей, конверсию отправления заявок/заказов и т.п. Если вы новичок в веб-разработке или, например, дизайнер среднего уровня, то с реализацией этой функциональности могут возникнуть сложности. К счастью, с Developer’s Free Toolkit вам не придется заниматься коддингом.  Если с контактной формой все более-менее понятно (с помощью редактора создаете нужный вид, подбирая количество полей, вставляя текст и т.п.), то с пользовательскими Query-запросами сложнее. Данный инструмент упростит структурирование и вывод информации на сайте: по датам, темам, тегам, категориям.  Бандл 60+ Presentation, Powerpoint , Keynote, Google Slides  Бандл 60+ Presentation, Powerpoint , Keynote, Google Slides  Главное преимущество текущего набора перед другими — здесь слайды адаптированы под 3 программы (Powerpoint, Keynote, Google Slides), поэтому можно не переживать, откроется ли презентация у коллеги с Windows, если документ разрабатывался на Mac.  Основные фишки:  на выбор есть как минималистичный дизайн, так и яркий, с большим количеством элементов; более 25 слайдов в разной стилистике и различных цветовых гаммах; имеется 2 типа формата 16:9 и 4:3; все шрифты, векторные иконки бесплатные; чтобы изменить какие-то элементы или палитру цветов, надо сделать всего пару кликов. Бандл Xmas 2019 Business Graphics  Бандл Xmas 2019 Business Graphics  Часто путь графического дизайнера начинается с создания брошюр, баннеров, открыток, сертификатов, листовок и прочих полиграфических продуктов. Готовые макеты позволяют проще и быстрее их реализовывать. Здесь собрана коллекция из таких продуктов как:  сертификаты; корпоративный стиль; брошюры; презентации в PowerPoint; анимированные баннеры; лендинг. Набор позволит выполнить срочный заказ без потери качества работы, а также не делать клиентские задания с самого нуля.  Бесплатный макет Email-рассылки и логотип фотостудии  адаптивный макет Email-рассылки  Создавать эффективные письма для рассылки тоже нужно уметь. Данный шаблон позволяет сделать эту задачу чуть проще — вам лишь надо подставить в него свои тексты и картинки.  логотип фотостудии  Нормальные логотипы стоят от 200$, а на их разработку может уйти от 5 до 20 дней (со всеми правками, доработками). Если надо срочно запускать проект и нет возможности заказать лого у специалиста, можно воспользоваться этим. Конечно, он тематический, но его можно применить и в смежных нишах:  независимый фотограф (в любой нише); фотостудия; видеостудия, монтаж; продакшен полного цикла; ретушер-фрилансер; блоггер; ассистент на фотосъемках; студии с залами для фотосессий, другое. Бесплатный образец фирменного стиля  образец фирменного стиля  Это отличная возможность дизайнерам-новичкам потренироваться в разработке фирменного стиля. Здесь есть все основные элементы: логотип, подбор цветовой гаммы, набор шрифтов, структура сайта и т.д. Каждый элемент можно заменить, удалить, отредактировать.  Следует отметить, что этот продукт полностью фришный, но он создан исключительно для обучения — автор запрещает использовать его в коммерческих целях.  Бандл обложек для Facebook  Бандл обложек для Facebook  Есть такие клиенты, которым важно максимально быстро и недорого получить результат от дизайнера и приступить к дальнейшим действиям по развитию своего бизнеса. Именно в таких случаях и практикуется использование готовых решений — вам лишь остается чуть их подредактировать под требования заказчика.  Данная заготовка позволит ускорить процесс разработки обложек для страниц и групп в Фейсбуке, т.к. в ней уже есть картинки на 10 тем: кофейня, креативное агентство, цветочный магазин и т.д.  Free Elementor PRO Templates  Free Elementor PRO Templates  Здесь представлен целый кладезь крутых фришных макетов оформления для редактора Elementor. Есть лендинги, варианты домашней и других страниц обычного сайта или интернет-магазина (товарные карточкки, ленты с акциями, блог). В каждой категории как минимум 10 примеров продуктов, а в целом их более 50.  ПЛАТНЫЕ И БЕСПЛАТНЫЕ ШАБЛОНЫ? Максимально большое количество полезных материалов, конечно, посвящено дизайнам вебсайтов. У нас есть специальный раздел, где можно сказать шаблоны под разные CMS, типы проектов, HTML-макеты и др. Несколько тысяч подобных материалов можно найти на сайте TemplateMonster, причем, если сравнивать между собой премиальные и фришные варианты, найденные там, получается следующая ситуация:  Параметры\tФришные шаблоны\tПремиум темы Возможности применения\tМакеты, в основном, универсальные, то есть подойдут под разные бизнес-задачи и ниши.\tБольшинство из них разрабатываются под конкретные ниши, максимум 1-2 смежные, так как от этого напрямую зависит функционал, структура, наполнение. Уровень дизайна\tСредний, т.к. низкий уровень TemplateMonster не пропускает.\tВысокий. Разработчикам не выгодно выпускать средненькие темплейты, если они заботятся о репутации. Работа тех.службы\tЗдесь, если что случится, придется разбираться самому.\tСлужба работает 24/7 и отвечает в течение 30-60 минут (даже если запрос поступит среди ночи). Функционал\tБазовый набор элементов и структурных блоков.\tПомимо проработанной структуры, есть кнопки с СТА, анимация, дополнительные страницы (благодарности и 404), виджеты, плагины. Разнообразие\tОбычно дизайн сайтов очень простой, минималистичный, в черно-белых тонах.\tЕсть дизайнерские решения на любой вкус: от ярких макетов до пастельных и милых. Из топовых вариантов можно выделить:  Бесплатный OpenCart-шаблон магазина мобильных  Бесплатный OpenCart-шаблон магазина мобильных  Среди основных функций тут: адаптивность, Ajax-поиск, поддержка сортировки товаров, форма контактов, Google Fonts, вишлист, сравнение продукции. Разобраться в подключении поможет документация + имеется PSD-исходник. Для главной страницы предусмотрен специальный билдер в админке. Выглядит дизайн современно, технично и вместе с тем просто для посетителя.  Intense  Intense  Многоцелевой HTML-макет, включающий в себя более 450 файлов и множество тематических темплейтов: для блога, интернет-магазина, портфолио + разные варианты шапки/футера. В набор включены PSD-файлы, бесплатные шрифты с иконками, Мега-меню, слайдеры и фотогалереи. Все это реализовано в виде структурированного «чистого» кода.  Спортэкстрим  Спортэкстрим  Этот вебдизайн создавался для магазинного движка PrestaShop (версии 1.6 или 1.7). Демо-оформление посвящено зимнему снаряжению, хотя сам темплейт может использоваться и в любых других нишах — просто подставляете свои товары и картинки. Он мультиязычный, адаптивный с полноценной тех.поддержкой. В блоге, кстати, также была статья про другие не менее красочные качественные шаблоны PrestaShop.  WordPress тема консалтингового агентства  Бесплатный WordPress дизайн консалтингового агентства  Здесь все визуально просто, но при этом функционально. В сборку включен Elementor редактор со множеством видом информационных блоков. Есть документация, SEO-оптимизация, Google-шрифты и много других полезных фишек. Распространяется бесплатно.  Multifly  Multifly  Многоцелевой Shopify шаблон с кучей интересных функций: параллакс, социальные опции, блог, баннеры, галерея, карусель товаров, отзывы, подписка, табы, строка поиска, контактная форма, Гугл-карта, мультиязычность, мультивалютность, адаптивность и еще десяток других полезных фишек. Тут также есть встроенный визуальный редактор.  Фришный HTML5 темплейт агенства  Бесплатный HTML5-шаблон агенства  Визуально тема кажется максимально простой и легкой, но для HTML-макетов это как раз нормально. На странице найдете разные типы блоков — от списка услуг и сотрудников компании до списков, колонок, блоков текст+графика и т.п. В наличии адаптивность и SEO-оптимизация.  Imperion  Imperion  Многоцелевая тема WordPress для бизнес тематики. Как видите по скриншоту выше, тут есть множество скинов оформления с разной стилистикой — выбирайте дизайн, что будет подходить вам по настроению и нише. Кроме крутого функционального редактора Elementor тут есть 8 крутых Jet-плагинов (мега меню, табы, блог, попапы и т.п.). Очень мощное решение, напоминает другой универсальный шаблон Woostroid2 для электронной коммерции.  Ketty Magento 2  Ketty Magento 2  Один из наиболее популярных представителей для этой CMS, распространяется полностью бесплатно. Основные его преимущества: кроссбраузерность и адаптивность, слайдер, фильтры и поиск товаров, зум при наведении на продукцию, улучшенная страница оплаты. Если вам хочется чего-то более функционального, то советуем посмотреть пост с 30+ лучших шаблонов Magento, который был полгода назад.  Итого. Получилось 20 классных материалов/инструментов для дизайнеров-фрилансеров, позволяющих не только вдохновиться удачными решениями, но и подходящих для реального использования. Дизайнерские заготовки помогают более быстро, эффективно организовать рабочие процессы. Помните, что наиболее выгодно покупать премиальные наборы в TemplateMonster именно в период акций/скидок.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 1,
    "tag": [
      27,
      30
    ]
  }
},
{
  "model": "articles.article",
  "pk": 31,
  "fields": {
    "registration_time": "2022-07-13T14:42:35Z",
    "slug": "besplatnye-makety-macbook-v-psd-formate-30-shablonov",
    "is_active": true,
    "title": "Бесплатные макеты MacBook в PSD формате (30+ шаблонов)",
    "body": "Подобные PSD макеты MacBook и других ноутбуков можно использовать для представления веб-дизайна сайта заказчику, дабы тот смог увидеть как именно его проект будет смотреться на экране монитора. Такая презентация имеет более привычный/приятный эффект, нежели обычная демонстрация шаблона отдельно в Фотошопе.  Аналогичный подход можно встретить и при создании приложений, когда с помощью наборов макетов Apple Watch или PSD iPhone Templates дизайнеры/разработчики показывают клиенту интерфейс будущей программы. Причем дабы не тратить лишнее время на рисование “оболочки” можно использовать уже готовые исходники. Сегодня в дополнение к прошлым темам будем рассматривать бесплатные макеты MacBook.  MacBook & Coffee Free  MacBook & Coffee Free  15 Scalable Vector of MacBook Pro  15 Scalable Vector of MacBook Pro  Преимущество набора в том, что здесь растягиваемые векторные изображения, хотя версия компьютера не самая новая.  New MacBook Mockup | Photoshop + Sketch  New MacBook Mockup | Photoshop + Sketch  Front View MacBook Pro  Front View MacBook Pro  Тут в PSD реально заменить не только слой экрана, но и фоновый.  Macbook Minimal  Macbook Minimal  Working on a MacBook in a Café  Working on a MacBook in a Café  Используемое расширение: 4911 x 3274 пикселей и 240 dpi.  White Devices Mockups (Sketch & PSD)  White Devices Mockups (Sketch & PSD)  Space-Gray MacBook  Space-Gray MacBook  MacBook Pro From Side View   MacBook Pro From Side View   16 Free New MacBook Air Mockups  16 Free New MacBook Air Mockups  Набор совместим с Фотошопом CS6+, содержит сгруппированные слои и умные объекты. Автором заявлено использование 100% векторных форм.  Vintage Photorealistic Macbook  Vintage Photorealistic Macbook  Приятные винтажные фотографии с ноутбуком. С помощью слоев сможете легко подставить свои картинки в компьютер.  Responsive Website Mock-Up  Responsive Website Mock-Up  Автор разрешает использовать свою работу не только для личных, и для коммерческих проектов. Если вам понравилось, можете отправить донат.  White Clay MacBook Pro  White Clay MacBook Pro  MacBook Air on a Table  MacBook Air on a Table  Free Macbook Pro 15»  Free Macbook Pro 15''  В архиве найдете 14 разных PSD-файла с размерами 4000×2500. Допускается изменение цвета фона, а также редактирование эффекта блика на экране.  Macbook With Cactus on Wooden floor  Macbook With Cactus on Wooden floor  В мокапе будет 1 PSD-исходник со следующими параметрами: фотка 2600 х 1712 пикселей и 72 DPI, ширина и высота самого экрана — 750 x 1334 px, есть фильтры и смарт объекты, размер архива 17 MB.  3 MacBook Pro Desk Mockups  3 MacBook Pro Desk Mockups  4 Free PSD MacBook + iPhone 6s Mockups Pack  4 Free PSD MacBook + iPhone 6s Mockups Pack  MacBook Air on Table Mockup  MacBook Air on Table Mockup  Macbook Workspace Mockup  Macbook Workspace Mockup  Тут сразу 4 разных ракурса для Макбука, файлы в формате PSD с поддержкой Smart-слоев. Общий объем 191.25 MB.  Front View iPhone X and Macbook Pro  Front View iPhone X and Macbook Pro  Free Apple MacBook Mockup  Free Apple MacBook Mockup  Macbook Photo   Macbook Photo   iPhone X and MacBook  iPhone X and MacBook  MacBook Pro Mockup  MacBook Pro Mockup  Realistic Retina Macbook Mockup Vol.3  Realistic Retina Macbook Mockup Vol.3  Free Macbook Mockup .PSD  Free Macbook Mockup .PSD  Fully Customizable Apple Macbook PSD  Fully Customizable Apple Macbook PSD  Space Gray Macbook on A Table  Space Gray Macbook on A Table  Working on Mac  Working on Mac  Это не просто картинка, а скорее генератор, куда можно загрузить свое изображение макета и получить результат.  Итого получилось 30+ бесплатных шаблонов MacBook для Фотошопа и не только (некоторые доступны и в Sketch). Мак здесь представлен в разных ракурсах: есть варианты с однотонным/заменяемым фоном, есть выполненные в виде фотографии с реальным окружением (стол, кафе, комод). Все материалы преподносятся на страницах источниках как бесплатные, но, к сожалению, некоторые авторы могут не соблюдать данное условие и частично его ограничивать — в таком случае советуем просто поискать другой мокап MacBook (благо их достаточно много).",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 1,
    "tag": [
      26,
      30
    ]
  }
},
{
  "model": "articles.article",
  "pk": 32,
  "fields": {
    "registration_time": "2022-07-13T14:43:21Z",
    "slug": "kak-sdelat-kalkulyator-dlya-sajta-bez-programmirovaniya-s-pomoshyu-stepform",
    "is_active": true,
    "title": "Как сделать калькулятор для сайта без программирования с помощью stepFORM",
    "body": "Есть несколько методов как сделать ваш сайт более удобным, привлекательным и полезным для аудитории. Один из вариантов — добавить интерактивный опрос, форму или калькулятор, которые бы помогали посетителям решать определенные задачи или давали ответы на те или иные вопросы. Кроме улучшения юзабилити это позволит увеличить показатели конверсии и продаж.  Пару лет назад подобная функциональность казалась сложным и невыгодным вложением, так как для нее необходимо было обладать знаниями в программировании либо тратить деньги на разработку. Сейчас все намного проще — всего лишь надо найти онлнайн-конструктор форм, подходящий вашим требованиям, и реализовать свой проект в нем. При этом не требуется наличие специальных знаний, все максимально доступно. В качестве примера возьмем конструктор stepFORM, с помощью которого попробуем создать ваш первый калькулятор для сайта.  Сервис stepFORM Основные преимущества платформы stepFORM:  она подходит для бизнес проектов разных тематик: сфера доставки (еды, цветов), услуги по ремонту/перевозке, проведение мероприятий, набор персонала и др.; ее могут использовать и фрилансеры, и веб-студии; в системе есть визуальный конструктор, максимально упрощающих работу пользователям; имеются решения для популярных CMS либо можно интегрировать готовый HTML-код в любую веб-страницу; доступны уведомления по email / sms; поддерживается адаптивность; есть защита от спама и некоторые другие полезные фишки (весь список ищите на их сайте). НАЧАЛО РАБОТЫ С КОНСТРУКТОРОМ Переходим на главную страницу сервиса https://stepform.io/ и нажимаем на кнопку «Создать бесплатно». Справа появится вкладка для быстрой регистрации в несколько кликов — там вводим имя, email, пароль и потом нажимаем «Создать аккаунт».  Регистрация в stepFORM После этого мы сразу переходим в панель администрирования, где можем выбрать один из двух путей:  «Создать пустую форму» — начать разработку с нуля. «Создать из шаблона» — использовать уже готовую заготовку и переделывать ее под себя. В нашем примере ниже мы разберем процесс разработки квиз-калькулятора для сферы доставки цветов, и чтобы было нагляднее, будем разрабатывать его с нуля (т.е. используем первый способ).  Создание новой формы Под термином «квиз-калькулятора» (quiz) подразумевается специальная форма (чаще всего пошаговая), которая используется для получения заказов с сайта и включает в себя: 1) выбор разных параметров по предоставляемым вами услугам; 2) предварительный просчет их стоимости; 3) поля для отправки контактов посетителя.  После определения метода создания формы сервис перебрасывает нас на страницу конструктора, где мы уже сможем начать собирать и настраивать наш проект.  Конструктор stepFORM РАЗРАБОТКА КВИЗ-КАЛЬКУЛЯТОРА В первую очередь добавим виджеты:  «Сообщение» — где укажем заголовок калькулятора. «Выбор изображений» — тут будут картинки товаров и описания к ним (также произведем настройку самого виджета, задав ему 3 колонки). Создаем квиз-калькулятор Первая страничка нашей quiz формы готова, для создания второй страницы кликнем на «+».  На следующей странице используем те же виджеты («Сообщение» и «Выбор изображений»), только для второго выберем уже 4 колонки. Вот что у нас получится:  Создаем квиз-калькулятор Следующим шагом будет добавление калькуляции стоимости товаров, для этого на каждую страницу добавим виджет «Формула» и пропишем в нем необходимые значения.  Создаем калькулятор для сайта Далее создадим общую страничку с формулами, где пользователь увидит отдельную и полную стоимость заказа.  Создаем калькулятор для сайта Далее добавим в форму шаг для сбора данных и оформления заказа. На этом этапе нам необходимо узнать:  имя/номер заказчика; имя/номер получателя; адрес получателя; дата и время доставки. Для этого воспользуемся аналогичными виджетами:  «Текстовый ввод». «Моб. телефон». «Дата и время». По итогу страница будет выглядеть так:  stepFORM - создание контактной формы Осталась самая малость — подобрать дизайн. Для этого откроем панель дизайна и определим необходимые нам цвета и шрифт.  stepFORM - задание дизайна формы На последнем этапе перейдем в «Настройки» и активируем поле «Email», чтобы мы получали данные о заказе и могли связываться с клиентами.  stepFORM - активируем Email Теперь квиз-форма полностью готова, и мы можем ее использовать. Получившийся результат из примера доступен для просмотра по данной ссылке: https://app.stepform.io/CRnQiw0.  ИНТЕГРАЦИЯ ФОРМЫ НА САЙТ Вставить квиз-калькулятор на ваш веб-проект также довольно просто, для этого необходимо перейти во вкладку «Публикация» и выбрать желаемый вариант размещения:  через Javascript код; через iFrame; или как Popup. Кстати, форму можно использовать по прямой ссылке и поделиться ею в соц.сетях. Также ее легко установить на платформы WordPress и Joomla с помощью соответствующих плагинов.  Интеграция формы stepFORM на сайт Итого. Если у вас в коммерческом веб-проекте еще нет квиз формы или калькулятора стоимости услуг, то самое время их добавить. Тем более, что как вы могли убедиться сами, в наше время это сделать совсем не сложно, и не требуется никаких знаний в области разработки. С помощью специальных конструкторов по типу stepFORM весь процесс создания будет простым и займет минимум времени. В конце концов, вы получите хорошую возможность увеличить конверсию площадки и сделать ее более полезной для своей ЦА. Кстати, в сервисе есть полностью бесплатный тариф для начинающих.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 1,
    "tag": [
      30,
      31
    ]
  }
},
{
  "model": "articles.article",
  "pk": 33,
  "fields": {
    "registration_time": "2022-07-13T14:44:57Z",
    "slug": "chto-takoe-kontent-marketing-i-pochemu-v-2022-godu-eto-dolzhen-znat-kazhdyj",
    "is_active": true,
    "title": "Что такое контент-маркетинг и почему в 2022 году это должен знать каждый",
    "body": "Вероятно, вы уже внедряете технологию контент-маркетинга. Возможно, даже не подозревая об этом. Если нет – то начнете внедрять очень скоро.  Что такое контент-маркетинг и почему в 2022 году это должен знать каждый Дата публикации: 5 февраля 2020 Дата обновления: 20 апреля 2022 Денис Савельев 85 062 Время чтения: 15 минут Контент-маркетинг, по сути, стал магистральным путем развития интернет-маркетинга в целом.  Так что же такое контент-маркетинг? Контент-маркетинг – это маркетинговая технология создания и распространения востребованного контента для привлечения целевой аудитории. Задача технологии – побудить потребителя к целевым действиям, вовлечь его в ваш конверсионный сценарий. Контент-маркетинг – это информация, полученная вашим потенциальным покупателем в нужное время и в нужном месте.  Вы думаете, что у вас хорошие цены? Но ваш клиент даже не знает об этом! Вы думаете, что у вас есть реальные конкурентные преимущества? Но ваш клиент даже не знает об этом! Вы думаете, что ваши товары и услуги – самые лучшие на рынке? Но ваш клиент даже не подозревает об их существовании! Все, что ищет ваш клиент в интернете, – это информация. Правильно поданная информация, распространенная через нужные каналы, – это и есть суть контент-маркетинга. Теперь, чтобы было более понятно, приведем пример. Вы продаете некий товар. Ваша страница буквально умоляет посетителя: ну, купи-и-и-и-и! Технологии контент-маркетинга в корне отличаются от этого. Мы берем ваш товар и товары конкурентов и делаем обзор на тему «Почему ваш товар лучше». Мы даем потребителю делать собственный выбор – какой же товар выбирать, и этот выбор должен быть в вашу пользу. Ведь ваш товар, действительно же, лучший на рынке? И самое главное: таких обзоров должно быть много. Точнее – очень много. Еще точнее – очень и очень много.  Основные преимущества контент-маркетинга: Опосредованная продажа через востребованный вашей аудиторией контент. Контент-маркетинг не работает на ваш бренд напрямую, но делает его узнаваемым. На раскрутку бренда требуется меньший бюджет, чем через классические способы рекламы. Улучшаются позиции в выдаче поисковиков. Им нравятся естественные ссылки! Увеличивается поисковый трафик за счет роста – ведь контент-маркетинг подразумевает постоянный рост на сайте количества новых материалов, а значит, увеличивается количество продвигаемых запросов. Укрепляется авторитет вашей компании или бренда, создание качественного контента сделает вас экспертом в глазах как потребителя, так и конкурентов. Контент-маркетинг – это естественно! Это не прессинг выдачи поисковиков за счет seo-ссылок. А значит, в долгосрочной перспективе это именно то, что будет востребовано поисковыми системами. Как видите, одни плюсы. Контент-маркетинг создает доверие, авторитет, которые, в свою очередь, уничтожают «сопротивляемость» клиента. Нужная информация представляет собой описание преимуществ, которые получит клиент от определенного продукта или сервиса.   Контент «рулит» в интернете, ведь потребители ищут информацию, которая может решить их проблемы. Делаем блоги для бизнеса и бренд-медиа Интересно и эффективно  Подробнее Делаем блоги для бизнеса и бренд-медиа Закат традиционной интернет-рекламы? Но почему? Почему вдруг «старая добрая» поисковая оптимизация (построенная на покупке ссылочной массы) за последние годы отошла на второй план?  В интернете «классическая» схема вписывание ключей + закупка ссылок потерпела полный провал. Поисковики научились распознавать грубые приемы сеошников, и теперь манипуляторы выдачи сидят у разбитого корыта. Бюджеты на ссылочную массу, растущие по экспоненте, – это путь «классического seo». И это путь в никуда. Людям нужно не тупое «впаривание» товара, а информация, которой они бы могли доверять. Оказывается, потребители умнее, чем было принято думать раньше. Им нужно не продавать – им нужно рассказывать о преимуществах и оставлять шанс сделать выбор самим. Контент-маркетинг выигрывает даже по сравнению с контекстной рекламой. Контекстная реклама – это реклама прямого действия. Контент-маркетинг действует исподволь и на протяжении долгого периода. Реклама в привычном понимании – это бодрый натянутый месседж без двусторонней связи с потребителем. Она навязывает, а не рассказывает.  Что касается контент-маркетинга, его цель – не собственно продажа товаров (это важно, но не на первом плане), а формирование отношений с клиентом. В первую очередь доверительных. Надо таким образом выстроить работу, чтобы люди знали вас и доверяли вам настолько, чтобы заниматься бизнесом совместно с вами или выбирать ваши товары и услуги.  Каналы распространения информации Основное оружие и инструмент контент-маркетинга – информация и только информация. Но – важное дополнение – качественная информация. Первая и основная задача, которую нужно решить, – наполнить сайт качественным контентом, но, заметьте, не просто один раз наполнить и забыть, для сайта нужно писать постоянно. Если вы встали на путь контент-маркетинга, то свернуть с него уже будет нельзя.  Второй шаг – выбирайте правильные площадки для размещения информации и грамотно продумывайте каналы ее распространения. По приоритетности мы выделяем следующие каналы распространения вашей контент-стратегии:  поисковые системы, результаты естественной выдачи; системы контекстной рекламы; email-маркетинг (ведение корпоративной рассылки по вашей тематике); социальные сети (ведение собственных групп и официальных страниц и использование других групп в качестве каналов распространения вашей информации); профильные интернет-издания по вашей тематике (и при контент-маркетинге – это будут статьи, а не «медийка»); блогосфера (ведение собственного корпоративного блога и привлечение топовых блогеров рунета к распространению вашей информации). Размещайте статьи в тематических блогах, создавайте контент-рассылку для пользователей, идите в социальные сети, если вы достаточно сильны и ставите перед собой задачу повысить узнаваемость вашего бренда и укрепить лояльность аудитории к вашей компании. Но прежде всего – подумайте о продвижении вашего сайта по трафику (а значит, по широкому семантическому ядру). Нет смысла использовать другие каналы влияния до тех пор, пока вы не решили проблему привлечения естественного поискового трафика. И здесь контент-маркетинг окажет вам серьезную поддержку. Распространение качественного, интересного целевой аудитории контента в сети – это единственный способ увеличить количество естественных ссылок на ваш сайт.  Потому что это работает Успешные примеры контент-маркетинга? Они есть, и их много.  Одним из первых в нашей практике стал интернет-магазин компании «Связной» – они сделали ставку на качественные описания товаров и сверхинформативные обзоры новинок. Именно поэтому посещаемость их сайта возросла до сотни тысяч человек в день. Они могли бы идти путем «обычного» интернет-магазина, но вместо этого превратили свой сайт в мегаинформативный портал по гаджетам, лидирующий по трафику и обгоняющий большинство СМИ по тематике. Люди приходили к ним на сайт не только (и даже не столько), чтобы купить, они приходили для того, чтобы найти нужную им информацию. И мы рады были быть к этому причастными.  После «Связного» было много проектов, для которых контент-маркетинг сыграл важную роль. Вот лишь парочка, остальные можно посмотреть в нашем разделе, посвященном ведению блога для бизнеса.  Контент-маркетинг для Едим Дома: результатыКонтент-маркетинг для EvaDrive: результатыКонтент-маркетинг для AmWine: результатыКонтент-маркетинг для Jvlife: результатыКонтент-маркетинг для Progermetik: результаты Что может быть надежнее доверительных отношений? Контент-маркетинг сейчас используют и гигантские транснациональные корпорации, и мелкие фирмы, и даже бизнесмены-одиночки. Единственная причина, по которой они это делают, – контент-маркетинг работает.  Контент-маркетинг наиболее действенен в условиях, когда обычный человек получает в день тысячу рекламных объявлений и предложений. Контент-маркетинг заставляет человека остановиться, прочитать, подумать, выбрать и купить. Да, это действительно возможно – создать маркетинговую стратегию, благодаря которой вы сможете наладить связи со своими клиентами!  Итак, если вы интересуетесь контент-маркетингом, этим новым витком эволюции в маркетинге, то мы поможем вам выстроить бизнес-стратегию для привлечения новых клиентов.  Лучше поторопиться, потому что совсем скоро можно будет сказать: если вы не занимаетесь контент-маркетингом, то вы не занимаетесь интернет-маркетингом вообще.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 4,
    "tag": [
      22,
      26
    ]
  }
},
{
  "model": "articles.article",
  "pk": 34,
  "fields": {
    "registration_time": "2022-07-13T14:47:05Z",
    "slug": "professiya-kopirajter-sozdatel-prodayushih-tekstov",
    "is_active": true,
    "title": "Профессия «копирайтер» – создатель продающих текстов",
    "body": "Это наша первая статья на texterra.ru: 20 июня 2022 года ей исполняется 12 лет. С нее началось то, что сейчас – TexTerra Daily, самое популярное медиа про маркетинг в интернете. И да, эта статья до сих пор популярна, хотя вокруг поменялось примерно все.  Профессия «копирайтер» – создатель продающих текстов Дата публикации: 20 июня 2010 Дата обновления: 20 июня 2022 Денис Савельев 9 594 Время чтения: 8 минут Если рождение журналистики в России связывают с указом Петра I от 1702 года, которым была учреждена первая русская газета «Ведомости», то рождение копирайтинга – это следствие развития рекламных технологий.  Основные задачи копирайтера – создание текстов рекламного характера, написание сценариев роликов, разработка слоганов и нейминг.  В отличие от журналиста копирайтер – довольно узконаправленный специалист, сфера его деятельности, как правило, сугубо коммерческая: копирайтер пишет тексты на заказ – для веб-сайтов, брошюр, презентаций; создает, в том числе, и объемные обзорные статьи на заданную тему, но всегда перед копирайтером стоит цель – создать текст не только качественный, но и продающий. Отсюда – характер рабочего процесса, необходимость укладываться точно в срок в соответствии с нуждами клиента, концептуальные особенности построения текстов и даже стилистические особенности.  Как работает копирайтер? Основа всего – техническое задание, созданное для копирайтера в соответствии с целями и требованиями заказчиками. ТЗ лишь обрисовывает суть задачи, творческая составляющая – в каком формате это будет подано, каким стилем изложено, какие приемы будут использованы при создании текста – целиком зависит от способностей копирайтера. Чем интереснее и свежее идеи, тем выше ценится труд копирайтера. Так, к сожалению, происходит на практике. Почему «к сожалению»? Потому что труд копирайтера должен (в идеале) оцениваться не по личным предпочтениям заказчика. Только рынок, спрос, покупатель должны оценивать этот труд. Увеличилось ли у вас количество заказов? Стали ли ваши менеджеры обрабатывать большее количество звонков? Возрос ли спрос на ваши услуги? Не поленитесь, сделайте точный анализ своих продаж до обращения к копирайтерам и после. Если увеличилась конверсия – значит копирайтер, к которому вы обратились, не зря ест свой хлеб.  В этой профессии всегда есть риск скатиться к шаблонам – использовать проверенные формулы, стандартные приемы. Ведь работать копирайтеру приходится с огромным количеством заказов, иногда, в ситуации цейтнота, сразу с несколькими клиентами в день – и желание дать голове отдохнуть, воспользоваться старым избитым приемчиком, проверенным неоднократно, иной раз берет верх.  Сегодня – во многом благодаря книгам Виктора Пелевина и Фредерика Бегбедера – сложился миф о копирайтере как о человеке, который «мало работает и много получает». Хотим развенчать этот миф. Профессиональный копирайтер – это, прежде всего, думающий специалист, к каждому заданию походящий индивидуально и нестандартно, не позволяющий себе мыслить клишированно. При этом он занят своей работой всегда – на отдыхе, по дороге на работу и с работы. Потому что любая креативная концепция требует времени на осмысление, и не всегда хорошо то, что первым приходит в голову.  Стилистические особенности текстов копирайтеров – отдельная тема. В отличие от статей, созданных для широкой аудитории журналистами – колумнистами, обозревателями, корреспондентами и т.д. – текст копирайтера четко подчиняется заданной структуре, отступления и описания здесь не могут носить случайный характер, все в «продающем» тексте копирайтера должно быть выверено до мелочей, каждая фраза отточена, стиль лаконичен, максимально информативен, а если клиент требует «красивостей», то задача хорошего копирайтера даже эти «красивости» заставить работать на одну-единственную цель – продавать услугу или продукт. Вашу услугу. И ваш продукт.  Затронем и одну из самых неприятных проблем в работе копирайтеров – это «трудные» клиенты. Таких, слава богу, не много, но все же они есть. Подчас трудно доказать заказчику, что его правки не только носят необъективный характер, но и откровенно вредят тексту и, как следствие, наносят ущерб продвижению услуги или товара. И это уже вопрос профессиональной этики: должен ли копирайтер «подстраиваться» под клиента, если видит, что вмешательство последнего вредит, или, все же, должен честно сказать заказчику, что мнение его – это мнение непрофессионала, и для достижения результата нужно довериться специалисту?  Мы считаем, что честнее предупредить заказчика обо всех последствиях его неправильных решений. А дальше уже его дело – работать с нашими копирайтерами или нет.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 4,
    "tag": [
      22
    ]
  }
},
{
  "model": "articles.article",
  "pk": 35,
  "fields": {
    "registration_time": "2022-07-13T14:48:00Z",
    "slug": "kak-postroit-smm-strategiyu-poshagovyj-plan-prodvizheniya-v-socialnyh-setyah",
    "is_active": true,
    "title": "Как построить SMM-стратегию: пошаговый план продвижения в социальных сетях",
    "body": "Начать компаниям в соцсетях нужно с малого – хотя бы не слить бюджет в трубу и наладить производство контента.   Как построить SMM-стратегию: пошаговый план продвижения в социальных сетях Дата публикации: 10 сентября 2021 Дата обновления: 13 июля 2022 Валентина Бокова 364 063 Время чтения: 16 минут С этим поможет SMM-стратегия – список правил о том, как вашему бизнесу вести себя в соцсетях.  Шаг 1: Пропишите сильные и слабые стороны вашего продукта SWOT-анализ – это резюме сильных и слабых сторон вашего бизнеса, возможностей и угроз. Когда вы сделаете такой, будет проще понять цели присутствия в интернете, определить свое место на рынке, разобраться, над чем еще надо поработать, какое УТП поставить во главу угла.  Читайте также Оформление группы «ВКонтакте»: самое подробное руководство в рунете Оформление группы «ВКонтакте»: самое подробное руководство в рунете Продвижение «ВКонтакте»: 54 совета и море полезных сервисов Продвижение «ВКонтакте»: 54 совета и море полезных сервисов Убойные посты для соцсетей: 97 идей на каждый день Убойные посты для соцсетей: 97 идей на каждый день Вот пример SWOT-анализа условной строительной компании, которая возводит экодома.  Сильные стороны  Надежные поставщики материалов. Профессионалы в строительстве. Гарантия на материалы и работы. Цена ниже средней по рынку. Возможности  Расширить ассортимент. Выйти в новый регион. Коллаборация с банками. Слабые стороны  Строительство домов только из дерева. Бывают перебои с доставкой стройматериалов. Мало кейсов. Есть плохие отзывы в сети. Слабые сообщества в социальных сетях. Угрозы  Много сильных конкурентов в сегменте, в будущем станет еще больше. Рост цен на материалы. Изменение экономической ситуации, когда людям сложнее решиться на крупные покупки. Изменения алгоритмов социальных сетей. Продвинем ваш бизнес в соцсетях Быстро и эффективно  Подробнее Продвинем ваш бизнес в соцсетях Шаг 2: Определитесь с целями Теперь нужно определить цели, которых мы хотим достичь с помощью SMM. В качестве основной задачи нужно выбрать что-то одно и поставить это во главу угла. Учтите, что выбранная цель будет влиять буквально на все: на контент, настройки таргетированной рекламы, метод общения с аудиторией и так далее.  Вот какими могут быть ваши цели:  ROI – снизить или покрыть расходы на ведение сообществ в социальных сетях; трафик – увеличить количество переходов на сайт; прибыль – продать больше товара; PR – повысить узнаваемость бренда; лояльность клиентов – усилить доверие между брендом и покупателями; масштабирование – запустить новый продукт, услугу, расширить рынок сбыта. Когда большая цель выбрана, раздробите ее на этапы. Так будет проще корректировать стратегию в случае каких-то изменений. С мелкими задачами проще работать: их легче понимать, корректировать и достигать.  Если цель – продать больше товара, то подцели будут выглядеть примерно так:  продумать дизайн и наладить контент; протестировать рекламные кампании и площадки; привлечь новых подписчиков; увеличить продажи до... (количество товара в единицах или денежном выражении) или на… (указать проценты от текущего количества продаж). Цели могут быть разными, но правила их постановки одинаковые.  Конкретность. Что сейчас важнее: подписчики (чтобы о вас узнали) или клиенты (чтобы выросли продажи)? Измеримость. Сколько нужно подписчиков, целевых обращений, заказов? На какую прибыль надо выйти? Отвечайте на этот вопрос, учитывая первый принцип постановки цели. Ограниченность по времени. За какое время нужно достичь цели? Достижимость. Ставьте реальные цели. Не ждите, что через месяц вы получите всемирную известность и соответственное количество лидов. Поставить реальную цель поможет специалист TexTerra по продвижению в социальных сетях.  Так может выглядеть ваш план целей и задач на 6 месяцев:  Большая цель  Цели на 6 месяцев  Задача на 6 месяцев  Продать больше домов  «ВКонтакте» – 100 000 подписчиков.  «Одноклассники»– 50 000 подписчиков.  «ВКонтакте». Наладить выпуск контента: 3 поста в день + stories. Сменить «упаковку» группы. Запустить таргет. Заказать рекламу в нишевых сообществах.  «Одноклассники». Наладить выпуск контента: 3 поста в день. Сменить «упаковку» группы. Запустить таргет. Заказать рекламу в нишевых сообществах.  Шаг 3: Проведите анализ конкурентов и целевой аудитории Проследите, какой стратегии ведения соцсетей придерживаются ваши конкуренты. Удобнее всего это делать с помощью специальных сервисов.  Узнайте, какие идеи сработали у конкурентов, и адаптируйте их под свою рекламную кампанию. Это поможет сэкономить на продвижении, лучше узнать своих клиентов и правильно составить стратегию. Анализ конкурентов нам нужен, чтобы оттолкнуться от того, какой тип контента у них заходит или не заходит.  Например, у клиентов есть постоянные рубрики: видеообзоры товаров, интересные факты, ответы на часто задаваемые вопросы... Мы видим хороший фидбэк, много лайков, комментариев на некоторые форматы.  Наша задача – не скопировать идею, а вдохновиться ею и сделать что-то свое. Например, тоже снять видео, но не о товаре, а о компании. Мы берем формат и адаптируем его под себя, улучшаем.  Кроме того, не нужно воспринимать статистику конкурентов слишком буквально. Иногда у одного бизнеса может зайти такой формат, который не заходит у другого. Нам важно провести анализ, найти тенденции и отталкиваться от них.  Контент конкурентов – подсказка для нас, а не шпаргалка, из которой можно дословно списать.  Проверьте показатели соцсетей конкурентов, чтобы примерно понимать, к чему нужно двигаться. Если в рамках географии вашей работы даже у самых сильных конкурентов не больше 10 000 подписчиков и низкая вовлеченность, не стоит рассчитывать на миллионную аудиторию. Да и действительно ли она вам нужна? Целевая аудитория: зачем знать своего клиента Целевая аудитория: зачем знать своего клиента  Шаг 4: Найдите каналы продвижения и следите за трендами Каналы. Вы проанализировали конкурентов и целевую аудиторию? Значит, уже знаете, где «сидят» ваши потенциальные клиенты. Чаще всего сегодня это «ВКонтакте», иногда в связке с ним идут «Одноклассники», а теперь, возможно, еще и TenChat.  Тренды. Попробуйте ньюсджекинг и в целом занимайтесь ситуативным маркетингом – создавайте контент в связке с актуальными явлениями. Отслеживайте резонансные, хайповые истории и адаптируйте их под свой продукт. Маленький лайфхак: смотрите, как делают другие, вдохновляйтесь и делайте еще круче.  Шаг 5: Создайте креатив Креатив – это фраза, которая объединяет всю концепцию бренда. Она простая, понятная, и ее легко интегрировать во все каналы продвижения.  Например, фразы «...для всего остального есть Mastercard» и «...пока течет мой любимый кетчуп» короткие, запоминающееся и универсальные: их можно привязать практически к любой повестке.  Шаг 6: Сделайте качественный контент Вы провели анализ аудитории и выяснили ее интересы, желания. Теперь продумайте концепцию сообщества: интернет-журнал, блог с полезной информацией, личный бренд эксперта.  Создайте контент-план. Главное, чтобы посты были полезными для подписчиков и легко воспринимались.  Публиковать «как можно больше» и надеяться только на количество – плохая стратегия. Лучше уделите время не количеству, а качеству. Бюджет, выигранный на сокращении числа постов, пустите в промо.  Читайте также: Поиск «своих», борьба с хаосом и спасательный круг: зачем на самом деле нужен контент-план  Шаг 7: Продвигайте услуги в тематических сообществах и у лидеров ниши Реклама у блогеров – один из самых эффективных способов продвижения. Блогеры ориентированы на конкретную нишу, считаются отраслевыми экспертами, тематическими специалистами, и у них есть преданная фан-база. К их советам прислушиваются подписчики, среди которых есть и ваши потенциальные покупатели.  Реклама в сообществах – найдите сообщества, где сидит ваша аудитория, и размещайте посты там. Советуем планировать размещение рекламы сразу в нескольких пабликах.  Шаг 8: Создайте вирусный контент и запустите конкурсы Вирусный контент. Никто не знает, «завирусится» идея или нет – никто еще не придумал универсального решения, хотя попытки были. Чем больше разнообразного контента вы делаете, тем выше шанс один раз «попасть в яблочко» и разом окупить все неудачи: пользователи начнут сами делиться вашими постами со знакомыми.  Конкурсы. Хороший конкурс принесет не только энное количество лайков и репостов, но и привлечет новую аудиторию, а заодно познакомит ее с вашими услугами и концепцией.  Конкурсов много не бывает, если большие охваты и рост аудитории – ваша цель  Шаг 9: Контролируйте успешность стратегии Большая аудитория – это здорово, но учитывать только рост подписчиков, оценивая качество SMM-продвижения, нельзя.  Охваты. Важно, чтобы вашу публикацию увидело как можно больше потенциальных клиентов. Чем лучше пользователи реагируют на ваш пост, тем больший охват дает соцсеть. Клики. Они помогают понять, что интересует пользователей, как они перемещаются по вашей маркетинговой воронке. Органическая и платная вовлеченность. Например, во «ВКонтакте» хороший контент поможет добиться органической вовлеченности, но это работает не для всех соцсетей. Настроение. Показывает, как пользователи реагируют на ваш контент, бренд или хештег, какие эмоции вызывают у них ваши публикации, считают ли они их оскорбительными, и, если да, то почему? Если стратегия не работает Если вы продумываете стратегию впервые и в момент реализации увидели несостыковки, не пугайтесь.  Стратегия в любом случае должна регулярно пересматриваться, корректироваться и улучшаться. Новичку придется попотеть и набить шишки, прежде чем продвижение станет эффективным!",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 4,
    "tag": [
      22
    ]
  }
},
{
  "model": "articles.article",
  "pk": 36,
  "fields": {
    "registration_time": "2022-07-13T14:50:18Z",
    "slug": "kak-zarabatyvat-na-bloge-polnyj-spisok-sposobov-monetizacii",
    "is_active": true,
    "title": "Как зарабатывать на блоге: полный список способов монетизации",
    "body": "Не каждый блогер готовит публикации под пальмой с ноутбуком. Да и не каждый  может купить себе на доходы от блога этот самый ноутбук... Ладно, давайте начистоту: доходы большинства блогеров не позволяют оплатить даже хостинг и домен.  Как зарабатывать на блоге: полный список способов монетизации Дата публикации: 1 декабря 2016 Дата обновления: 7 июля 2022 Дмитрий Дементий 77 792 Время чтения: 54 минуты Проблема не в отсутствии инструментов монетизации и даже не в неумении их использовать. Большинство блогеров по той или иной причине не может сделать веб-журнал, который можно монетизировать. Вы не заработаете на ноутбук под пальмой, если повесите блок AdSense на сайт с посещаемостью 100 уников в сутки.  Тем не менее в этой статье пойдет речь о способах монетизации блога. Вы узнаете, когда и какой блог можно монетизировать, какие инструменты использовать для заработка, а от каких держаться подальше. Кстати, статья будет полезна владельцам предприятий, а не только потенциальным вебмастерам-манимейкерам.   Больше того: предпринимателям от сохи проще извлекать прибыль из публикаций в интернете, чем чистым инфобизнесменам.  Читайте также Продвижение сайта в поисковых системах: 55 шагов, которые позволят вам выйти в топ Продвижение сайта в поисковых системах: 55 шагов, которые позволят вам выйти в топ Что такое семантическое ядро и как его составлять Что такое семантическое ядро и как его составлять 96 причин не хоронить SEO – чек-лист по оптимизации сайта 96 причин не хоронить SEO – чек-лист по оптимизации сайта Как правильно выбрать тематику блога Если у вас уже есть посещаемый и востребованный блог, пропустите этот небольшой раздел. Если вы только планируете создать журнал, информация о выборе тематики вам пригодится.  Вы наверняка слышали про дорогие и дешевые, перспективные и не очень тематики. Действительно, при прочих равных коммерческий блог о финансах или медицине приносит больший доход, чем развлекательный журнал о знаменитостях. Но ни в коем случае не выбирайте тематику блога по средней стоимости клика в «Директе» или по популярности информационной ниши.  Помните, хороший и посещаемый блог в дешевой и непопулярной тематике в девяти случаях из десяти принесет больший доход, чем непосещаемый журнал в дорогой тематике. Это не значит, что для заработка на блоге нужно уходить от конкурентных тематик. Для заработка неважно, о чем ваш журнал. Для заработка важно, чтобы он был хорошим и посещаемым.  Хотите главный рецепт хорошего блога, который можно будет монетизировать? Тематика должна интересовать автора. Тогда блогер будет погружаться в каждую тему и нарабатывать экспертизу. Тогда он будет месяцы и годы писать, не оглядываясь на низкий CTR рекламных блоков. Тогда блог будет интересным для читателя.  Лет пять назад я сделал блог о финансах. Выбрал тематику по двум причинам. Во-первых, она дорогая. Во-вторых, я несколько лет работал в финансовых организациях, поэтому у меня были знания в этой области.  Меня хватило примерно на 30 постов типа «Как правильно оформить КАСКО» и «Что нужно знать о страховании жизни». Потом интерес к тематике пропал. Я понял, что мне интереснее читать условный MOZ, чем условный Bloomberg.  Писать о страховании стало скучно. AdSense приносил несколько центов в сутки. Поэтому я не нашел ни одной причины, чтобы продлить хостинг.  Свой урок я выучил: нельзя выбирать тематику только из-за высокой цены клика. В идеале журнал должен быть о том, о чем вы сможете писать долго. О том, что у вас болит, зудит, вызывает постоянный и долговременный интерес. Этого зуда и интереса должно хватить как минимум до появления другого источника мотивации: финансового. Еще лучше, чтобы интерес к тематике сохранялся постоянно.  Продвинем ваш бизнес В Google и «Яндексе», соцсетях, рассылках, на видеоплатформах, у блогеров  Подробнее Продвинем ваш бизнес Когда можно монетизировать блог Однозначного ответа на этот вопрос нет. Возможность заработать на веб-журнале зависит от тематики и выбранного способа монетизации. Например, в дорогой коммерческой нише несколько сотен уникальных посетителей в сутки могут обеспечить вам приличный доход. А в развлекательной тематике и нескольких тысяч уников в сутки может не хватить для приличного заработка.  Теоретически вы можете получать доход с первых дней существования блога. Например, стартовая публикация может привести в журнал посетителей, часть из которых станет вашими клиентами.  Если вы выбрали рекламную модель монетизации, первые читатели могут просматривать коммерческие блоки и приносить вам первые деньги. Многие системы рекламы не предъявляют требований к посещаемости площадок.  На практике монетизация блога имеет смысл после достижения определенного уровня посещаемости. Сколько уников в сутки должно приходить на сайт, чтобы появился смысл в публикации рекламы?  Выбирать ориентир вам придется самостоятельно. Учитывайте тематику, особенности проекта, поведение пользователей на сайте. Обратите внимание на требования к посещаемости, которые существуют в РСЯ. Помните, 500 уников в сутки — это порог допуска в одну из рекламных систем. Они не гарантируют вам возможность всегда работать на шезлонге с лэптопом на коленях под пальмами.  Поступите так: выберите ориентир, после достижения которого по вашему мнению можно заниматься монетизацией блога. До достижения целевого показателя думайте о развитии ресурса.  Не вешайте рекламу на журнал с посещаемостью 10 или 100 человек в сутки. Почему? Заработанные копейки могут стать очень сильным демотиватором. Вы выполните несколько арифметических действий и увидите, что для ноутбука под пальмами вам не хватит не только тысячи, но и 10 тыс. уников в сутки. Вы подумаете, что если за год добились посещаемости 150 человек в день, то до 10 тыс. придется вести блог еще лет 15. Вы не захотите ждать так долго и бросите писать.  Еще одна причина: вместо создания контента и развития блога вы будете тратить время на эксперименты с рекламными блоками.  По-хорошему, если вас интересует заработок, к блогу нужно относиться как к бизнес-проекту. То есть вы должны запланировать, какой доход или прибыль должен приносить журнал. После этого нужно рассчитать, какие показатели посещаемости и конверсии требуются для достижения целевого дохода.  Отложите расчеты до рассмотрения конкретных инструментов монетизации. Это повысит точность бизнес-планирования.  Полный список способов монетизации блога Есть только два реальных способа монетизации веб-журнала, поэтому список получился хоть и полным, но очень коротким. По большому счету, блог можно монетизировать такими способами:  Продажей рекламы. Участием в реальном бизнесе. Подробнее эти модели будут рассмотрены ниже. Есть и альтернативные способы монетизации. Но их не стоит включать в список, так как здравомыслящий блогер вряд ли будет рассматривать их всерьез.  Например, к альтернативным и далеким от реальности инструментам монетизации относится сбор пожертвований, простите, краудфандинг. Вы наверняка видели на страницах блогов просьбы авторов пожертвовать любую сумму, так как они старались.  Черт, этот способ использует Джимми Уэйлс, и у него все получается. Почему бы вам не включить инструмент в бизнес-план при запуске блога? Для ответа на этот вопрос самостоятельно сравните масштабы и значимость вашего журнала и «Википедии» для веб-сообщества. Сравнение вас не убедило? Тогда попробуйте: попросите аудиторию поддержать блог. Вам пригодится виджет формы для приема благотворительных взносов от «Яндекс.Денег». Еще один альтернативный способ монетизации — платная подписка. К нему также относится продажа созданных из публикаций в журнале инфопродуктов. Этот способ еще менее реальный, чем сбор пожертвований. Почему?  Человека ежесекундно атакует контент. Информация буквально заваливает людей с головой. Издания сражаются за каждый переход из лент социальных сетей, со страниц поисковой выдачи, из агрегаторов новостей и RSS-фидов. У людей есть огромный выбор бесплатного качественного контента. Зачем им покупать подписку на ваш блог?  Если у вас действительно есть ответ на этот вопрос, попробуйте монетизировать блог с помощью платного доступа. Ниже вы найдете успешный пример использования этого подхода к монетизации.  Есть одно условие. Чтобы модель сработала, толпы посетителей вашего пока еще бесплатного блога должны хотя бы один раз положить сервер хостера.  Кстати, скоро качественного бесплатного контента будет еще больше. Роботы уже пишут романы и выигрывают литературные конкурсы. Поэтому не рассматривайте платную подписку на блог в качестве реального способа монетизации. Лучше уделите внимание пока еще работающей рекламной модели и всегда перспективному участию в рынке.  Как заработать на блоге с помощью рекламы Реклама — не самый удачный способ монетизировать блог. Обратите внимание на иллюстрацию.  Как зарабатывать на блоге Пятая часть посетителей texterra.ru использует блокировщики рекламы типа AdBlock. Вы собираетесь зарабатывать на рекламе в блоге, а каждый пятый пользователь установил программу, которая прячет практически все объявления. Но даже это не главная проблема рекламной модели монетизации.  Основной блокировщик рекламы по умолчанию работает в голове большинства пользователей, которые будут просматривать ваш блог. Речь идет о невосприимчивости к рекламе или рекламной глухоте. Из-за избытка коммерческих сообщений пользователи отфильтровывают практически все коммерческие сообщения до того, как они попадают на уровень сознания.  Баннерная слепота делает рекламу на вашем сайте невидимой для подавляющего большинства посетителей. Из-за этого средний CTR онлайн-объявлений всех форматов составляет жалкие 0,06 %. Это данные HubSpot и Display Benchmark Tools.  Все-таки хотите зарабатывать с помощью рекламы? Возможно, попробовать стоит, так как рекламодатели, которые предпочитают заказывать рекламу у блогеров напрямую. Ниже вы найдете информацию об одном из блогеров, который таким образом очень неплохо зарабатывает. А пока начните с систем контекстной рекламы.  Контекстная реклама Контекстные объявления обеспечивают рекламодателям и издателям CTR выше среднего по рынку. Секрет эффективности заключается в следующем: рекламная информация встраивается в информационный контекст страницы. То есть система показывает посетителям сайта объявления, соответствующие их текущему интересу. Например, если пользователь читает статью «Как выбрать велосипед», в рекламном блоке он с высокой долей вероятности увидит рекламу велосипедов.  Обратите внимание на системы контекстной рекламы от Google и «Яндекса».  Google AdSense Вы можете опубликовать рекламные блоки Google AdSense сразу после создания блога. Система контекстной рекламы Google принимает рекламные площадки без ограничений по посещаемости. Блог должен соответствовать стандартным правилам.  Чтобы опубликовать рекламу, выполните следующие действия:  Зарегистрируйте аккаунт в Google Adsense. Добавьте блог в систему в меню «Настройки – Мои сайты». Выберите подходящий рекламный блок в меню «Мои объявления». Скопируйте код и добавьте его на сайт. Чтобы добавить код объявления в блог на WordPress, воспользуйтесь стандартным виджетом «Текст», штатным плагином от Google, альтернативными плагинами для вставки кода типа WP Insert Code. Если ваш дизайн-шаблон имеет соответствующую функциональность, вставьте код через меню управления темой.  Как зарабатывать на блоге Официальный плагин Google AdSense для WordPress автоматически анализирует установленный дизайн-шаблон и предлагает оптимальное расположение рекламных блоков. С помощью этой надстройки вы можете опубликовать объявления в течение минуты.  Сколько можно заработать с помощью Google AdSense Манимейкеры с «Серча» утверждают, что средний CTR рекламных блоков AdSense в рунете составляет от 1 до 5 %. Их коллеги с англоязычных форумов считают CTR 1,5 % хорошим показателем.  Стоимость перехода зависит от тематики. Для развлекательных сайтов средний показатель составляет от 1 до 5 центов за клик. Для сайтов строительной тематики средняя стоимость перехода составляет от 10 до 20 центов. Переход на сайтах об автомобилях и IT приносит владельцам несколько десятков центов.  Информация о стоимости перехода получена с помощью анализа сообщений на популярных в рунете форумах.  Обратите внимание, показатель CTR можно считать по-разному. Представьте, что ваш блог посещает 1000 человек в сутки. Они просматривают в среднем по три страницы. Это обеспечивает вам 30 переходов по рекламным объявлениям.  Google AdSense учитывает кликабельность на основании количества просмотренных страниц. То есть ваш CTR равен 1 %: 30*100/3000. Некоторым вебмастерам удобнее считать CTR на основании количества посетителей. В этом варианте показатель составит 3 %: 30*100/1000.  Рекламная сеть «Яндекса» Стать участником РСЯ сложнее, чем пользоваться Google AdSense. К стандартным требованиям к сайтам все еще крупнейший поисковик рунета добавил порог посещаемости. В систему принимаются сайты, посещаемость которых составляет не менее 500 уников в сутки. Чтобы опубликовать партнерский блок «Яндекс.Маркета», нужно добиться посещаемости 1000 человек в сутки.  Чтобы опубликовать контекстную рекламу от «Яндекса», заполните анкету партнера и добавьте сайт в систему. После одобрения заявки вы сможете выбрать внешний вид объявления и добавить код на сайт. Это можно сделать с помощью стандартного виджета «Текст», плагинов для вставки кода типа WP Insert Code. Функциональность некоторых тем позволяет опубликовать объявление в меню управления шаблоном.  Как зарабатывать на блоге Сколько зарабатывают блогеры с помощью РСЯ Пользователи «Серча» говорят о средней кликабельности объявлений 2-3 %. Показатель варьируется в зависимости от тематики ресурса, количества объявлений на странице, расположения блоков.  В среднем вознаграждение за переход составляет от нескольких рублей до нескольких десятков рублей. Конкретный показатель зависит от тематики.  В целом РСЯ обеспечивает партнерам более высокую стоимость клика по сравнению с Google AdSense. Но объявления рекламной системы Google обеспечивают более высокую кликабельность. Поэтому AdSense и РСЯ приносят блогерам и владельцам сайтов приблизительно одинаковый доход.  РСЯ и Google AdSense фактически делят рынок контекстной рекламы рунета на двоих. Если у вас англоязычный блог, в качестве альтернативы AdSense вы можете использовать объединенную рекламную сеть Yahoo! и Bing. В рунете в качестве альтернативы лидерам рынка можно использовать систему Relap.  Как и где сейчас можно заработать на коротких видео: подборка площадок Как и где сейчас можно заработать на коротких видео: подборка площадок  «Умная» система демонстрации объявлений Relap Сервис Relap.io позиционирует себя в качестве смарт-системы монетизации сайтов. По утверждению разработчиков, Relap использует алгоритмы машинного обучения и big data, чтобы определить предпочтения пользователей. Система показывает каждому посетителю сайта контент, который он хочет видеть. Благодаря этому средний CTR блоков Relap составляет 17,8 %.  Владельцы блогов с помощью Relap могут решать две задачи. Первая — улучшение поведенческих метрик. Блоки Relap увеличивают количество просмотренных страниц на посетителя и продолжительность сессий.  Как зарабатывать на блоге Вторая задача — монетизация трафика. В блоках Relap можно демонстрировать рекламу. Вы будете получать вознаграждение за каждый переход читателя по платной ссылке.  Чтобы воспользоваться Relap, зарегистрируйтесь в системе. Укажите домен и добавьте предложенный системой скрипт в хедер сайта. Если ваш блог работает на WordPress, это можно сделать с помощью плагина WP Insert Code.  Как зарабатывать на блоге В панели управления Relap выберите раздел «Виджеты». Включите подходящий виджет. Нажмите на шестеренку, чтобы настроить его внешний вид и получить код.  Как зарабатывать на блоге Установите блок Relap в сайдбар блога с помощью стандартного виджета WordPress «Текст». Дождитесь, пока система просканирует сайт и начнет показывать ссылки на похожие публикации. После этого включите монетизацию в соответствующем разделе панели управления Relap.  Эффективность Relap В Сети есть положительные отзывы о Relap от представителей популярных ресурсов, включая AdMe.ru, РИА Новости, «Лайфхакер». Издатели сообщают об улучшении поведенческих метрик и высоком CTR блока рекомендаций.  Пользователи «Серча» относятся к Relap.io с недоверием. На форуме даже есть сообщения о проблемах с выплатами. Впрочем, участники манимейкерских сообществ настороженно относятся ко всему новому.  Партнерские программы Партнерские программы работают так: вы публикуете в блоге рекламный блок или ссылку. Если пользователь после перехода по ней совершает целевое действие, вы получаете вознаграждение. Например, англоязычные блогеры активно пользуются для монетизации ресурсов партнерской программой Amazon.  Как зарабатывать на блоге Если ваш журнал рассчитан на англоязычную аудиторию, смело используйте эту партнерку. Если вы работаете для русскоязычной аудитории, вам подойдут перечисленные ниже партнерские программы:  «Яндекс.Маркет». Участники РСЯ могут установить контентный API и зарабатывать на переходах пользователей в магазины. Чтобы использовать партнерку, блогер должен обеспечить посещаемость журнала не менее 1000 уников в сутки. Leads.su. Партнерская программа для блогов финансовой тематики. В программу принимаются ресурсы с посещаемостью от 100 человек в сутки. Работает реферальная программа. Aviasales. Партнерская программа для блогов туристической тематики. Комиссионное вознаграждение блогера достигает 70 % от суммы сделки. Есть реферальная программа. Партнерские программы хостинг-провайдеров. Практически все операторы услуг хостинга предлагают вознаграждение за рефералов. Обратите внимание на Reg.ru, Agava, HOSTiQ и других игроков рынка. Игровые партнерки: Welcome Partners, Admitad, LiveGames, RBK Games и другие. Партнерские программы FOREX-тематики: ForexClub, Alpari и другие. Адалт-партнерки. Эффективность партнерских программ Блогеры отзываются о партнерских программах по-разному. Некоторые авторы считают партнерки лучшим способом монетизации. Большинство считает инструмент неэффективным или использует его для побочного заработка.  В англоязычном сегменте блогосферы партнерская программа Amazon считается палочкой-выручалочкой и самой реальной альтернативой AdSense. Ее активно используют блогеры, которые пишут о персональной электронике, косметике и парфюмерии, одежде.  В русскоязычной блогосфере негативных отзывов о партнерских программах крупных ритейлеров больше, чем позитивных.  В чем проблема монетизации блога с помощью партнерских программ? В рунете много партнерок скомпрометированных или компрометирующих тематик: адалт, казино, онлайн-игры. Такие программы приносят доход блогеру, но ухудшают пользовательский опыт и снижают качество журнала.  Чтобы достойно зарабатывать с помощью партнерских программ с хорошей репутацией, блог должен быть посещаемым. Кроме того, тематика журнала должна совпадать с тематикой партнерской программы.  Другие сервисы монетизации блогов Представленные ниже сервисы позволяют блогерам зарабатывать на продаже рекламы. Эти ресурсы выступают в качестве посредника между рекламодателями и авторами.  Вы можете воспользоваться такими сервисами:  Rotaban. Биржа баннерной рекламы. Блогеры и владельцы сайтов с форума Searchengines считают, что контекстная реклама приносит больший доход, чем публикация рекламы с биржи. По каким-то причинам в систему Rotaban не принимают сайты на https. Rotapost. Брат-близнец Rotaban. Блогеры зарабатывают на публикации постов со ссылками. Sape.ru. Автоматизированная система продажи рекламы и ссылок. Есть еще биржа ссылок Gogetlinks, биржа обзоров Getgoodlinks, биржа статей Miralinks. Blogun. Блогеры получают плату за публикацию постовых ссылок и обзоров. Advmaker. Биржа баннерной рекламы, кликандеров, видеорекламы. Advertur. Биржа RTB-рекламы. Nolix. Сервис позволяет транслировать рекламу с помощью рекламной строки. . Система рекламы с оплатой за клики. Владельцы блогов могут публиковать стандартные рекламные блоки, а также пользоваться более агрессивными инструментами: тизерами и pop-under’ами. Что общего у перечисленных сервисов? Они упрощают реализацию рекламной модели монетизации, но это не главное. Автор, который ценит свой блог, никогда не воспользуется данными и другими подобными системами. Почему?  Продажа ссылок, постовых, публикация платных обзоров, использование тизеров, поп-апов и поп-андеров и других агрессивных и манипулятивных форматов — это отличный способ угробить веб-журнал. Вы готовы продать за несколько рублей свою репутацию, лишиться доверия аудитории, получить санкции поисковых систем?  Да, в списке есть несколько систем, которые используют или когда-то использовали солидные ресурсы. Почему бы не опубликовать баннеры от Advmaker или тизеры от Direct/Advert?  Задайте себе другой вопрос: почему рекламодатели публикуют объявления не в «Директе» и AdWords, а в альтернативных системах? Скорее всего, они хотят сэкономить или привлечь трафик на сайты, которые не пустили в системы контекстной рекламы крупнейших поисковиков. Стоит ли сотрудничать с такими рекламодателями?  Как зарабатывать на блоге Эффективность сервисов монетизации блогов Сервис Direct/ADVERT предлагает блогерам рассчитать потенциальный доход с помощью .  В блогосфере и на форумах вебмастеров много противоречивых отзывов о сервисах монетизации. Вот их суть коротко: заработать можно, но вы создавали блог не ради нескольких десятков рублей в месяц.  Прямая продажа рекламы Если вы пользуетесь Google AdSense или другими системами, часть каждого платежа от рекламодателя оставляет себе посредник. Чтобы ни с кем не делиться, вы можете продавать рекламу напрямую. Так поступают крупные издания и авторы популярных блогов. В качестве примера обратите внимание на «Лайфхакер», «Ленту.ру» или Shakin.ru.  Кстати, никто не мешает вам одновременно публиковать блоки «Директ» или AdSense и баннеры от прямых рекламодателей.  С преимуществами прямого взаимодействия с рекламодателями понятно: вы не платите посредникам. Есть ли какие-то проблемы? Конечно.  Реклама от «Яндекса» или Google обычно встроена в контекст страницы. Тематика объявления от прямого рекламодателя может не совпадать с тематикой блога.  Например, вы пишете об автомобилях, а прямой рекламодатель покупает у вас место под рекламу бытовой техники. В чем проблема? Выпадение коммерческого сообщения из контекста ухудшает пользовательский опыт и снижает эффективность объявлений.  Как зарабатывать на блоге Еще одна проблема: большинство рекламодателей хочет, чтобы реклама была как можно выше и как можно больше. Вам будет сложно продать объявление в конце статьи. Большие и яркие баннеры в верхней части экрана могут не понравиться пользователям и поисковым системам.  Вам будет сложно продать рекламу, если ваш блог еще не достиг популярности и посещаемости, сравнимой с «Лайфхакером». Посредники позволяют публиковать объявления даже на блогах с нулевой посещаемостью.  Берем натурой: монетизация без монетизации Этот способ заработка широко распространен среди блогеров. Вот схема: производитель или продавец присылает продукт популярному автору. Владелец блога некоторое время пользуется вещью, а потом пишет отзыв. Обычно товар остается у блогера. Натуральный заработок используют владельцы журналов разных тематик, но особенно популярна схема у бьюти-блогеров.  Как зарабатывать на блоге Стоит ли называть модель «товар за обзор» монетизацией или заработком? Это скорее риторический вопрос. Не теряет ли блогер доверие аудитории? Если автор сохраняет объективность, репутация не страдает. Вопрос в том, сможет ли блогер быть объективным, когда магазин или производитель присылает ему гору тестеров и несколько тюбиков чудодейственного крема.  Что нужно знать о рекламной модели монетизации В рамках рекламной модели монетизации можно использовать еще сотни инструментов. Их физически невозможно перечислить в одной статье, да это и не имеет смысла. Важнее понять другое — с помощью рекламы монетизировать блог сложно. И с каждым днем заработать будет труднее.  Эффективность коммерческих объявлений падает. Рекламодатели сокращают бюджеты. Доходы издателей снижаются.  Вот мнение генерального директора «Текстерры» Дениса Савельева о рекламной модели монетизации веб-проектов:  — Рекламная модель для любого проекта — это от безысходности. В целом такая модель отмирает. По всему миру. Закономерность такая (на мой взгляд) — прибыльный бизнес рождается на стыке онлайна и офлайна. Бывают исключения, но в целом — так.  Чтобы окупить издержки на серьезный веб-проект, нужно влезать в рынок.  Войти в рынок: монетизация для серьезных блогеров Участие в рынке — единственная реальная альтернатива рекламной модели монетизации блога. Рыночная схема работает так: блогер делает то, о чем пишет, и получает за это деньги. Здесь возможны два варианта.  Первый: человек сначала делает какой-то бизнес. Это может быть автомастерская, интернет-магазин, производственное предприятие, частная клиника. Потом бизнесмен создает блог, с помощью которого показывает экспертизу и привлекает клиентов. За примерами далеко ходить не надо, правда?  Второй вариант: человек создает блог, из которого вырастает бизнес. Например, если блогер пишет про косметику или народные музыкальные инструменты, он может открыть интернет-магазин косметики или наладить производство свирелей и дудок.  Универсальные рецепты по превращению блога в бизнес не имеют смысла, так как в каждой нише действуют свои законы и правила. Поэтому обратите внимание на успешные примеры превращения веб-журналов в прибыльные предприятия. Возможно, они вас вдохновят и подскажут способ действия.  Локалс: из блога о недвижимости в сервис для арендаторов и арендодателей Сервис аренды квартир без комиссии The Locals вырос из блога о недвижимости. Авторы в качестве эксперимента «прикрутили» к веб-журналу возможность публиковать объявления о сдающихся квартирах. Потом они обеспечили актуальность базы арендодателей и предложили потенциальным арендаторам платный доступ. Подробную историю проекта можно найти здесь.  В данном случае предприниматели создали на базе блога успешный онлайн-сервис. Они не стали сами формировать базы арендодателей и оказывать услуги риелторов. Поэтому нельзя однозначно сказать, что авторы The Locals вошли в рынок. Но они нашли свою нишу между блогосферой и офлайн-бизнесом.  Как зарабатывать на блоге The Blonde Salad: блог о моде принес автору миллионы долларов Сегодня Кьяра Ферраньи — один из самых авторитетных экспертов индустрии моды, светская львица и успешный бизнесмен. А начинала она в 2009 году с блога The Blonde Salad. На регистрацию журнала бойфренд Кьяры потратил около 10 долларов. В блоге Кьяра публиковала преимущественно собственные фото в модной одежде.  История Ферраньи уникальна, так как ей удалось успешно монетизировать блог с помощью двух подходов. Во-первых, выстрелила рекламная модель монетизации. Журнал стал очень популярным. Ежемесячная аудитория издания, в котором уже трудятся десятки сотрудников, составляет 500 тыс. человек. Реклама и партнерские продажи приносят доход 1,5 млн долларов в месяц. Хороший повод не сбрасывать со счетов рекламную модель, правда?  Во-вторых, блогер не просто вошла в рынок, а нырнула в него с головой. Кьяра Ферраньи успешно эксплуатирует свою внешность и популярность. Ведущие модные дома считают за честь подарить девушке предметы из новых коллекций. А появление Кьяры на показе одежды обходится организаторам в 50 тыс. долларов.  Ферраньи создала собственную коллекцию обуви. В 2014 году продажи принесли ей прибыль в размере 5 млн долларов.  Как зарабатывать на блоге Бешеная сушка: от аккаунта Instagram до прибыльного онлайн-проекта Автор проекта «Бешеная сушка» Василий Смольный начинал даже не с полноценного блога, а с аккаунта в Instagram. В 2011 году мужчина поменял образ жизни: он стал заниматься фитнесом и правильно питаться. Смольный публиковал собственные фото в популярной соцсети.  Василий организовал онлайн-марафон по похудению. За скромные 500 рублей каждый желающий мог соревноваться за главный приз, который составлял несколько десятков тысяч рублей. Сегодня в марафоне разыгрываются машины и квартиры, а стоимость участия выросла до 3000 рублей. Блог в «Инстаграме» превратился в онлайн-проект с миллионными оборотами.  Как зарабатывать на блоге Нетипичный случай: блог с платной подпиской стал альтернативой СМИ Автор World Politics Review Хэмптон Стивенс получил диплом специалиста по международным отношениям в 2006 году. Он решил стать журналистом-международником, но популярные издания неохотно печатали материалы Стивенса.  Хэмптон стал публиковать политические обзоры в блоге. Журнал стал очень популярным. Блогер сделал доступ к большинству материалов платным. Это позволило нанимать журналистов-фрилансеров, а также платить зарплату продавцу-фултаймеру.  Блог превратился в полноценное онлайн-издание, которое приносит прибыль благодаря платным подпискам. World Politics Review позиционируется в качестве альтернативы мэйнстримным СМИ, так как журнал работает по принципам независимой журналистики.  Можно ли назвать историю World Politics Review успешным входом в рынок? Да, так как автор превратил личный блог в прибыльное медиа-издание, которое конкурирует с Washington Post и National Journal. А еще история успеха Стивенса показывает, что даже в эпоху девальвации контента можно зарабатывать с помощью платных подписок.  Как зарабатывать на блоге История простого компьютерщика Благодаря блогу Мэтью Родела ушел с работы и стал предпринимателем. Мэт очень хотел открыть мастерскую по ремонту компьютеров. Но ему было страшно бросать работу со стабильной зарплатой. Тогда Родела стал вести блог о компьютерах. Журнал стал популярным, а у автора появились постоянные читатели и потенциальные клиенты.  В 2008 году мужчина открыл мастерскую, но продолжал параллельно работать по найму. В 2011 он стал зарабатывать достаточно, чтобы уйти с работы. Мэтью по-прежнему ведет блог. В нем можно найти полезную информацию о ремонте и эксплуатации компьютеров. Также Родела учит читателей открывать собственные мастерские.  По словам блогера, ведение журнала помогло ему психологически. В блог приходили сотни читателей в сутки. Благодаря этому Мэтью поверил, что найдет реальных клиентов.  Как зарабатывать на блоге Монетизировать блог можно двумя способами Первый — это продажа рекламы. Инструментов для реализации рекламной модели тысячи: от «Директа» и AdSense до тизерных сетей и партнерских программ. Монетизация с помощью рекламы работает. Но вы смело можете продолжить этот тезис словами «пока еще».  Рекламная слепота аудитории снижает эффективность коммерческих сообщений. Рекламодатели ищут альтернативные маркетинговые инструменты, а доходы издателей падают. Да, успешные примеры монетизации с помощью рекламы есть. Но перспективы рекламной модели монетизации мягко говоря туманные. Поэтому будьте реалистами при планировании инструментов получения доходов от блога.  Второй способ — участие в рынке. Если у вас есть бизнес, запускайте блог для привлечения клиентов. Если у вас есть блог, делайте бизнес для монетизации журнала. Участвовать в рынке можно по-разному. Fashion-блогер Ферраньи создала коллекцию модной одежды. Автор блога о компьютерах Родела открыл мастерскую по ремонту компьютеров. А вы ищите бизнес-возможности в нише, о которой пишете.  Можно ли зарабатывать деньги другими способами, например, с помощью платной подписки или сбора пожертвований? Попробуйте сами, а потом поделитесь опытом в комментариях.",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 4,
    "tag": [
      22,
      41
    ]
  }
},
{
  "model": "articles.article",
  "pk": 37,
  "fields": {
    "registration_time": "2022-07-13T14:51:13Z",
    "slug": "ot-chego-zavisit-stoimost-razrabotki-sajta",
    "is_active": true,
    "title": "От чего зависит стоимость разработки сайта",
    "body": "Это заметка поможет вам договариваться с разработчиками и понимать, насколько объективно агентства и фрилансеры оценивают свои услуги.  От чего зависит стоимость разработки сайта Дата публикации: 20 февраля 2021 Дата обновления: 8 июля 2022 Дмитрий Дементий 64 607 Время чтения: 20 минут Представьте себя продавцом в магазине бытовой техники и скажите воображаемому покупателю, сколько стоит бойлер. Что там бойлер, даже вопрос о стоимости мороженого или сока слишком неконкретный. Чтобы на него ответить, нужно знать ряд переменных:  какой именно продукт хочет покупатель; сколько он весит; из каких продуктов сделан; кто производитель; в каком городе и в каком магазине продается. Читайте также Приложения для разработки приложений: как сделать приложение для iOS и Android самостоятельно Приложения для разработки приложений: как сделать приложение для iOS и Android самостоятельно Что такое семантическое ядро и как его составлять Что такое семантическое ядро и как его составлять Как сократить ссылку: обзор 11 сервисов Как сократить ссылку: обзор 11 сервисов С сайтом ситуация та же: чтобы назвать стоимость разработки, подрядчик должен понять, что именно хочет заказчик.  Наглядный пример: простой сайт-визитка обойдется компании дешевле, чем интернет-магазин. У этих сайтов разная анатомия и физиология, то есть строение и функциональность.  Сайт-визитка состоит из нескольких страниц. Он информирует посетителя, собирает информацию о пользователях, дает возможность позвонить или написать в отдел продаж.  Интернет-магазин же состоит из сотен или тысяч страниц. Помогает посетителям:  Искать товары и сравнивать их цены. Оформлять и оплачивать покупки. Составлять списки желаний и делиться ими. Следить за новинками, товарами определенной категории или производителя. Отслеживать покупки и доставку в личном кабинете. Получать и тратить бонусы, участвовать в акциях. Еще один наглядный пример: сделать простой блог на WordPress можно за пару минут. Такой сайт стоит 0 рублей, даже за хостинг платить не надо. А если нужен коммерческий standalone-сайт на том же WordPress, придется потратить деньги или время. Что влияет на стоимость разработки сайта В этом разделе поговорим о факторах, которые влияют на стоимость создания сайта.  Цены на домен и хостинг Бесплатно можно получить домены третьего уровня. Они выглядят так: vash-site.tilda.ws или vash-site.wordpress.com. Чтобы получить бесплатный домен, нужно создать сайт на какой-то платформе, например, на Tilda.  Хостинг-провайдеры иногда проводят акции: дарят домены второго уровня при покупке хостинга, раздают домены в экзотических доменных зонах, например, .tk или .gq. Некоторые бесплатные хостинги предоставляют также бесплатные домены, например, хостинг Beget и 2domains.  Домен может обойтись очень дорого, если его придется покупать у киберсквоттеров. Эти ребята регистрируют крутые домены и перепродают их с огромной накруткой. Подробную информацию о выборе домена ищите в нашей бесплатной книге «Как создать сайт самому».  Хостинг тоже стоит по-разному. Бесплатно можно хостить сайты, созданные с помощью SaaS-платформ типа «Тильды» или Wix. Для огромных проектов, которые организуют собственные дата-центры, покупают и обслуживают серверы, расходы на хостинг будут очень значительными.  К счастью, в большинстве случаев на первых этапах работы сайта огромные расходы не нужны. У нас есть исчерпывающее руководство по выбору хостинга. Публикация поможет прицениться к услугам провайдеров.  Стоимость движка Дорого будет стоить разработка и поддержка эксклюзивных CMS, на которых работают сайты масштабов Ozon.ru. А бесплатно можно пользоваться популярными конструкторами и CMS с открытым кодом.  У нас есть подробная статья о выборе движка для сайта. К ней можно добавить несколько субъективных тезисов:  Большинству проектов хватит типовой функциональности популярных CMS с открытым кодом. Если типовой функциональности не хватает, ее можно докупить или допилить. Бесплатные движки развиваются и реагируют на угрозы быстрее коммерческих проектов благодаря сообществам. Я не знаю причин, кроме личных предпочтений, по которым стоило бы отказаться от WordPress. WordPress подходит для сайтов любого типа: от интернет-магазина до коммерческого сайта, от личного блога до портала. Если функциональность готовых движков не подходит, придется вложиться в разработку эксклюзивных решений. Например, мы делаем сайты на фреймворках Laravel и Yii2.  И еще один тезис: в гиковских тусовках известные CMS типа WordPress, Drupal или «Битрикс» все чаще называют устаревшими или legacy. На смену привычным движкам идут генераторы статичных сайтов типа Jekyll или Gatsby JS, с помощью которых можно создавать прогрессивные веб-приложения или PWA. Но гибриды сайтов и приложений это тема отдельного разговора.  Планирование структуры сайта Это базовый этап разработки сайта. Здесь собирается семантическое ядро, составляется карта релевантности. По ней строится структура сайта.  Собрать семантическое ядро можно самостоятельно. В этом случае вы сэкономите деньги на этапе создания сайта. Есть риск: слишком узкое семантическое ядро ограничит трафик и приведет к ошибкам в структуре ресурса.  Проверьте своего SEO-шника на честность: гайд для заказчиков Проверьте своего SEO-шника на честность: гайд для заказчиков  Настройка движка В комплекс работ входит установка модулей и темы, а также техническое SEO, или настройка сайта под требования поисковых систем.  Самостоятельно и бесплатно можно настроить простой сайт-визитку или корпоративный сайт на WordPress. Инфраструктура этой CMS позволяет реализовать нужную функциональность без привлечения технических специалистов. А чтобы знать, что настраивать, изучите наш триптих о WordPress:  WordPress часть 1. WordPress часть 2. WordPress часть 3. В качестве бонуса держите гайд по настройке интернет-магазина на WordPress и WooCommerce.  Но если вы делаете ecommerce-сайт, как минимум проконсультируйтесь с профессионалами. У интернет-магазинов непростая функциональность, они сложно устроены под капотом. Поэтому одного гайда для начинающих может быть мало.  Не обойтись без помощи специалистов и при работе с другими движками. У Joomla!, Drupal, OpenCart и остальных CMS инфраструктура развита не так хорошо, как у WordPress. Поэтому найти готовые решения для реализации и настройки нужной функциональности намного сложнее.  Стоимость дизайна Микробизнесу и стартапам вполне можно обойтись шаблонными решениями и не тратить на дизайн ни копейки. Если вы делаете сайт-визитку или портфолио на WordPress, воспользуйтесь подборкой бесплатных тем.  Если нужен сайт с уникальным дизайном, придется раскошелиться на услуги дизайнера и разработчика. Если хотите немного сэкономить, сделайте самостоятельно прототип. Поможет подборка наших публикаций:  «22 инструмента для прототипирования». «Как использовать сетки при прототипировании». «Как сделать прототип в Axure». А чтобы разговаривать с дизайнером на одном языке, изучите подборку статей с нашего сайта.  Стоимость уникального дизайна сайта в первую очередь зависит от сложности интерфейса и оформления. Также играет роль квалификация и репутация дизайнера.  Реализация функциональности Функциональность – то, как сайт взаимодействует с пользователем. Например:  Функциональность блога «Текстерры» позволяет отфильтровать самые расшариваемые материалы, выбрать рубрику или просмотреть все статьи автора. Функциональность сайта «Связного» помогает найти смартфон с заданными характеристиками, добавить его в корзину, оформить и оплатить заказ. Функциональность сайта Saxo Bank дает возможность торговать на мировых биржах производными финансовыми инструментами прямо в браузере. Шаблонная функциональность доступна бесплатно. Например, можно сделать сайт на WordPress, установить и настроить любой ecommerce-плагин и торговать.  Если нужно расширить шаблонную функциональность или реализовать взаимодействие с пользователем с нуля, придется вкладывать средства. В этом случае исполнитель выясняет потребности владельца сайта, согласовывает ТЗ, реализует и интегрирует нужную функциональность.  Создание контента и продвижение Создавать контент и продвигать сайт можно самостоятельно. Бустрэппинг можно использовать, если у вас в запасе много времени. Если же результат нужно получить в течение хотя бы нескольких месяцев, стоит купить услуги профессиональных контент-мейкеров и маркетологов.  Конкретную сумму назвать сложно: она зависит от масштабов проекта, а также вашей фантазии и финансовых возможностей.  Поддержка и администрирование сайта, обучение пользователей Бесплатную поддержку получают владельцы сайтов на конструкторах. Обучиться администрированию таких сайтов можно самостоятельно в течение нескольких часов.  Платной будет поддержка для сайтов со сложной функциональностью и нестандартными программными решениями. Ее стоимость зависит от особенностей проекта. Например, поддержка сайта на WordPress стоит относительно недорого. Движок регулярно обновляется, поэтому администратору достаточно следить за актуальностью плагинов и при необходимости менять устаревшие модули на аналогичные новые.  Поддержка сайта на самописной CMS обойдется дороже. Придется платить за обновления ядра и функциональных компонентов.  Разрабатываем и продвигаем сайты Быстро и эффективно  Подробнее Разрабатываем и продвигаем сайты Как определяется стоимость разработки на практике: опыт «Текстерры» Стоимость сайта зависит от того, какой сайт нужен, и будет ли это уникальная разработка или шаблонное решение. Это, в свою очередь, зависит от задач, потребностей и желаний клиента.  Основные моменты, которые влияют на стоимость сайта:  Тип сайта (визитка, информационный, каталог, интернет-магазин). Насколько сложной будет структура. Какое количество уникальных страниц нужно разработать для сайта. Нужно ли собирать семантику, или она уже есть в готовом виде. Насколько сложный нужен дизайн. Насколько сложной затем будет верстка макетов. Какой функционал нужно реализовать. Для выяснения этих моментов заказчику задают общие фундаментальные вопросы о его видении проекта. Получив на них ответы, исполнитель может обозначить базовую стоимость создания сайта. Это цена разработки типового решения без учета нюансов конкретного проекта. Например, вот стоимость таких базовых вариантов в «Текстерре».  К базовой стоимости сайта прибавляется цена реализации функциональности, необходимой конкретному проекту. Это может быть:  Набор интеграций с внешними службами, например, платежными сервисами, кол-трекингом, CRM. Реализация специальной функциональности (калькуляторов стоимости строительства дома, личного кабинета вкладчика и др.). Сложные визуальные решения, например, 3D-анимация. Стоимость разработки сайта отличается от исполнителя к исполнителю. Крупное агентство, небольшая региональная студия и фрилансер, скорее всего, назовут разные ценники, и это нормально. При работе с опытным агентством заказчик может рассчитывать на:  Гарантированно высокую квалификацию специалистов. Оперативность. Работу по договору и связанную с этим безопасность. Гарантию результата. От чего же зависит стоимость разработки Цена на разработку зависит от того, каким должен быть ваш сайт, то есть от необходимой функциональности, дизайна, платформы и т. д. Поэтому главный вывод по итогам статьи такой: перед обращением к разработчикам нужно понять, что вам нужно.  Также нужно как можно больше узнать о сайтах и веб-разработке, то есть стать хотя бы минимально квалифицированным заказчиком. Квалификация поможет разговаривать с подрядчиками на одном языке и получить по результатам сотрудничества нужный результат.  Кроме того, даже минимальные знания в веб-разработке защитят вас от не очень порядочных исполнителей. Тех, которые берут с заказчиков ровно столько денег, сколько те могут заплатить. И даже немного больше. Вам ведь это не надо, правда?",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 4,
    "tag": [
      22,
      30,
      14,
      42,
      17
    ]
  }
},
{
  "model": "articles.article",
  "pk": 38,
  "fields": {
    "registration_time": "2022-07-13T14:53:32Z",
    "slug": "kazhdomu-makbuk-i-massazh-po-chetvergam-chto-dolzhno-byt-v-ofise-chtoby-v-nego-hotelos-hodit",
    "is_active": true,
    "title": "«Каждому макбук и массаж по четвергам»: что должно быть в офисе, чтобы в него хотелось ходить",
    "body": "Помните, как в 2020 году все экстренно вышли на удаленку? Не будем углубляться в древнюю статистику, просто скажем, что порядка 62% людей в тот момент работали из дома – полностью или отчасти (исследование Owl Labs).   Спустя пару лет настроения изменились. Теперь нам снова хочется болтать с коллегами в офисе, ворчать на тех, кто греет рыбу в микроволновке, и наконец-то избавиться от Zoom-встреч по каждой мелочи.   «Нам» – это ребятам из контент-бюро «Ишь, Миш!». С 2014 года и по сей день мы топим за то, что совместная работа в офисе сближает, помогает эффективнее выстраивать процессы и вообще топ.   В этой статье рассказываем, что делаем, чтобы сотрудники были того же мнения!  контент-бюро «Ишь, Миш!»  Сейчас будет фраза кэпа: есть всего два компонента счастливой офисной работы – люди и то, что их окружает. Начнем с окружения.   Пристегнитесь, экскурсия по нашему креативному офису начинается райт нау:   Входная зона  Сразу у входа нас встречает наградной стеллаж, на котором с гордостью пылятся статуэтки от WOW Awards, «Первого фестиваля рекламы» и «Серебряного лучника». Там же периодически появляются мотивационные цитаты и мемы – как пойдет.   Правее – фотозона. Так уж исторически сложилось, что ни один гость не уходит от нас, не сделав кадры напротив.  Контент-бюро «Ишь, Миш!»  Почти опенспейс (лучше) Основное рабочее пространство – это три огромных стола. Видите, что один находится поодаль? Когда-то вместо него была глухая стена, но с ростом агентства нам стало тесновато, так что мы поступили радикально – сломали стены и расширили офис в два раза.   Контент-бюро «Ишь, Миш!»  Столы поделены на зоны. За дальним работают наши директора Миши (те самые ребята, благодаря которым мы «Ишь, Миш!») и лиды, за ближайшим к выходу – копирайтеры, контент-продюсеры и проджект-менеджеры. Стол у окна издавна занят дизайнерами и видеографами.   Пожалуй, самое приятное в нашей креативной норе – огромные окна и отличная освещенность. А для тех, кто хочет отдохнуть во мраке, есть игровая.  Игровая комната Самое притягательное и по совместительству темное место во всем офисе – наша точка притяжения. Вот она слева направо: пуфы, диваны, «плойка», кикер, тренировочная груша, дартс и балансборд. На последнем особенно любит эквилибрировать директор по клиентам Катя.   Контент-бюро «Ишь, Миш!»  Еще в игровой стоят два акустических дивана. Занимают ли их в первые 5 минут рабочего дня? О, да. Охотятся ли на них весь оставшийся день? Непременно.   По четвергам к нам приезжает перкуссионный массажист Антон и делает всем желающим массаж шеи. То есть ВСЕМ.   Подкастошная и переговорная Ага, подкасты для клиентов мы тоже записываем. А в свободное время в этой комнатке уединяются серьезно поговорить по телефону «о трехзначных суммах».   Контент-бюро «Ишь, Миш!»  Переговорка – просто переговорка. Обычно тут генерируются контент-планы, поэтому если постоять рядом, можно услышать отголоски фраз «Уже было…» и «Не согласуют…».   Контент-бюро «Ишь, Миш!»  Кухня Самое святое место, где хранится запас чая до 2025 года и открытки из Турции образца 2017 года. Год назад здесь состоялся великий рыбно-микроволновый конфликт – много наших полегло.  Контент-бюро «Ишь, Миш!»  КОМАНДА Микроволновка, груша и футбол – это, конечно, здорово, но мы предвидим ваши комментарии: слишком отдает эйчаровским «чай с печеньками в неограниченном количестве».   Контент-бюро «Ишь, Миш!»  Вторая и главная причина, по которой наши ребята с удовольствием ходят в офис – традиции.   Инспирейшны Контент-бюро «Ишь, Миш!»  Самая давняя и прекрасная из традиций – пятничные инспирейшны. Это посиделки за бокалом сока, в рамках которых ребята из команды рассказывают о нюансах своей работы. И не только:   Медиа-юрист Михаил Хохолков пришел в гости и рассказал об авторском праве при подготовке текстов с визуалами. Продюсер Даша запилила презентацию о трендах в рекламе.   Копирайтер Дарья, комьюнити Настасья и дизайнер Ульяна научили нас правильной сортировке мусора.   Без инспирейшнов в нашей работе никуда.  Вот ведь какое дело: мы всеми силами топим за стереоконтент – единую коммуникацию в разных каналах, каждый из которых дополняет друг друга. Поэтому, скажем, копирайтерам жизненно важно знать не только оранжевую книжку Ильяхова, но и специфику рекламного кабинета ВКонтакте. А контент-продюсерам – алгоритмы Яндекс Дзена и особенности Telegram.   Яблоки Контент-бюро «Ишь, Миш!»  Еще одна традиция: все сотрудники бюро работают на макбуках. С этим связана забавная история. Бывает, что новенький сотрудник, раньше не имевший дела с «яблочной» техникой, сидит с лицом лица и пытается разобраться с дьявольским тачпадом. Тогда на помощь приходит гендир Миша.   Метод Миши: представьте, что экран «мака» – это лист А4. Когда мы читаем документ на листе, то постепенно поднимаем его наверх, чтобы добраться до нижних строчек. То же самое с интерфейсом макбука: листать страницы нужно не сверху вниз, а снизу вверх.   Корпораты и мемофоны Если инспирейшн – это все-таки работа, то корпоративы и мемофоны – наша отдушина. Про корпораты рассказывать нечего: весело, квестово, командно. А вот мемофон – наша особая гордость. Вместо тысячи слов.   Контент-бюро «Ишь, Миш!»  Обучение  Говорят, что диджитал не стоит на месте. Это правда: он меняется быстрее, чем курс валют за последние месяцы. Поэтому мы вкладываем ресурсы в обучение:   Стратег Дима прошел Strategy boot camp от Mads  Таргетолог Женя сейчас проверяет скиллы в Mytarget  Контент-продюсер Маруся училась в Студии Чижова по направлению контент-маркетинга  Боевой взвод копирайтеров в лице Насти, Даши и Полины прошел курс Максима Ильяхова «Сильный текст в соцсетях».   Сейчас всей командой слушаем большой курс по сценарному мастерству от Александры Митюшовой – сценариста из Big Bag Films и продюсера Ural Digital.   ВЫВОД  Контент-бюро «Ишь, Миш!»  К чему мы это все рассказали?   Офис – это здорово. Здесь мы видим друг друга, общаемся и быстро решаем минутные задачи не создавая видеоконференции по поводу и без. Считаем, что работать так – наиболее эффективно для нас и, как следствие, для клиентов.   P. S. У адептов удаленки есть аргумент, против которого не поспоришь – дома лучше высыпаешься. Поэтому еще одна наша традиция: раз в неделю (по своему желанию) любой сотрудник остается дома и работает, завернувшись в одеялко.",
    "user": "178f7e0c-2a36-477e-99d8-a282a64f33b7",
    "category": 4,
    "tag": [
      22
    ]
  }
},
{
  "model": "articles.article",
  "pk": 39,
  "fields": {
    "registration_time": "2022-07-13T14:54:07Z",
    "slug": "nabor-poleznyh-ssylok-dlya-rukovoditelya-smm-agentstv",
    "is_active": true,
    "title": "Набор полезных ссылок для руководителя SMM-агентств",
    "body": "Индустрия digital-услуг (в частности, SMM) богата на инфраструктуру: у нас есть и отраслевые рейтинги, и курсы, и сообщества, и даже целые центры сертификаций. Но руководитель агентства может легко пропустить важный источник данных или площадку, заблудившись в информационном водовороте.   Чтобы помочь вам избежать подобных ситуаций, я подготовил инфографику в формате digital-гида, продублировав ее содержание ссылками (при этом с дополнениями, которые подсказали мои коллеги в обсуждении на Facebook, за что им огромное спасибо). Все ссылки разделены на категории. Надеюсь, оба формата подачи информации будут удобными и полезными для вас.  Советую сохранить эту страницу в закладках, чтобы всегда держать под рукой. А инфографика в исходном размере будет в конце материала.  Рейтинги «Рейтинг Рунета»  Ruward  Wadline  Sostav.ru  AdIndex  AllAdvertising  SEOnews  All Seo  Премии и конкурсы «Рейтинг Рунета»  Ruward Award  «Золотой Сайт + Золотое Приложение»  Awwwards  CSS Awards   G8  The FWA  Digital Award  ADCR Awards  MIXX Russia Awards  Wadline  The Best Mobile App Awards  Тендеры Workspace  Центры сертификации Ruward  Сервисы аналитики соцсетей LiveDune СМИ Журналы и блоги, на которых можно найти материалы по теме развития агентского бизнеса.  «Лайкни»  CMS Magazine  Cossa  vc.ru  Sostav.ru  AdIndex  Medium  «Хабр»  Spark  Kraftblick.Media  Блог Marilyn  PPC World  SEOnews  AppTractor      Сообщества Ассоциации, комьюнити, кластеры и другие форматы площадок, объединяющие руководителей digital-агентств.  Управление агентством, веб-студией, дизайн-бюро  ARDA  SPECIA  РАЭК  Клуб руководителей агентств  Топ-менеджмент в digital  Веб-студии и ИТ-разработчики  Мероприятия Конференции и другие форматы event’ов, в программе которых есть доклады по развитию агентского бизнеса.  Российский Интернет Форум  AGIMA Partners' Weekend  GP DAYS    3D CONF  Sales Sparring  Mind-15  Большая агентская конференция Яндекс  Суровый питерский SMM  Baltic Digital Days  PROagency  Callday Agency  Digital Оттепель  Курсы Метод Андрея Терехова:  PR и маркетинг.  Продажи и клиентский сервис.  rassvet.school  AGIMA executive  MAED  WebCanape  Борис Шпирт – курс для аккаунт-менеджеров  Книги Развитие веб-студии/агентства: 33 точки роста (Константин Заруцкий)  Управление фирмой по разработке цифровых продуктов на заказ (Макс Десятых) [аудиоверсия]   Отчаянные аккаунт-менеджеры (Борис Шпирт)  Бизнес на конвейере, или как построить прибыльное агентство в кризис (Василий Чуранов)  Шаблоны документов Библиотека документов Workspace  Facebook Digital-People, на которых стоит подписаться, чтобы следить за постами на тему агентского бизнеса.  Константин Заруцкий  Анатолий Денисов  Сергей Бесшабашнов  Андрей Терехов  Евгений Чернов  Анна Караулова  Света Ерохнович (Круцких)  Олег Чулаков  Павел Короткий  Александр Богданов  Виталий Быков (Кайс Нобель)  Макс Десятых  Андрей Гавриков  Никита Михеенков  Telegram Чаты Чат сообщества «Управление агентством»  Digital: партнерства и поиск подрядчиков  Агентства о своих проблемах  AGIMA Partners’ Weekend 2021  Бизнес студии  Каналы Управление агентством  Заруцкий_пишет  Chulakov Notes  Орехов. Бизнес как система  Творческий Руководитель  YouTube Одной ногой в диджитал  Зарубеж Clutch (международный рейтинг)  SoDA (сообщество)  DAN (сообщество)  Agency Management Institute  The Creative Agency Podcast  Function Point (блог сервиса)  Jason Swenk (YouTube-канал консультанта)  Karl Sakas (блог консультанта)  Robert Craven (блог консультанта)",
    "user": "e6f5d086-2a5e-441f-8b8f-210da1e91c71",
    "category": 4,
    "tag": [
      22,
      43
    ]
  }
},
{
  "model": "articles.article",
  "pk": 40,
  "fields": {
    "registration_time": "2022-07-13T14:56:08Z",
    "slug": "5-prichin-pochemu-telegram-stanovitsya-ochen-populyarnym-v-mire",
    "is_active": true,
    "title": "5 причин, почему Telegram становится очень популярным в мире",
    "body": "22 июня Павел Дуров, основатель Telegram, объявил о запуске платной подписки Telegram Premium и заявил, что мессенджер посещают 700 млн пользователей в месяц. Блогер Алексей Бегин попытался разобраться в причинах нарастающей популярности Telegram и поделился с нашим изданием статистическими данными.  Пользовательская база Telegram растет на 40% каждый год, начиная с запуска мессенджера в 2013 году. С 2018 года аудитория Telegram выросла более чем в два раза, а за последние восемь лет количество пользователей увеличилось на 1571%.  Количество пользователей Telegram  В 2022 году приложение Telegram для iOS App Store и Google Play входит в топ-5 самых скачиваемых приложений в мире. Примечательно, что в 2021 году Telegram тоже входил в пятерку лучших приложений.  Количество скачиваний Telegram  Согласно данным TGStat, больше всего каналов Telegram зарегистрировано в России (355 000 каналов) и Иране (91 000 каналов). Суммарная аудитория каналов Telegram в этих странах превышает 3 млрд пользователей: Россия – более 1,78 млрд, Иран – более 1,34 млрд.  Количество каналов и чатов в Telegram  Помимо обычных пользователей в Telegram создали аккаунты некоторые политические лидеры, которые, безусловно, повышают привлекательность мессенджера в мире. Одними из первых в Telegram зарегистрировались президент Бразилии Жаир Болсонару и президент Турции Реджеп Тайип Эрдоган.  Международные лидеры в Telegram  Политик из России тоже активно пользуются Telegram. Так, например, наибольшее количество подписчиков наблюдается у Рамзана Кадырова, Дмитрия Медведева и Вячеслава Володина.  По результатам опроса 70 000 человек в 2021 году, проведенного аналитическим сервисом Statista, 69% пользователей считают Telegram самым удобным мессенджером.  Зачем люди используют Telegram  В настоящее время Telegram заблокирован в 3 странах (Китай, Пакистан и Иран), тогда как WhatsApp заблокирован в 6 странах.  В каких странах заблокирован Telegram  В 2022 году за право называться лучшим мессенджером мира Telegram конкурирует с WhatsApp, Messenger и Snapchat, а также, с китайскими WeChat и QQ.  Самые популярные мессенджеры  Заключение 2022 год стал для Telegram временем взрывного роста. Наверное, поэтому популярный мессенджер теперь так активно вводит монетизацию – сначала рекламные сообщения, а теперь появилась платная подписка Telegram Premium.  Блокировка в России осталась в прошлом для Telegram, российская аудитория растет нарастающими темпами и уже сейчас Telegram конкурирует по охвату аудитории со своим «старшим братом» ВКонтакте. Это свидетельствует, что теперь Telegram – одна из лучших медиаплощадок в стране.",
    "user": "08e89b6e-1fb9-47d0-a060-ab390b3168fc",
    "category": 4,
    "tag": [
      22,
      46,
      45
    ]
  }
}
]
