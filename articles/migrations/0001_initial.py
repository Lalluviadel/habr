# Generated by Django 3.2.14 on 2022-07-12 11:28

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HabrUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.UUID('3cde54c9-dac6-4731-ada2-1b02339263af'), editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=128, unique=True, verbose_name='логин')),
                ('first_name', models.CharField(max_length=128, verbose_name='имя')),
                ('last_name', models.CharField(max_length=128, verbose_name='фамилия')),
                ('avatar', models.ImageField(blank=True, upload_to='users_avatars')),
                ('email', models.CharField(max_length=128, unique=True, verbose_name='email')),
                ('age', models.PositiveIntegerField(default=18, verbose_name='возраст')),
                ('registration_time', models.DateTimeField(default=datetime.datetime(2022, 7, 12, 14, 28, 44, 490388), verbose_name='время регистрации')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='пользователь активен')),
                ('activation_key', models.CharField(blank=True, max_length=128, verbose_name='ключ подтверждения')),
                ('activation_key_expires', models.DateTimeField(default=datetime.datetime(2022, 7, 14, 14, 28, 44, 490388), verbose_name='актуальность ключа')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('uuid',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='раздел активен')),
            ],
            options={
                'verbose_name': 'Раздел сайта',
                'verbose_name_plural': 'Разделы сайта',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=128, verbose_name='наименование')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Теги',
                'verbose_name_plural': 'Тег',
                'ordering': ('tag_name',),
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_time', models.DateTimeField(default=datetime.datetime(2022, 7, 12, 14, 28, 44, 494391), verbose_name='время создания')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('is_active', models.BooleanField(db_index=True, default=False, verbose_name='статья активна')),
                ('title', models.CharField(max_length=128, verbose_name='заголовок')),
                ('body', models.CharField(max_length=100000, verbose_name='тело')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='articles.category')),
                ('tag', models.ManyToManyField(to='articles.Tag')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
                'ordering': ['-registration_time'],
            },
        ),
    ]
